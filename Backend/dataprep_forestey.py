# -*- coding: utf-8 -*-
"""DataPrep_ForestEY.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ortoi7qJ7A3ORZ1BH2Lucn6myLdR8RkT
"""

import pandas as pd
import numpy





main.head()

len(main['State/UT'].unique())

main['State/UT'].unique()

air = pd.read_csv('/content/data.csv',encoding='cp1252')

air

"""#AIR"""

air['year'] = pd.DatetimeIndex(air['date']).year

air.state.unique()

air.drop(air.loc[air['state']=='Uttaranchal'].index, inplace=True)

india

india = air.groupby(['year']).sum()

india['state'] = 'India'

india

air  = air.groupby(['year','state']).sum()

air['year']=air.index.get_level_values('year')

air['state']=air.index.get_level_values('state')

air = air.reset_index(drop=True)

india['year']=india.index

india.reset_index(drop=True)

air

india = india.reset_index(drop=True)

air_ = pd.concat([air,india], axis=0)

air_

air_.state.unique().sort()==main['State/UT'].unique().sort()



air_.to_csv('air.csv',index=False)

main['State/UT'].unique()

air.head(50)

"""#WATER"""

water = pd.read_excel('/content/datafile.xls')

water

water['SUBDIVISION'].unique()

len(water['SUBDIVISION'].unique())

replace_values = {'Assam & Meghalaya' : 'Assam', 'Naga Mani Mizo Tripura' : 'Tripura', 
                  'Sub Himalayan West Bengal & Sikkim' : 'Sikkim','Gangetic West Bengal':'West Bengal',
                  'Orissa' :'Odisha','East Uttar Pradesh':'Uttar Pradesh','West Uttar Pradesh':'Uttar Pradesh',
                  'Haryana Delhi & Chandigarh':'Haryana','West Rajasthan':'Rajasthan','East Rajasthan':'Rajasthan',
                  'West Madhya Pradesh':'Madhya Pradesh','East Madhya Pradesh':'Madhya Pradesh','Gujarat Region':'Gujarat',
                  'Saurashtra & Kutch':'Gujarat','Konkan & Goa':'Goa','Madhya Maharashtra':'Maharashtra','Matathwada':'Maharashtra',
                  'Vidarbha':'Maharashtra','Coastal Andhra Pradesh':'Andhra Pradesh','Rayalseema':'Andhra Pradesh','Coastal Karnataka':'Karnataka',
                  'North Interior Karnataka':'Karnataka','South Interior Karnataka':'Karnataka'}
water = water.replace({"SUBDIVISION": replace_values})

haryana = water[water['SUBDIVISION']=='Haryana']

haryana

col = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL',
       'AUG', 'SEP', 'OCT', 'NOV', 'DEC', 'ANNUAL', 'JF', 'MAM', 'JJAS',
       'OND']

for c in col:
  haryana.loc[:,c]=   haryana.loc[:,c]/3

haryana

delhi = haryana.copy()
delhi['SUBDIVISION']='Delhi'
delhi

chandigarh = haryana.copy()
chandigarh['SUBDIVISION']='Chandigarh'
chandigarh

water.drop(water.loc[water['SUBDIVISION']=='Haryana'].index, inplace=True)

haryana

water = pd.concat([water, haryana,chandigarh,delhi], axis=0)

len(water['SUBDIVISION'].unique())

assam = water[water['SUBDIVISION']=='Assam']
meghalaya = assam.copy()

for c in col:
  assam.loc[:,c]=   assam.loc[:,c]*0.25

for c in col:
  meghalaya.loc[:,c]=   meghalaya.loc[:,c]*0.75
meghalaya['SUBDIVISION']='Meghalaya'

water.drop(water.loc[water['SUBDIVISION']=='Assam'].index, inplace=True)

water = pd.concat([water, assam,meghalaya], axis=0)

water['SUBDIVISION'].unique()

water.columns

total =water.groupby(['YEAR'])[['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL',
       'AUG', 'SEP', 'OCT', 'NOV', 'DEC', 'ANNUAL', 'JF', 'MAM', 'JJAS',
       'OND']].sum()

total['SUBDIVISION']='India'

total['YEAR'] = total.index

total = total.reset_index(drop=True)

total

water = pd.concat([water, total], axis=0)

water.to_csv('water.csv',index=False)

"""#FIRE"""

fire = pd.read_csv("/content/datafile.csv")

len(fire['States/UTs'].unique())

fire['States/UTs'].unique()

fire

fire_ = fire.groupby('States/UTs').sum()
fire_.sum()

df = {'States/UTs': 'India', '2010-2011': 13898, '2009-10': 30892,'2008-09':24308}
fire = fire.append(df, ignore_index = True)

fire

fire.to_csv('fire.csv',index=False)



data = pd.read_csv('/content/Final_dataset.csv')

data.head()

india = data[data['State/UT']=='India']

india = india.groupby('Year')

import matplotlib.pyplot as plt

fig, ax1 = plt.subplots(figsize=(15, 10))
ax2 = ax1.twinx()
india['Total Forest Cover Area'].plot(kind='bar', color='y', ax=ax1)
india['SPM'].plot(kind='line', marker='d', ax=ax2)
ax1.yaxis.tick_right()
ax2.yaxis.tick_left()
plt.show()

india['SPM']

