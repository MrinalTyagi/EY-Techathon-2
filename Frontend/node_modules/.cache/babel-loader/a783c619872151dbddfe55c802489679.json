{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AAVAIG\\\\Desktop\\\\EY-Techathon-2\\\\Frontend\\\\src\\\\pages\\\\StatesPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport data from '../india.min.geo.json';\nimport GeoChart from '../components/GeoChart';\nimport { Button, ButtonGroup, Card, Carousel, Col, Container, Figure, Row, Spinner, Table, ToggleButton } from 'react-bootstrap';\nimport { FaArrowUp } from 'react-icons/fa';\nimport MapBox from '../components/MapBox';\nimport LineChart from '../components/maps/LineChartJs/LineChart';\nimport ComboChart from '../components/maps/ComboChart/ComboChart';\nimport GaugeChart from '../components/maps/GaugeChart/GaugeChart';\nimport PieChart from '../components/maps/PieChart/PieChart';\nimport LineChart2 from '../components/maps/LineChartJs/LineChart2';\nimport BarChart from '../components/maps/BarChart/BarChart';\nimport LineChart3 from '../components/maps/LineChartJs/LineChart3';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction StatesPage() {\n  _s();\n\n  const [normalSelected, setNormalSelected] = useState(true);\n  const [indiaData, setIndiaData] = useState([]);\n  const [dataApi, setDataApi] = useState([]);\n  const [years, setYears] = useState([]);\n  const [forestCover, setForestCover] = useState([]);\n  const [forestData, setForestData] = useState([]);\n  const [forestDataArray, setForestDataArray] = useState([]);\n  const [rainfall, setRainfall] = useState([]);\n  const [aqiParams, setAqiParams] = useState([]);\n  const [aqiArr, setAqiArr] = useState([]);\n  const [comboChartData, setComboChartData] = useState([]);\n  const params = useParams();\n  const [inputYear, setInputYear] = useState(2022);\n  const [inputArea, setInputArea] = useState('India');\n  const [predictedResult, setPredictedResult] = useState(665688.922946932);\n  const [view, setView] = useState('Normal View');\n\n  const fetchData = async () => {\n    const response = await fetch(`http://127.0.0.1:5000/${params.state}`, {\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log(data.Data);\n    setYears(Object.keys(data.Data));\n    setForestCover(years.map(item => data.Data[item]['Total Forest Cover Area']));\n    const annualRainfall = Object.keys(data.Data).map(year => [year, data.Data[year]['Annual Rainfall']]);\n    setRainfall(annualRainfall.filter(item => item[1] !== 0));\n    setDataApi([data.Data]);\n    const forestObj = Object.keys(data.Data).map(year => {\n      return {\n        year,\n        TFC: data.Data[year]['Total Forest Cover Area'],\n        VDC: data.Data[year]['Very Dense Forest Area'],\n        MDC: data.Data[year]['Moderately Dense Forest Area'],\n        MFC: data.Data[year]['Mangrove Forest Area'],\n        OFA: data.Data[year]['Open Forest Area'],\n        SLA: data.Data[year]['Scrub Land Area']\n      };\n    }); // console.log(forestObj);\n\n    const forestArr = Object.keys(data.Data).map(year => {\n      return [year, data.Data[year]['Total Forest Cover Area'], data.Data[year]['Very Dense Forest Area'], data.Data[year]['Moderately Dense Forest Area'], data.Data[year]['Mangrove Forest Area'], data.Data[year]['Open Forest Area'], data.Data[year]['Scrub Land Area']];\n    }); // console.log(forestObj);\n\n    setForestData(forestObj);\n    setForestDataArray(forestArr);\n    const aqiVal = {\n      year: 2015,\n      SO2: data.Data['2015']['SO2'],\n      NO2: data.Data['2015']['NO2'],\n      RSPM: data.Data['2015']['RSPM'],\n      SPM: data.Data['2015']['SPM'],\n      PM25: data.Data['2015']['PM25']\n    };\n    const aqiValArr = Object.keys(data.Data).map(year => {\n      return {\n        year: year,\n        SO2: data.Data[year]['SO2'],\n        NO2: data.Data[year]['NO2'],\n        RSPM: data.Data[year]['RSPM'],\n        SPM: data.Data[year]['SPM'],\n        PM25: data.Data[year]['PM25']\n      };\n    });\n    setAqiParams(aqiVal); // aqiValArr.forEach((val, idx) => console.log(aqiValArr[idx].year));\n\n    console.log(aqiValArr);\n    setAqiArr(aqiValArr);\n    const comboData = Object.keys(data.Data).map(year => [year, data.Data[year]['Total Forest Cover Area'], data.Data[year]['N_Annual_Rainfall'], data.Data[year]['N_SPM']]); // console.log(comboData);\n\n    setComboChartData(comboData); // const aqiVal =\n    // console.log(aqiVal);\n    // console.log(aqiVal[1][1]);\n  };\n\n  const onSubmitPostRequest = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('year', inputYear);\n    formData.append('area', inputArea);\n    console.log(inputYear, inputArea);\n    fetch('http://127.0.0.1:5000/predict/TFA', {\n      method: 'POST',\n      // mode: 'no-cors',\n      headers: {\n        'Access-Control-Allow-Origin': '*' // Accept: 'application/json',\n        // 'Content-Type': 'application/json',\n\n      },\n      // body: JSON.stringify({ year: inputYear, area: inputArea }),\n      body: formData\n    }).then(res => res.json()).then(data => {\n      console.log(data['Result']);\n      setPredictedResult(data['Result']);\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [dataApi.length]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"main-container\",\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          height: '100%'\n        },\n        className: \"map-page-row\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            height: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            style: {\n              height: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              style: {\n                height: '100%'\n              },\n              className: \"left-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"left-container__heading\",\n                onClick: e => console.log('Clicked'),\n                children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: \"DASHBOARD\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"left-container__top--tags\",\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: \"This is title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"This is a paragraph\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"left-container__top--stats\",\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: \"This is title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"This is a paragraph\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: true,\n          lg: 6,\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-toggle-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => setNormalSelected(true) // onClick={(e) => console.log('Clicked')}\n              ,\n              children: \"Normal View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: e => setNormalSelected(false),\n              children: \"Satellite View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), normalSelected ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(GeoChart, {\n              data: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(MapBox, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this)\n          }, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            height: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            style: {\n              height: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              style: {\n                height: '100%'\n              },\n              className: \"right-container\",\n              children: [/*#__PURE__*/_jsxDEV(Card, {\n                bg: \"light\" // border='light'\n                ,\n                style: {\n                  width: '262px',\n                  border: '1px transparent',\n                  height: '100%',\n                  overflow: 'hidden'\n                },\n                className: \"mb-2 right-container__top box-shadow-main\",\n                children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: dataApi.length === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"spinner\",\n                      style: {\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        height: '100%'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Spinner, {\n                        animation: \"border\",\n                        variant: \"primary\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 275,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 266,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(LineChart3, {\n                      dataApi: dataApi,\n                      forestCover: forestCover,\n                      years: years,\n                      forestData: forestDataArray\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 280,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card, {\n                bg: \"light\",\n                style: {\n                  width: '90%'\n                },\n                className: \"mb-2 right-container__bottom box-shadow-main global-card-styles\" // border='light'\n                ,\n                children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(ComboChart, {\n                    comboChartData: comboChartData\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: \"Total Count \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"map-page-row\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"container-card\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            bg: \"light\",\n            style: {\n              width: '90%'\n            },\n            className: \"mb-2 right-container__bottom box-shadow-main global-card-styles\" // border='light'\n            ,\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(GaugeChart, {\n                aqiParams: aqiParams,\n                aqiArr: aqiArr\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \"Total Count \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"container-card\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            bg: \"light\",\n            style: {\n              width: '90%'\n            },\n            className: \"mb-2 right-container__bottom box-shadow-main global-card-styles\" // border='light'\n            ,\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(PieChart // forestData={forestDataArray}\n              , {\n                forestDataObject: forestData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \"Total Count \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"container-card\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            bg: \"light\",\n            style: {\n              width: '90%'\n            },\n            className: \"mb-2 right-container__bottom box-shadow-main global-card-styles\" // border='light'\n            ,\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(LineChart2, {\n                rainfall: rainfall\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \"Total Count \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"map-page-row\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Mark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Otto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"@mdo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Jacob\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Thornton\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"@fat\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: 2,\n                children: \"Larry the Bird\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"@twitter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StatesPage, \"xJ0fTdYwHmnedUX28UWPHFsiWVU=\", false, function () {\n  return [useParams];\n});\n\n_c = StatesPage;\nexport default StatesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatesPage\");","map":{"version":3,"sources":["C:/Users/AAVAIG/Desktop/EY-Techathon-2/Frontend/src/pages/StatesPage.js"],"names":["React","useState","useEffect","data","GeoChart","Button","ButtonGroup","Card","Carousel","Col","Container","Figure","Row","Spinner","Table","ToggleButton","FaArrowUp","MapBox","LineChart","ComboChart","GaugeChart","PieChart","LineChart2","BarChart","LineChart3","useParams","StatesPage","normalSelected","setNormalSelected","indiaData","setIndiaData","dataApi","setDataApi","years","setYears","forestCover","setForestCover","forestData","setForestData","forestDataArray","setForestDataArray","rainfall","setRainfall","aqiParams","setAqiParams","aqiArr","setAqiArr","comboChartData","setComboChartData","params","inputYear","setInputYear","inputArea","setInputArea","predictedResult","setPredictedResult","view","setView","fetchData","response","fetch","state","headers","json","console","log","Data","Object","keys","map","item","annualRainfall","year","filter","forestObj","TFC","VDC","MDC","MFC","OFA","SLA","forestArr","aqiVal","SO2","NO2","RSPM","SPM","PM25","aqiValArr","comboData","onSubmitPostRequest","e","preventDefault","formData","FormData","append","method","body","then","res","length","height","display","flexDirection","justifyContent","position","width","border","overflow","alignItems"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,YAAP;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SACEC,MADF,EAEEC,WAFF,EAGEC,IAHF,EAIEC,QAJF,EAKEC,GALF,EAMEC,SANF,EAOEC,MAPF,EAQEC,GARF,EASEC,OATF,EAUEC,KAVF,EAWEC,YAXF,QAYO,iBAZP;AAaA,SAASC,SAAT,QAA0B,gBAA1B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,0CAAtB;AACA,OAAOC,UAAP,MAAuB,0CAAvB;AACA,OAAOC,UAAP,MAAuB,0CAAvB;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAOC,UAAP,MAAuB,2CAAvB;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAOC,UAAP,MAAuB,2CAAvB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsC3B,QAAQ,CAAC,IAAD,CAApD;AAEA,QAAM,CAAC4B,SAAD,EAAYC,YAAZ,IAA4B7B,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC8B,OAAD,EAAUC,UAAV,IAAwB/B,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACgC,KAAD,EAAQC,QAAR,IAAoBjC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACkC,WAAD,EAAcC,cAAd,IAAgCnC,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACoC,UAAD,EAAaC,aAAb,IAA8BrC,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACsC,eAAD,EAAkBC,kBAAlB,IAAwCvC,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACwC,QAAD,EAAWC,WAAX,IAA0BzC,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC0C,SAAD,EAAYC,YAAZ,IAA4B3C,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC4C,MAAD,EAASC,SAAT,IAAsB7C,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAC8C,cAAD,EAAiBC,iBAAjB,IAAsC/C,QAAQ,CAAC,EAAD,CAApD;AACA,QAAMgD,MAAM,GAAGxB,SAAS,EAAxB;AACA,QAAM,CAACyB,SAAD,EAAYC,YAAZ,IAA4BlD,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACmD,SAAD,EAAYC,YAAZ,IAA4BpD,QAAQ,CAAC,OAAD,CAA1C;AACA,QAAM,CAACqD,eAAD,EAAkBC,kBAAlB,IAAwCtD,QAAQ,CAAC,gBAAD,CAAtD;AAEA,QAAM,CAACuD,IAAD,EAAOC,OAAP,IAAkBxD,QAAQ,CAAC,aAAD,CAAhC;;AAEA,QAAMyD,SAAS,GAAG,YAAY;AAC5B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,yBAAwBX,MAAM,CAACY,KAAM,EAAvC,EAA0C;AACpEC,MAAAA,OAAO,EAAE;AACP,uCAA+B,GADxB;AAEP,wBAAgB;AAFT;AAD2D,KAA1C,CAA5B;AAMA,UAAM3D,IAAI,GAAG,MAAMwD,QAAQ,CAACI,IAAT,EAAnB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY9D,IAAI,CAAC+D,IAAjB;AAEAhC,IAAAA,QAAQ,CAACiC,MAAM,CAACC,IAAP,CAAYjE,IAAI,CAAC+D,IAAjB,CAAD,CAAR;AAEA9B,IAAAA,cAAc,CACZH,KAAK,CAACoC,GAAN,CAAWC,IAAD,IAAUnE,IAAI,CAAC+D,IAAL,CAAUI,IAAV,EAAgB,yBAAhB,CAApB,CADY,CAAd;AAIA,UAAMC,cAAc,GAAGJ,MAAM,CAACC,IAAP,CAAYjE,IAAI,CAAC+D,IAAjB,EAAuBG,GAAvB,CAA4BG,IAAD,IAAU,CAC1DA,IAD0D,EAE1DrE,IAAI,CAAC+D,IAAL,CAAUM,IAAV,EAAgB,iBAAhB,CAF0D,CAArC,CAAvB;AAKA9B,IAAAA,WAAW,CAAC6B,cAAc,CAACE,MAAf,CAAuBH,IAAD,IAAUA,IAAI,CAAC,CAAD,CAAJ,KAAY,CAA5C,CAAD,CAAX;AAEAtC,IAAAA,UAAU,CAAC,CAAC7B,IAAI,CAAC+D,IAAN,CAAD,CAAV;AAEA,UAAMQ,SAAS,GAAGP,MAAM,CAACC,IAAP,CAAYjE,IAAI,CAAC+D,IAAjB,EAAuBG,GAAvB,CAA4BG,IAAD,IAAU;AACrD,aAAO;AACLA,QAAAA,IADK;AAELG,QAAAA,GAAG,EAAExE,IAAI,CAAC+D,IAAL,CAAUM,IAAV,EAAgB,yBAAhB,CAFA;AAGLI,QAAAA,GAAG,EAAEzE,IAAI,CAAC+D,IAAL,CAAUM,IAAV,EAAgB,wBAAhB,CAHA;AAILK,QAAAA,GAAG,EAAE1E,IAAI,CAAC+D,IAAL,CAAUM,IAAV,EAAgB,8BAAhB,CAJA;AAKLM,QAAAA,GAAG,EAAE3E,IAAI,CAAC+D,IAAL,CAAUM,IAAV,EAAgB,sBAAhB,CALA;AAMLO,QAAAA,GAAG,EAAE5E,IAAI,CAAC+D,IAAL,CAAUM,IAAV,EAAgB,kBAAhB,CANA;AAOLQ,QAAAA,GAAG,EAAE7E,IAAI,CAAC+D,IAAL,CAAUM,IAAV,EAAgB,iBAAhB;AAPA,OAAP;AASD,KAViB,CAAlB,CA1B4B,CAsC5B;;AAEA,UAAMS,SAAS,GAAGd,MAAM,CAACC,IAAP,CAAYjE,IAAI,CAAC+D,IAAjB,EAAuBG,GAAvB,CAA4BG,IAAD,IAAU;AACrD,aAAO,CACLA,IADK,EAELrE,IAAI,CAAC+D,IAAL,CAAUM,IAAV,EAAgB,yBAAhB,CAFK,EAGLrE,IAAI,CAAC+D,IAAL,CAAUM,IAAV,EAAgB,wBAAhB,CAHK,EAILrE,IAAI,CAAC+D,IAAL,CAAUM,IAAV,EAAgB,8BAAhB,CAJK,EAKLrE,IAAI,CAAC+D,IAAL,CAAUM,IAAV,EAAgB,sBAAhB,CALK,EAMLrE,IAAI,CAAC+D,IAAL,CAAUM,IAAV,EAAgB,kBAAhB,CANK,EAOLrE,IAAI,CAAC+D,IAAL,CAAUM,IAAV,EAAgB,iBAAhB,CAPK,CAAP;AASD,KAViB,CAAlB,CAxC4B,CAoD5B;;AACAlC,IAAAA,aAAa,CAACoC,SAAD,CAAb;AAEAlC,IAAAA,kBAAkB,CAACyC,SAAD,CAAlB;AAEA,UAAMC,MAAM,GAAG;AACbV,MAAAA,IAAI,EAAE,IADO;AAEbW,MAAAA,GAAG,EAAEhF,IAAI,CAAC+D,IAAL,CAAU,MAAV,EAAkB,KAAlB,CAFQ;AAGbkB,MAAAA,GAAG,EAAEjF,IAAI,CAAC+D,IAAL,CAAU,MAAV,EAAkB,KAAlB,CAHQ;AAIbmB,MAAAA,IAAI,EAAElF,IAAI,CAAC+D,IAAL,CAAU,MAAV,EAAkB,MAAlB,CAJO;AAKboB,MAAAA,GAAG,EAAEnF,IAAI,CAAC+D,IAAL,CAAU,MAAV,EAAkB,KAAlB,CALQ;AAMbqB,MAAAA,IAAI,EAAEpF,IAAI,CAAC+D,IAAL,CAAU,MAAV,EAAkB,MAAlB;AANO,KAAf;AASA,UAAMsB,SAAS,GAAGrB,MAAM,CAACC,IAAP,CAAYjE,IAAI,CAAC+D,IAAjB,EAAuBG,GAAvB,CAA4BG,IAAD,IAAU;AACrD,aAAO;AACLA,QAAAA,IAAI,EAAEA,IADD;AAELW,QAAAA,GAAG,EAAEhF,IAAI,CAAC+D,IAAL,CAAUM,IAAV,EAAgB,KAAhB,CAFA;AAGLY,QAAAA,GAAG,EAAEjF,IAAI,CAAC+D,IAAL,CAAUM,IAAV,EAAgB,KAAhB,CAHA;AAILa,QAAAA,IAAI,EAAElF,IAAI,CAAC+D,IAAL,CAAUM,IAAV,EAAgB,MAAhB,CAJD;AAKLc,QAAAA,GAAG,EAAEnF,IAAI,CAAC+D,IAAL,CAAUM,IAAV,EAAgB,KAAhB,CALA;AAMLe,QAAAA,IAAI,EAAEpF,IAAI,CAAC+D,IAAL,CAAUM,IAAV,EAAgB,MAAhB;AAND,OAAP;AAQD,KATiB,CAAlB;AAWA5B,IAAAA,YAAY,CAACsC,MAAD,CAAZ,CA7E4B,CA+E5B;;AAEAlB,IAAAA,OAAO,CAACC,GAAR,CAAYuB,SAAZ;AAEA1C,IAAAA,SAAS,CAAC0C,SAAD,CAAT;AAEA,UAAMC,SAAS,GAAGtB,MAAM,CAACC,IAAP,CAAYjE,IAAI,CAAC+D,IAAjB,EAAuBG,GAAvB,CAA4BG,IAAD,IAAU,CACrDA,IADqD,EAErDrE,IAAI,CAAC+D,IAAL,CAAUM,IAAV,EAAgB,yBAAhB,CAFqD,EAGrDrE,IAAI,CAAC+D,IAAL,CAAUM,IAAV,EAAgB,mBAAhB,CAHqD,EAIrDrE,IAAI,CAAC+D,IAAL,CAAUM,IAAV,EAAgB,OAAhB,CAJqD,CAArC,CAAlB,CArF4B,CA4F5B;;AACAxB,IAAAA,iBAAiB,CAACyC,SAAD,CAAjB,CA7F4B,CA+F5B;AAEA;AAEA;AACD,GApGD;;AAsGA,QAAMC,mBAAmB,GAAIC,CAAD,IAAO;AACjCA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AAEAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB7C,SAAxB;AACA2C,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB3C,SAAxB;AAEAY,IAAAA,OAAO,CAACC,GAAR,CAAYf,SAAZ,EAAuBE,SAAvB;AAEAQ,IAAAA,KAAK,CAAC,mCAAD,EAAsC;AACzCoC,MAAAA,MAAM,EAAE,MADiC;AAEzC;AACAlC,MAAAA,OAAO,EAAE;AACP,uCAA+B,GADxB,CAEP;AACA;;AAHO,OAHgC;AAQzC;AACAmC,MAAAA,IAAI,EAAEJ;AATmC,KAAtC,CAAL,CAWGK,IAXH,CAWSC,GAAD,IAASA,GAAG,CAACpC,IAAJ,EAXjB,EAYGmC,IAZH,CAYS/F,IAAD,IAAU;AACd6D,MAAAA,OAAO,CAACC,GAAR,CAAY9D,IAAI,CAAC,QAAD,CAAhB;AACAoD,MAAAA,kBAAkB,CAACpD,IAAI,CAAC,QAAD,CAAL,CAAlB;AACD,KAfH;AAgBD,GA1BD;;AA4BAD,EAAAA,SAAS,CAAC,MAAM;AACdwD,IAAAA,SAAS;AACV,GAFQ,EAEN,CAAC3B,OAAO,CAACqE,MAAT,CAFM,CAAT;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,gBAArB;AAAsC,MAAA,KAAK,MAA3C;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAZ;AAAgC,QAAA,SAAS,EAAC,cAA1C;AAAA,gCAEE,QAAC,GAAD;AAAK,UAAA,KAAK,EAAE;AAAEA,YAAAA,MAAM,EAAE;AAAV,WAAZ;AAAA,iCACE,QAAC,GAAD;AAAK,YAAA,KAAK,EAAE;AAAEA,cAAAA,MAAM,EAAE;AAAV,aAAZ;AAAA,mCACE,QAAC,GAAD;AAAK,cAAA,KAAK,EAAE;AAAEA,gBAAAA,MAAM,EAAE;AAAV,eAAZ;AAAgC,cAAA,SAAS,EAAC,gBAA1C;AAAA,sCACE;AACE,gBAAA,SAAS,EAAC,yBADZ;AAEE,gBAAA,OAAO,EAAGV,CAAD,IAAO3B,OAAO,CAACC,GAAR,CAAY,SAAZ,CAFlB;AAAA,uCAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,sBADF,eAOE;AAAK,gBAAA,SAAS,EAAC,2BAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,eAWE;AAAK,gBAAA,SAAS,EAAC,4BAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXF,eAeE,qCAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAyBE,QAAC,GAAD;AACE,UAAA,EAAE,MADJ;AAEE,UAAA,EAAE,EAAE,CAFN;AAGE,UAAA,KAAK,EAAE;AACLqC,YAAAA,OAAO,EAAE,MADJ;AAELC,YAAAA,aAAa,EAAE,QAFV;AAGLC,YAAAA,cAAc,EAAE,QAHX;AAILC,YAAAA,QAAQ,EAAE;AAJL,WAHT;AAAA,kCAUE;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,oCACE,QAAC,MAAD;AACE,cAAA,OAAO,EAAC,SADV;AAEE,cAAA,OAAO,EAAE,MAAM7E,iBAAiB,CAAC,IAAD,CAFlC,CAGE;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE,QAAC,MAAD;AACE,cAAA,OAAO,EAAC,WADV;AAEE,cAAA,OAAO,EAAG+D,CAAD,IAAO/D,iBAAiB,CAAC,KAAD,CAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,eAyBE,qCAzBF,EA0BGD,cAAc,gBACb;AAAA,mCACE,QAAC,QAAD;AAAU,cAAA,IAAI,EAAExB;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF,2BADa,gBAKb;AAAA,mCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF,2BA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzBF,eA+DE,QAAC,GAAD;AAAK,UAAA,KAAK,EAAE;AAAEkG,YAAAA,MAAM,EAAE;AAAV,WAAZ;AAAA,iCACE,QAAC,GAAD;AAAK,YAAA,KAAK,EAAE;AAAEA,cAAAA,MAAM,EAAE;AAAV,aAAZ;AAAA,mCACE,QAAC,GAAD;AAAK,cAAA,KAAK,EAAE;AAAEA,gBAAAA,MAAM,EAAE;AAAV,eAAZ;AAAgC,cAAA,SAAS,EAAC,iBAA1C;AAAA,sCACE,QAAC,IAAD;AACE,gBAAA,EAAE,EAAC,OADL,CAEE;AAFF;AAGE,gBAAA,KAAK,EAAE;AACLK,kBAAAA,KAAK,EAAE,OADF;AAELC,kBAAAA,MAAM,EAAE,iBAFH;AAGLN,kBAAAA,MAAM,EAAE,MAHH;AAILO,kBAAAA,QAAQ,EAAE;AAJL,iBAHT;AASE,gBAAA,SAAS,EAAC,2CATZ;AAAA,uCAWE,QAAC,IAAD,CAAM,IAAN;AAAA,4BACG7E,OAAO,CAACqE,MAAR,KAAmB,CAAnB,gBACC;AAAA,2CACE;AACE,sBAAA,SAAS,EAAC,SADZ;AAEE,sBAAA,KAAK,EAAE;AACLE,wBAAAA,OAAO,EAAE,MADJ;AAELO,wBAAAA,UAAU,EAAE,QAFP;AAGLL,wBAAAA,cAAc,EAAE,QAHX;AAILH,wBAAAA,MAAM,EAAE;AAJH,uBAFT;AAAA,6CASE,QAAC,OAAD;AAAS,wBAAA,SAAS,EAAC,QAAnB;AAA4B,wBAAA,OAAO,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA;AADF,mCADD,gBAeC;AAAA,2CACE,QAAC,UAAD;AACE,sBAAA,OAAO,EAAEtE,OADX;AAEE,sBAAA,WAAW,EAAEI,WAFf;AAGE,sBAAA,KAAK,EAAEF,KAHT;AAIE,sBAAA,UAAU,EAAEM;AAJd;AAAA;AAAA;AAAA;AAAA;AADF;AAhBJ;AAAA;AAAA;AAAA;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA,sBADF,eAuCE,QAAC,IAAD;AACE,gBAAA,EAAE,EAAC,OADL;AAEE,gBAAA,KAAK,EAAE;AAAEmE,kBAAAA,KAAK,EAAE;AAAT,iBAFT;AAGE,gBAAA,SAAS,EAAC,iEAHZ,CAIE;AAJF;AAAA,uCAME,QAAC,IAAD,CAAM,IAAN;AAAA,0CACE,QAAC,UAAD;AAAY,oBAAA,cAAc,EAAE3D;AAA5B;AAAA;AAAA;AAAA;AAAA,0BADF,eAGE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,sBAvCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA/DF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA2HE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACE,QAAC,IAAD;AACE,YAAA,EAAE,EAAC,OADL;AAEE,YAAA,KAAK,EAAE;AAAE2D,cAAAA,KAAK,EAAE;AAAT,aAFT;AAGE,YAAA,SAAS,EAAC,iEAHZ,CAIE;AAJF;AAAA,mCAME,QAAC,IAAD,CAAM,IAAN;AAAA,sCACE,QAAC,UAAD;AAAY,gBAAA,SAAS,EAAE/D,SAAvB;AAAkC,gBAAA,MAAM,EAAEE;AAA1C;AAAA;AAAA;AAAA;AAAA,sBADF,eAGE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAeE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACE,QAAC,IAAD;AACE,YAAA,EAAE,EAAC,OADL;AAEE,YAAA,KAAK,EAAE;AAAE6D,cAAAA,KAAK,EAAE;AAAT,aAFT;AAGE,YAAA,SAAS,EAAC,iEAHZ,CAIE;AAJF;AAAA,mCAME,QAAC,IAAD,CAAM,IAAN;AAAA,sCACE,QAAC,QAAD,CACE;AADF;AAEE,gBAAA,gBAAgB,EAAErE;AAFpB;AAAA;AAAA;AAAA;AAAA,sBADF,eAME,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAfF,eAgCE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACE,QAAC,IAAD;AACE,YAAA,EAAE,EAAC,OADL;AAEE,YAAA,KAAK,EAAE;AAAEqE,cAAAA,KAAK,EAAE;AAAT,aAFT;AAGE,YAAA,SAAS,EAAC,iEAHZ,CAIE;AAJF;AAAA,mCAME,QAAC,IAAD,CAAM,IAAN;AAAA,sCACE,QAAC,UAAD;AAAY,gBAAA,QAAQ,EAAEjE;AAAtB;AAAA;AAAA;AAAA;AAAA,sBADF,eAGE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,cA3HF,eA0KE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,OAAO,MAAd;AAAe,UAAA,QAAQ,MAAvB;AAAwB,UAAA,KAAK,MAA7B;AAAA,kCACE;AAAA,mCACE;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eASE;AAAA,oCACE;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAOE;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,eAaE;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAI,gBAAA,OAAO,EAAE,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA1KF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8MD;;GAxWQf,U;UAaQD,S;;;KAbRC,U;AA0WT,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../App.css';\r\nimport data from '../india.min.geo.json';\r\nimport GeoChart from '../components/GeoChart';\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  Carousel,\r\n  Col,\r\n  Container,\r\n  Figure,\r\n  Row,\r\n  Spinner,\r\n  Table,\r\n  ToggleButton,\r\n} from 'react-bootstrap';\r\nimport { FaArrowUp } from 'react-icons/fa';\r\nimport MapBox from '../components/MapBox';\r\nimport LineChart from '../components/maps/LineChartJs/LineChart';\r\nimport ComboChart from '../components/maps/ComboChart/ComboChart';\r\nimport GaugeChart from '../components/maps/GaugeChart/GaugeChart';\r\nimport PieChart from '../components/maps/PieChart/PieChart';\r\nimport LineChart2 from '../components/maps/LineChartJs/LineChart2';\r\nimport BarChart from '../components/maps/BarChart/BarChart';\r\nimport LineChart3 from '../components/maps/LineChartJs/LineChart3';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction StatesPage() {\r\n  const [normalSelected, setNormalSelected] = useState(true);\r\n\r\n  const [indiaData, setIndiaData] = useState([]);\r\n  const [dataApi, setDataApi] = useState([]);\r\n  const [years, setYears] = useState([]);\r\n  const [forestCover, setForestCover] = useState([]);\r\n  const [forestData, setForestData] = useState([]);\r\n  const [forestDataArray, setForestDataArray] = useState([]);\r\n  const [rainfall, setRainfall] = useState([]);\r\n  const [aqiParams, setAqiParams] = useState([]);\r\n  const [aqiArr, setAqiArr] = useState([]);\r\n  const [comboChartData, setComboChartData] = useState([]);\r\n  const params = useParams();\r\n  const [inputYear, setInputYear] = useState(2022);\r\n  const [inputArea, setInputArea] = useState('India');\r\n  const [predictedResult, setPredictedResult] = useState(665688.922946932);\r\n\r\n  const [view, setView] = useState('Normal View');\r\n\r\n  const fetchData = async () => {\r\n    const response = await fetch(`http://127.0.0.1:5000/${params.state}`, {\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    const data = await response.json();\r\n\r\n    console.log(data.Data);\r\n\r\n    setYears(Object.keys(data.Data));\r\n\r\n    setForestCover(\r\n      years.map((item) => data.Data[item]['Total Forest Cover Area'])\r\n    );\r\n\r\n    const annualRainfall = Object.keys(data.Data).map((year) => [\r\n      year,\r\n      data.Data[year]['Annual Rainfall'],\r\n    ]);\r\n\r\n    setRainfall(annualRainfall.filter((item) => item[1] !== 0));\r\n\r\n    setDataApi([data.Data]);\r\n\r\n    const forestObj = Object.keys(data.Data).map((year) => {\r\n      return {\r\n        year,\r\n        TFC: data.Data[year]['Total Forest Cover Area'],\r\n        VDC: data.Data[year]['Very Dense Forest Area'],\r\n        MDC: data.Data[year]['Moderately Dense Forest Area'],\r\n        MFC: data.Data[year]['Mangrove Forest Area'],\r\n        OFA: data.Data[year]['Open Forest Area'],\r\n        SLA: data.Data[year]['Scrub Land Area'],\r\n      };\r\n    });\r\n\r\n    // console.log(forestObj);\r\n\r\n    const forestArr = Object.keys(data.Data).map((year) => {\r\n      return [\r\n        year,\r\n        data.Data[year]['Total Forest Cover Area'],\r\n        data.Data[year]['Very Dense Forest Area'],\r\n        data.Data[year]['Moderately Dense Forest Area'],\r\n        data.Data[year]['Mangrove Forest Area'],\r\n        data.Data[year]['Open Forest Area'],\r\n        data.Data[year]['Scrub Land Area'],\r\n      ];\r\n    });\r\n\r\n    // console.log(forestObj);\r\n    setForestData(forestObj);\r\n\r\n    setForestDataArray(forestArr);\r\n\r\n    const aqiVal = {\r\n      year: 2015,\r\n      SO2: data.Data['2015']['SO2'],\r\n      NO2: data.Data['2015']['NO2'],\r\n      RSPM: data.Data['2015']['RSPM'],\r\n      SPM: data.Data['2015']['SPM'],\r\n      PM25: data.Data['2015']['PM25'],\r\n    };\r\n\r\n    const aqiValArr = Object.keys(data.Data).map((year) => {\r\n      return {\r\n        year: year,\r\n        SO2: data.Data[year]['SO2'],\r\n        NO2: data.Data[year]['NO2'],\r\n        RSPM: data.Data[year]['RSPM'],\r\n        SPM: data.Data[year]['SPM'],\r\n        PM25: data.Data[year]['PM25'],\r\n      };\r\n    });\r\n\r\n    setAqiParams(aqiVal);\r\n\r\n    // aqiValArr.forEach((val, idx) => console.log(aqiValArr[idx].year));\r\n\r\n    console.log(aqiValArr);\r\n\r\n    setAqiArr(aqiValArr);\r\n\r\n    const comboData = Object.keys(data.Data).map((year) => [\r\n      year,\r\n      data.Data[year]['Total Forest Cover Area'],\r\n      data.Data[year]['N_Annual_Rainfall'],\r\n      data.Data[year]['N_SPM'],\r\n    ]);\r\n\r\n    // console.log(comboData);\r\n    setComboChartData(comboData);\r\n\r\n    // const aqiVal =\r\n\r\n    // console.log(aqiVal);\r\n\r\n    // console.log(aqiVal[1][1]);\r\n  };\r\n\r\n  const onSubmitPostRequest = (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('year', inputYear);\r\n    formData.append('area', inputArea);\r\n\r\n    console.log(inputYear, inputArea);\r\n\r\n    fetch('http://127.0.0.1:5000/predict/TFA', {\r\n      method: 'POST',\r\n      // mode: 'no-cors',\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        // Accept: 'application/json',\r\n        // 'Content-Type': 'application/json',\r\n      },\r\n      // body: JSON.stringify({ year: inputYear, area: inputArea }),\r\n      body: formData,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data['Result']);\r\n        setPredictedResult(data['Result']);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [dataApi.length]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container className='main-container' fluid>\r\n        <Row style={{ height: '100%' }} className='map-page-row'>\r\n          {/* col-left */}\r\n          <Col style={{ height: '100%' }}>\r\n            <Row style={{ height: '100%' }}>\r\n              <Col style={{ height: '100%' }} className='left-container'>\r\n                <div\r\n                  className='left-container__heading'\r\n                  onClick={(e) => console.log('Clicked')}\r\n                >\r\n                  <h1>DASHBOARD</h1>\r\n                </div>\r\n                <div className='left-container__top--tags'>\r\n                  <h1>This is title</h1>\r\n                  <p>This is a paragraph</p>\r\n                </div>\r\n                <div className='left-container__top--stats'>\r\n                  <h1>This is title</h1>\r\n                  <p>This is a paragraph</p>\r\n                </div>\r\n                <></>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n\r\n          {/* col-middle */}\r\n          <Col\r\n            xs\r\n            lg={6}\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              justifyContent: 'center',\r\n              position: 'relative',\r\n            }}\r\n          >\r\n            <div className='map-toggle-buttons'>\r\n              <Button\r\n                variant='primary'\r\n                onClick={() => setNormalSelected(true)}\r\n                // onClick={(e) => console.log('Clicked')}\r\n              >\r\n                Normal View\r\n              </Button>\r\n              <Button\r\n                variant='secondary'\r\n                onClick={(e) => setNormalSelected(false)}\r\n              >\r\n                Satellite View\r\n              </Button>\r\n            </div>\r\n            <></>\r\n            {normalSelected ? (\r\n              <>\r\n                <GeoChart data={data} />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <MapBox />\r\n              </>\r\n            )}\r\n          </Col>\r\n\r\n          {/* col-right */}\r\n          <Col style={{ height: '100%' }}>\r\n            <Row style={{ height: '100%' }}>\r\n              <Col style={{ height: '100%' }} className='right-container'>\r\n                <Card\r\n                  bg='light'\r\n                  // border='light'\r\n                  style={{\r\n                    width: '262px',\r\n                    border: '1px transparent',\r\n                    height: '100%',\r\n                    overflow: 'hidden',\r\n                  }}\r\n                  className='mb-2 right-container__top box-shadow-main'\r\n                >\r\n                  <Card.Body>\r\n                    {dataApi.length === 0 ? (\r\n                      <>\r\n                        <div\r\n                          className='spinner'\r\n                          style={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            height: '100%',\r\n                          }}\r\n                        >\r\n                          <Spinner animation='border' variant='primary' />\r\n                        </div>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <LineChart3\r\n                          dataApi={dataApi}\r\n                          forestCover={forestCover}\r\n                          years={years}\r\n                          forestData={forestDataArray}\r\n                        />\r\n                      </>\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n                <Card\r\n                  bg='light'\r\n                  style={{ width: '90%' }}\r\n                  className='mb-2 right-container__bottom box-shadow-main global-card-styles'\r\n                  // border='light'\r\n                >\r\n                  <Card.Body>\r\n                    <ComboChart comboChartData={comboChartData} />\r\n\r\n                    <Card.Title>Total Count </Card.Title>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* 4-cards */}\r\n        <Row className='map-page-row'>\r\n          <Col className='container-card'>\r\n            <Card\r\n              bg='light'\r\n              style={{ width: '90%' }}\r\n              className='mb-2 right-container__bottom box-shadow-main global-card-styles'\r\n              // border='light'\r\n            >\r\n              <Card.Body>\r\n                <GaugeChart aqiParams={aqiParams} aqiArr={aqiArr} />\r\n\r\n                <Card.Title>Total Count </Card.Title>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col className='container-card'>\r\n            <Card\r\n              bg='light'\r\n              style={{ width: '90%' }}\r\n              className='mb-2 right-container__bottom box-shadow-main global-card-styles'\r\n              // border='light'\r\n            >\r\n              <Card.Body>\r\n                <PieChart\r\n                  // forestData={forestDataArray}\r\n                  forestDataObject={forestData}\r\n                />\r\n\r\n                <Card.Title>Total Count </Card.Title>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col className='container-card'>\r\n            <Card\r\n              bg='light'\r\n              style={{ width: '90%' }}\r\n              className='mb-2 right-container__bottom box-shadow-main global-card-styles'\r\n              // border='light'\r\n            >\r\n              <Card.Body>\r\n                <LineChart2 rainfall={rainfall} />\r\n\r\n                <Card.Title>Total Count </Card.Title>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row className='map-page-row'>\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>First Name</th>\r\n                <th>Last Name</th>\r\n                <th>Username</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>1</td>\r\n                <td>Mark</td>\r\n                <td>Otto</td>\r\n                <td>@mdo</td>\r\n              </tr>\r\n              <tr>\r\n                <td>2</td>\r\n                <td>Jacob</td>\r\n                <td>Thornton</td>\r\n                <td>@fat</td>\r\n              </tr>\r\n              <tr>\r\n                <td>3</td>\r\n                <td colSpan={2}>Larry the Bird</td>\r\n                <td>@twitter</td>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n        </Row>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default StatesPage;\r\n"]},"metadata":{},"sourceType":"module"}