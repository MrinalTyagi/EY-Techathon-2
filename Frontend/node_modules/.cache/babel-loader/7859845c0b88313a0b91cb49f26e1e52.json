{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AAVAIG\\\\Desktop\\\\EY-Techathon-2\\\\Frontend\\\\src\\\\components\\\\maps\\\\lineChart\\\\LineChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport { select, line, scaleLinear, aaxisBottom, axisLeft, axisBottom } from 'd3';\nimport { Line } from 'react-chartjs-2'; // const d3 = require('d3');\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst state = {\n  labels: ['January', 'February', 'March', 'April', 'May'],\n  datasets: [{\n    label: 'Rainfall',\n    fill: false,\n    lineTension: 0.5,\n    backgroundColor: 'rgba(75,192,192,1)',\n    borderColor: 'rgba(0,0,0,1)',\n    borderWidth: 2,\n    data: [65, 59, 80, 81, 56]\n  }]\n};\n\nfunction LineChart(_ref) {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const wrapperRef = useRef();\n  const svgRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef); //   const [indiaData, setIndiaData] = useState([]);\n  //   const data = [10, 20, 30, 40, 50];\n\n  useEffect(() => {\n    // console.log(data);\n    if (!data) return;\n    if (!data[0]) return;\n    const yearsArray = Object.keys(data[0].Data);\n    const indiaData = yearsArray.map(year => {\n      return {\n        key: year,\n        value: data[0].Data[year]\n      };\n    });\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: wrapperRef,\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      children: [/*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"x-axis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"y-axis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LineChart, \"za1gr1JdDAr/YFsXWaqwIFMXIPA=\", false, function () {\n  return [useResizeObserver];\n});\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["C:/Users/AAVAIG/Desktop/EY-Techathon-2/Frontend/src/components/maps/lineChart/LineChart.js"],"names":["React","useState","useEffect","useRef","useResizeObserver","select","line","scaleLinear","aaxisBottom","axisLeft","axisBottom","Line","state","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","data","LineChart","wrapperRef","svgRef","dimensions","yearsArray","Object","keys","Data","indiaData","map","year","key","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,WAHF,EAIEC,WAJF,EAKEC,QALF,EAMEC,UANF,QAOO,IAPP;AAQA,SAASC,IAAT,QAAqB,iBAArB,C,CACA;;;AAEA,MAAMC,KAAK,GAAG;AACZC,EAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,CADI;AAEZC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,KAAK,EAAE,UADT;AAEEC,IAAAA,IAAI,EAAE,KAFR;AAGEC,IAAAA,WAAW,EAAE,GAHf;AAIEC,IAAAA,eAAe,EAAE,oBAJnB;AAKEC,IAAAA,WAAW,EAAE,eALf;AAMEC,IAAAA,WAAW,EAAE,CANf;AAOEC,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB;AAPR,GADQ;AAFE,CAAd;;AAeA,SAASC,SAAT,OAA6B;AAAA;;AAAA,MAAV;AAAED,IAAAA;AAAF,GAAU;AAC3B,QAAME,UAAU,GAAGpB,MAAM,EAAzB;AACA,QAAMqB,MAAM,GAAGrB,MAAM,EAArB;AACA,QAAMsB,UAAU,GAAGrB,iBAAiB,CAACmB,UAAD,CAApC,CAH2B,CAI3B;AAEA;;AAEArB,EAAAA,SAAS,CAAC,MAAM;AACd;AAEA,QAAI,CAACmB,IAAL,EAAW;AAEX,QAAI,CAACA,IAAI,CAAC,CAAD,CAAT,EAAc;AAEd,UAAMK,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYP,IAAI,CAAC,CAAD,CAAJ,CAAQQ,IAApB,CAAnB;AAEA,UAAMC,SAAS,GAAGJ,UAAU,CAACK,GAAX,CAAgBC,IAAD,IAAU;AACzC,aAAO;AAAEC,QAAAA,GAAG,EAAED,IAAP;AAAaE,QAAAA,KAAK,EAAEb,IAAI,CAAC,CAAD,CAAJ,CAAQQ,IAAR,CAAaG,IAAb;AAApB,OAAP;AACD,KAFiB,CAAlB;AAGD,GAZQ,EAYN,CAACX,IAAD,CAZM,CAAT;AAcA,sBACE;AAAK,IAAA,GAAG,EAAEE,UAAV;AAAA,2BACE;AAAK,MAAA,GAAG,EAAEC,MAAV;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA9BQF,S;UAGYlB,iB;;;KAHZkB,S;AAgCT,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport useResizeObserver from '../../../hooks/useResizeObserver';\r\nimport {\r\n  select,\r\n  line,\r\n  scaleLinear,\r\n  aaxisBottom,\r\n  axisLeft,\r\n  axisBottom,\r\n} from 'd3';\r\nimport { Line } from 'react-chartjs-2';\r\n// const d3 = require('d3');\r\n\r\nconst state = {\r\n  labels: ['January', 'February', 'March', 'April', 'May'],\r\n  datasets: [\r\n    {\r\n      label: 'Rainfall',\r\n      fill: false,\r\n      lineTension: 0.5,\r\n      backgroundColor: 'rgba(75,192,192,1)',\r\n      borderColor: 'rgba(0,0,0,1)',\r\n      borderWidth: 2,\r\n      data: [65, 59, 80, 81, 56],\r\n    },\r\n  ],\r\n};\r\n\r\nfunction LineChart({ data }) {\r\n  const wrapperRef = useRef();\r\n  const svgRef = useRef();\r\n  const dimensions = useResizeObserver(wrapperRef);\r\n  //   const [indiaData, setIndiaData] = useState([]);\r\n\r\n  //   const data = [10, 20, 30, 40, 50];\r\n\r\n  useEffect(() => {\r\n    // console.log(data);\r\n\r\n    if (!data) return;\r\n\r\n    if (!data[0]) return;\r\n\r\n    const yearsArray = Object.keys(data[0].Data);\r\n\r\n    const indiaData = yearsArray.map((year) => {\r\n      return { key: year, value: data[0].Data[year] };\r\n    });\r\n  }, [data]);\r\n\r\n  return (\r\n    <div ref={wrapperRef}>\r\n      <svg ref={svgRef}>\r\n        <g className='x-axis' />\r\n        <g className='y-axis' />\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineChart;\r\n"]},"metadata":{},"sourceType":"module"}