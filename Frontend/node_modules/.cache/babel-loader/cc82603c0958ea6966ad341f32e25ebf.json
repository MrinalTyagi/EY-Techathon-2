{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AAVAIG\\\\Desktop\\\\EY-Techathon-2\\\\Frontend\\\\src\\\\components\\\\maps\\\\TreeMap\\\\Treemap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport TreeMap from 'react-d3-treemap';\nimport 'react-d3-treemap/dist/react.d3.treemap.css'; // import rd3 from 'rd3';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Treemap(_ref) {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const [years, setYears] = useState([]);\n  const [selectedYear, setSelectedYear] = useState('2019'); //   const TreeMap = rd3.Treemap;\n\n  const addYearsToDropdown = () => {\n    if (!data) return;\n\n    if (data[0]) {\n      console.log(data);\n      setYears(Object.keys(data[0].Data));\n    } else {\n      return;\n    }\n  };\n\n  const createTreeMap = () => {};\n\n  useEffect(() => {\n    addYearsToDropdown(); // if (data) {\n    // createTreeMap();\n    // }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"footer\",\n      children: [\"d3.layout.treemap\", /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"hint\",\n        children: \"click or option-click to descend or ascend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedYear,\n          children: years && years.map(year => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: year,\n              onClick: () => setSelectedYear(year),\n              children: year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Treemap, \"kOlbKLgJvKA5kkieLmppCagyukM=\");\n\n_c = Treemap;\nexport default Treemap;\n\nvar _c;\n\n$RefreshReg$(_c, \"Treemap\");","map":{"version":3,"sources":["C:/Users/AAVAIG/Desktop/EY-Techathon-2/Frontend/src/components/maps/TreeMap/Treemap.js"],"names":["React","useState","useEffect","TreeMap","Treemap","data","years","setYears","selectedYear","setSelectedYear","addYearsToDropdown","console","log","Object","keys","Data","createTreeMap","map","year"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAO,4CAAP,C,CACA;;;;AAEA,SAASC,OAAT,OAA2B;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,MAAD,CAAhD,CAFyB,CAIzB;;AAEA,QAAMS,kBAAkB,GAAG,MAAM;AAC/B,QAAI,CAACL,IAAL,EAAW;;AAEX,QAAIA,IAAI,CAAC,CAAD,CAAR,EAAa;AACXM,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AAEAE,MAAAA,QAAQ,CAACM,MAAM,CAACC,IAAP,CAAYT,IAAI,CAAC,CAAD,CAAJ,CAAQU,IAApB,CAAD,CAAR;AACD,KAJD,MAIO;AACL;AACD;AACF,GAVD;;AAYA,QAAMC,aAAa,GAAG,MAAM,CAAE,CAA9B;;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,kBAAkB,GADJ,CAGd;AACA;AACA;AACD,GANQ,EAMN,CAACL,IAAD,CANM,CAAT;AAQA,sBACE;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA,2BACE;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA,mDAEE;AAAK,QAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,+BACE;AAAQ,UAAA,KAAK,EAAEG,YAAf;AAAA,oBACGF,KAAK,IACJA,KAAK,CAACW,GAAN,CAAWC,IAAD,IAAU;AAClB,gCACE;AAAQ,cAAA,KAAK,EAAEA,IAAf;AAAqB,cAAA,OAAO,EAAE,MAAMT,eAAe,CAACS,IAAD,CAAnD;AAAA,wBACGA;AADH;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD,WAND;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAhDQd,O;;KAAAA,O;AAkDT,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TreeMap from 'react-d3-treemap';\r\nimport 'react-d3-treemap/dist/react.d3.treemap.css';\r\n// import rd3 from 'rd3';\r\n\r\nfunction Treemap({ data }) {\r\n  const [years, setYears] = useState([]);\r\n  const [selectedYear, setSelectedYear] = useState('2019');\r\n\r\n  //   const TreeMap = rd3.Treemap;\r\n\r\n  const addYearsToDropdown = () => {\r\n    if (!data) return;\r\n\r\n    if (data[0]) {\r\n      console.log(data);\r\n\r\n      setYears(Object.keys(data[0].Data));\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const createTreeMap = () => {};\r\n\r\n  useEffect(() => {\r\n    addYearsToDropdown();\r\n\r\n    // if (data) {\r\n    // createTreeMap();\r\n    // }\r\n  }, [data]);\r\n\r\n  return (\r\n    <div id='body'>\r\n      <div id='footer'>\r\n        d3.layout.treemap\r\n        <div class='hint'>click or option-click to descend or ascend</div>\r\n        <div>\r\n          <select value={selectedYear}>\r\n            {years &&\r\n              years.map((year) => {\r\n                return (\r\n                  <option value={year} onClick={() => setSelectedYear(year)}>\r\n                    {year}\r\n                  </option>\r\n                );\r\n              })}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Treemap;\r\n"]},"metadata":{},"sourceType":"module"}