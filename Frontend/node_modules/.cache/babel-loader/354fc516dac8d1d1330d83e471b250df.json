{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AAVAIG\\\\Desktop\\\\EY-Techathon-2\\\\Frontend\\\\src\\\\pages\\\\StatesPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport data from '../india.min.geo.json';\nimport GeoChart from '../components/GeoChart';\nimport { Button, ButtonGroup, Card, Carousel, Col, Container, Figure, Row, Spinner, Table, ToggleButton } from 'react-bootstrap';\nimport { FaArrowUp } from 'react-icons/fa';\nimport MapBox from '../components/MapBox';\nimport LineChart from '../components/maps/LineChartJs/LineChart';\nimport ComboChart from '../components/maps/ComboChart/ComboChart';\nimport GaugeChart from '../components/maps/GaugeChart/GaugeChart';\nimport PieChart from '../components/maps/PieChart/PieChart';\nimport LineChart2 from '../components/maps/LineChartJs/LineChart2';\nimport BarChart from '../components/maps/BarChart/BarChart';\nimport LineChart3 from '../components/maps/LineChartJs/LineChart3';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StatesPage() {\n  _s();\n\n  const [normalSelected, setNormalSelected] = useState(true);\n  const [indiaData, setIndiaData] = useState([]);\n  const [dataApi, setDataApi] = useState([]);\n  const [years, setYears] = useState([]);\n  const [forestCover, setForestCover] = useState([]);\n  const [forestData, setForestData] = useState([]);\n  const [forestDataArray, setForestDataArray] = useState([]);\n  const [rainfall, setRainfall] = useState([]);\n  const [aqiParams, setAqiParams] = useState([]);\n  const [comboChartData, setComboChartData] = useState([]);\n  const params = useParams();\n\n  const fetchData = async () => {\n    const response = await fetch(`http://127.0.0.1:5000/${params.state}`, {\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log(data.Data);\n    setYears(Object.keys(data.Data));\n    setForestCover(years.map(item => data.Data[item]['Total Forest Cover Area']));\n    const annualRainfall = Object.keys(data.Data).map(year => [year, data.Data[year]['Annual Rainfall']]);\n    setRainfall(annualRainfall.filter(item => item[1] !== 0));\n    setDataApi([data.Data]);\n    const forestObj = Object.keys(data.Data).map(year => {\n      return {\n        year,\n        TFC: data.Data[year]['Total Forest Cover Area'],\n        VDC: data.Data[year]['Very Dense Forest Area'],\n        MDC: data.Data[year]['Moderately Dense Forest Area'],\n        MFC: data.Data[year]['Mangrove Forest Area'],\n        OFA: data.Data[year]['Open Forest Area'],\n        SLA: data.Data[year]['Scrub Land Area']\n      };\n    }); // console.log(forestObj);\n\n    const forestArr = Object.keys(data.Data).map(year => {\n      return [year, data.Data[year]['Total Forest Cover Area'], data.Data[year]['Very Dense Forest Area'], data.Data[year]['Moderately Dense Forest Area'], data.Data[year]['Mangrove Forest Area'], data.Data[year]['Open Forest Area'], data.Data[year]['Scrub Land Area']];\n    }); // console.log(forestObj);\n\n    setForestData(forestObj);\n    setForestDataArray(forestArr);\n    const aqiVal = {\n      year: 2015,\n      SO2: data.Data['2015']['SO2'],\n      NO2: data.Data['2015']['NO2'],\n      RSPM: data.Data['2015']['RSPM'],\n      SPM: data.Data['2015']['SPM'],\n      PM25: data.Data['2015']['PM25']\n    };\n    setAqiParams(aqiVal);\n    const comboData = Object.keys(data.Data).map(year => [year, data.Data[year]['Total Forest Cover Area'], data.Data[year]['N_Annual_Rainfall'], data.Data[year]['N_SPM']]);\n    console.log(comboData);\n    setComboChartData(comboData); // const aqiVal =\n    // console.log(aqiVal);\n    // console.log(aqiVal[1][1]);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [dataApi.length]); //   return (\n  //     <React.Fragment>\n  //       <Container className='main-container' fluid>\n  //         <Row style={{ height: '100%' }} className='map-page-row'>\n  //           {/* col-left */}\n  //           <Col style={{ height: '100%' }}>\n  //             <Row style={{ height: '100%' }}>\n  //               <Col style={{ height: '100%' }} className='left-container'>\n  //                 <div\n  //                   className='left-container__heading'\n  //                   onClick={(e) => console.log('Clicked')}\n  //                 >\n  //                   <h1>DASHBOARD</h1>\n  //                 </div>\n  //                 <div className='left-container__top--tags'>\n  //                   <h1>This is title</h1>\n  //                   <p>This is a paragraph</p>\n  //                 </div>\n  //                 <div className='left-container__top--stats'>\n  //                   <h1>This is title</h1>\n  //                   <p>This is a paragraph</p>\n  //                 </div>\n  //                 <></>\n  //               </Col>\n  //             </Row>\n  //           </Col>\n  //           {/* col-middle */}\n  //           <Col\n  //             xs\n  //             lg={6}\n  //             style={{\n  //               display: 'flex',\n  //               flexDirection: 'column',\n  //               justifyContent: 'center',\n  //               position: 'relative',\n  //             }}\n  //           >\n  //             <div className='map-toggle-buttons'>\n  //               <Button\n  //                 variant='primary'\n  //                 onClick={() => setNormalSelected(true)}\n  //                 // onClick={(e) => console.log('Clicked')}\n  //               >\n  //                 Normal View\n  //               </Button>\n  //               <Button\n  //                 variant='secondary'\n  //                 onClick={(e) => setNormalSelected(false)}\n  //               >\n  //                 Satellite View\n  //               </Button>\n  //             </div>\n  //             <></>\n  //             {normalSelected ? (\n  //               <>\n  //                 <GeoChart data={data} />\n  //               </>\n  //             ) : (\n  //               <>\n  //                 <MapBox />\n  //               </>\n  //             )}\n  //           </Col>\n  //           {/* col-right */}\n  //           <Col style={{ height: '100%' }}>\n  //             <Row style={{ height: '100%' }}>\n  //               <Col style={{ height: '100%' }} className='right-container'>\n  //                 <Card\n  //                   bg='light'\n  //                   // border='light'\n  //                   style={{\n  //                     width: '262px',\n  //                     border: '1px transparent',\n  //                     height: '100%',\n  //                     overflow: 'hidden',\n  //                   }}\n  //                   className='mb-2 right-container__top box-shadow-main'\n  //                 >\n  //                   <Card.Body>\n  //                     {dataApi.length === 0 ? (\n  //                       <>\n  //                         <div\n  //                           className='spinner'\n  //                           style={{\n  //                             display: 'flex',\n  //                             alignItems: 'center',\n  //                             justifyContent: 'center',\n  //                             height: '100%',\n  //                           }}\n  //                         >\n  //                           <Spinner animation='border' variant='primary' />\n  //                         </div>\n  //                       </>\n  //                     ) : (\n  //                       <>\n  //                         <LineChart3\n  //                           dataApi={dataApi}\n  //                           forestCover={forestCover}\n  //                           years={years}\n  //                           forestData={forestDataArray}\n  //                         />\n  //                       </>\n  //                     )}\n  //                   </Card.Body>\n  //                 </Card>\n  //                 <Card\n  //                   bg='light'\n  //                   style={{ width: '90%' }}\n  //                   className='mb-2 right-container__bottom box-shadow-main global-card-styles'\n  //                   // border='light'\n  //                 >\n  //                   <Card.Body>\n  //                     <ComboChart comboChartData={comboChartData} />\n  //                     <Card.Title>Total Count </Card.Title>\n  //                   </Card.Body>\n  //                 </Card>\n  //               </Col>\n  //             </Row>\n  //           </Col>\n  //         </Row>\n  //         {/* 4-cards */}\n  //         <Row className='map-page-row'>\n  //           <Col className='container-card'>\n  //             <Card\n  //               bg='light'\n  //               style={{ width: '90%' }}\n  //               className='mb-2 right-container__bottom box-shadow-main global-card-styles'\n  //               // border='light'\n  //             >\n  //               <Card.Body>\n  //                 <GaugeChart aqiParams={aqiParams} />\n  //                 <Card.Title>Total Count </Card.Title>\n  //               </Card.Body>\n  //             </Card>\n  //           </Col>\n  //           <Col className='container-card'>\n  //             <Card\n  //               bg='light'\n  //               style={{ width: '90%' }}\n  //               className='mb-2 right-container__bottom box-shadow-main global-card-styles'\n  //               // border='light'\n  //             >\n  //               <Card.Body>\n  //                 <PieChart\n  //                   // forestData={forestDataArray}\n  //                   forestDataObject={forestData}\n  //                 />\n  //                 <Card.Title>Total Count </Card.Title>\n  //               </Card.Body>\n  //             </Card>\n  //           </Col>\n  //           <Col className='container-card'>\n  //             <Card\n  //               bg='light'\n  //               style={{ width: '90%' }}\n  //               className='mb-2 right-container__bottom box-shadow-main global-card-styles'\n  //               // border='light'\n  //             >\n  //               <Card.Body>\n  //                 <LineChart2 rainfall={rainfall} />\n  //                 <Card.Title>Total Count </Card.Title>\n  //               </Card.Body>\n  //             </Card>\n  //           </Col>\n  //         </Row>\n  //         <Row className='map-page-row'>\n  //           <Table striped bordered hover>\n  //             <thead>\n  //               <tr>\n  //                 <th>#</th>\n  //                 <th>First Name</th>\n  //                 <th>Last Name</th>\n  //                 <th>Username</th>\n  //               </tr>\n  //             </thead>\n  //             <tbody>\n  //               <tr>\n  //                 <td>1</td>\n  //                 <td>Mark</td>\n  //                 <td>Otto</td>\n  //                 <td>@mdo</td>\n  //               </tr>\n  //               <tr>\n  //                 <td>2</td>\n  //                 <td>Jacob</td>\n  //                 <td>Thornton</td>\n  //                 <td>@fat</td>\n  //               </tr>\n  //               <tr>\n  //                 <td>3</td>\n  //                 <td colSpan={2}>Larry the Bird</td>\n  //                 <td>@twitter</td>\n  //               </tr>\n  //             </tbody>\n  //           </Table>\n  //         </Row>\n  //       </Container>\n  //     </React.Fragment>\n  //   );\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: params.state\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 338,\n    columnNumber: 10\n  }, this);\n}\n\n_s(StatesPage, \"nUY8wpHWMtltWScGMsUzFGh/vlg=\", false, function () {\n  return [useParams];\n});\n\n_c = StatesPage;\nexport default StatesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatesPage\");","map":{"version":3,"sources":["C:/Users/AAVAIG/Desktop/EY-Techathon-2/Frontend/src/pages/StatesPage.js"],"names":["React","useState","useEffect","data","GeoChart","Button","ButtonGroup","Card","Carousel","Col","Container","Figure","Row","Spinner","Table","ToggleButton","FaArrowUp","MapBox","LineChart","ComboChart","GaugeChart","PieChart","LineChart2","BarChart","LineChart3","useParams","StatesPage","normalSelected","setNormalSelected","indiaData","setIndiaData","dataApi","setDataApi","years","setYears","forestCover","setForestCover","forestData","setForestData","forestDataArray","setForestDataArray","rainfall","setRainfall","aqiParams","setAqiParams","comboChartData","setComboChartData","params","fetchData","response","fetch","state","headers","json","console","log","Data","Object","keys","map","item","annualRainfall","year","filter","forestObj","TFC","VDC","MDC","MFC","OFA","SLA","forestArr","aqiVal","SO2","NO2","RSPM","SPM","PM25","comboData","length"],"mappings":"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D,CAAZ;AAEA,UAAMM,SAAS,GAAGrB,MAAM,CAACC,IAAP,CAAYvD,IAAI,CAACqD,IAAjB,EAAuBG,GAAvB,CAA4BG,IAAD,IAAU,CACrDA,IADqD,EAErD3D,IAAI,CAACqD,IAAL,CAAUM,IAAV,EAAgB,yBAAhB,CAFqD,EAGrD3D,IAAI,CAACqD,IAAL,CAAUM,IAAV,EAAgB,mBAAhB,CAHqD,EAIrD3D,IAAI,CAACqD,IAAL,CAAUM,IAAV,EAAgB,OAAhB,CAJqD,CAArC,CAAlB;AAOAR,IAAAA,OAAO,CAACC,GAAR,CAAYuB,SAAZ;AACAhC,IAAAA,iBAAiB,CAACgC,SAAD,CAAjB,CA5E4B,CA8E5B;AAEA;AAEA;AACD,GAnFD;;AAqFA5E,EAAAA,SAAS,CAAC,MAAM;AACd8C,IAAAA,SAAS;AACV,GAFQ,EAEN,CAACjB,OAAO,CAACgD,MAAT,CAFM,CAAT,CAlGoB,CAsGpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAO;AAAA,cAAMhC,MAAM,CAACI;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAtTQzB,U;UAWQD,S;;;KAXRC,U;AAwTT,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../App.css';\r\nimport data from '../india.min.geo.json';\r\nimport GeoChart from '../components/GeoChart';\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  Carousel,\r\n  Col,\r\n  Container,\r\n  Figure,\r\n  Row,\r\n  Spinner,\r\n  Table,\r\n  ToggleButton,\r\n} from 'react-bootstrap';\r\nimport { FaArrowUp } from 'react-icons/fa';\r\nimport MapBox from '../components/MapBox';\r\nimport LineChart from '../components/maps/LineChartJs/LineChart';\r\nimport ComboChart from '../components/maps/ComboChart/ComboChart';\r\nimport GaugeChart from '../components/maps/GaugeChart/GaugeChart';\r\nimport PieChart from '../components/maps/PieChart/PieChart';\r\nimport LineChart2 from '../components/maps/LineChartJs/LineChart2';\r\nimport BarChart from '../components/maps/BarChart/BarChart';\r\nimport LineChart3 from '../components/maps/LineChartJs/LineChart3';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction StatesPage() {\r\n  const [normalSelected, setNormalSelected] = useState(true);\r\n  const [indiaData, setIndiaData] = useState([]);\r\n  const [dataApi, setDataApi] = useState([]);\r\n  const [years, setYears] = useState([]);\r\n  const [forestCover, setForestCover] = useState([]);\r\n  const [forestData, setForestData] = useState([]);\r\n  const [forestDataArray, setForestDataArray] = useState([]);\r\n  const [rainfall, setRainfall] = useState([]);\r\n  const [aqiParams, setAqiParams] = useState([]);\r\n  const [comboChartData, setComboChartData] = useState([]);\r\n  const params = useParams();\r\n\r\n  const fetchData = async () => {\r\n    const response = await fetch(`http://127.0.0.1:5000/${params.state}`, {\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    console.log(data.Data);\r\n\r\n    setYears(Object.keys(data.Data));\r\n\r\n    setForestCover(\r\n      years.map((item) => data.Data[item]['Total Forest Cover Area'])\r\n    );\r\n\r\n    const annualRainfall = Object.keys(data.Data).map((year) => [\r\n      year,\r\n      data.Data[year]['Annual Rainfall'],\r\n    ]);\r\n\r\n    setRainfall(annualRainfall.filter((item) => item[1] !== 0));\r\n\r\n    setDataApi([data.Data]);\r\n\r\n    const forestObj = Object.keys(data.Data).map((year) => {\r\n      return {\r\n        year,\r\n        TFC: data.Data[year]['Total Forest Cover Area'],\r\n        VDC: data.Data[year]['Very Dense Forest Area'],\r\n        MDC: data.Data[year]['Moderately Dense Forest Area'],\r\n        MFC: data.Data[year]['Mangrove Forest Area'],\r\n        OFA: data.Data[year]['Open Forest Area'],\r\n        SLA: data.Data[year]['Scrub Land Area'],\r\n      };\r\n    });\r\n\r\n    // console.log(forestObj);\r\n\r\n    const forestArr = Object.keys(data.Data).map((year) => {\r\n      return [\r\n        year,\r\n        data.Data[year]['Total Forest Cover Area'],\r\n        data.Data[year]['Very Dense Forest Area'],\r\n        data.Data[year]['Moderately Dense Forest Area'],\r\n        data.Data[year]['Mangrove Forest Area'],\r\n        data.Data[year]['Open Forest Area'],\r\n        data.Data[year]['Scrub Land Area'],\r\n      ];\r\n    });\r\n\r\n    // console.log(forestObj);\r\n    setForestData(forestObj);\r\n\r\n    setForestDataArray(forestArr);\r\n\r\n    const aqiVal = {\r\n      year: 2015,\r\n      SO2: data.Data['2015']['SO2'],\r\n      NO2: data.Data['2015']['NO2'],\r\n      RSPM: data.Data['2015']['RSPM'],\r\n      SPM: data.Data['2015']['SPM'],\r\n      PM25: data.Data['2015']['PM25'],\r\n    };\r\n    setAqiParams(aqiVal);\r\n\r\n    const comboData = Object.keys(data.Data).map((year) => [\r\n      year,\r\n      data.Data[year]['Total Forest Cover Area'],\r\n      data.Data[year]['N_Annual_Rainfall'],\r\n      data.Data[year]['N_SPM'],\r\n    ]);\r\n\r\n    console.log(comboData);\r\n    setComboChartData(comboData);\r\n\r\n    // const aqiVal =\r\n\r\n    // console.log(aqiVal);\r\n\r\n    // console.log(aqiVal[1][1]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [dataApi.length]);\r\n\r\n  //   return (\r\n  //     <React.Fragment>\r\n  //       <Container className='main-container' fluid>\r\n  //         <Row style={{ height: '100%' }} className='map-page-row'>\r\n  //           {/* col-left */}\r\n  //           <Col style={{ height: '100%' }}>\r\n  //             <Row style={{ height: '100%' }}>\r\n  //               <Col style={{ height: '100%' }} className='left-container'>\r\n  //                 <div\r\n  //                   className='left-container__heading'\r\n  //                   onClick={(e) => console.log('Clicked')}\r\n  //                 >\r\n  //                   <h1>DASHBOARD</h1>\r\n  //                 </div>\r\n  //                 <div className='left-container__top--tags'>\r\n  //                   <h1>This is title</h1>\r\n  //                   <p>This is a paragraph</p>\r\n  //                 </div>\r\n  //                 <div className='left-container__top--stats'>\r\n  //                   <h1>This is title</h1>\r\n  //                   <p>This is a paragraph</p>\r\n  //                 </div>\r\n  //                 <></>\r\n  //               </Col>\r\n  //             </Row>\r\n  //           </Col>\r\n\r\n  //           {/* col-middle */}\r\n  //           <Col\r\n  //             xs\r\n  //             lg={6}\r\n  //             style={{\r\n  //               display: 'flex',\r\n  //               flexDirection: 'column',\r\n  //               justifyContent: 'center',\r\n  //               position: 'relative',\r\n  //             }}\r\n  //           >\r\n  //             <div className='map-toggle-buttons'>\r\n  //               <Button\r\n  //                 variant='primary'\r\n  //                 onClick={() => setNormalSelected(true)}\r\n  //                 // onClick={(e) => console.log('Clicked')}\r\n  //               >\r\n  //                 Normal View\r\n  //               </Button>\r\n  //               <Button\r\n  //                 variant='secondary'\r\n  //                 onClick={(e) => setNormalSelected(false)}\r\n  //               >\r\n  //                 Satellite View\r\n  //               </Button>\r\n  //             </div>\r\n  //             <></>\r\n  //             {normalSelected ? (\r\n  //               <>\r\n  //                 <GeoChart data={data} />\r\n  //               </>\r\n  //             ) : (\r\n  //               <>\r\n  //                 <MapBox />\r\n  //               </>\r\n  //             )}\r\n  //           </Col>\r\n\r\n  //           {/* col-right */}\r\n  //           <Col style={{ height: '100%' }}>\r\n  //             <Row style={{ height: '100%' }}>\r\n  //               <Col style={{ height: '100%' }} className='right-container'>\r\n  //                 <Card\r\n  //                   bg='light'\r\n  //                   // border='light'\r\n  //                   style={{\r\n  //                     width: '262px',\r\n  //                     border: '1px transparent',\r\n  //                     height: '100%',\r\n  //                     overflow: 'hidden',\r\n  //                   }}\r\n  //                   className='mb-2 right-container__top box-shadow-main'\r\n  //                 >\r\n  //                   <Card.Body>\r\n  //                     {dataApi.length === 0 ? (\r\n  //                       <>\r\n  //                         <div\r\n  //                           className='spinner'\r\n  //                           style={{\r\n  //                             display: 'flex',\r\n  //                             alignItems: 'center',\r\n  //                             justifyContent: 'center',\r\n  //                             height: '100%',\r\n  //                           }}\r\n  //                         >\r\n  //                           <Spinner animation='border' variant='primary' />\r\n  //                         </div>\r\n  //                       </>\r\n  //                     ) : (\r\n  //                       <>\r\n  //                         <LineChart3\r\n  //                           dataApi={dataApi}\r\n  //                           forestCover={forestCover}\r\n  //                           years={years}\r\n  //                           forestData={forestDataArray}\r\n  //                         />\r\n  //                       </>\r\n  //                     )}\r\n  //                   </Card.Body>\r\n  //                 </Card>\r\n  //                 <Card\r\n  //                   bg='light'\r\n  //                   style={{ width: '90%' }}\r\n  //                   className='mb-2 right-container__bottom box-shadow-main global-card-styles'\r\n  //                   // border='light'\r\n  //                 >\r\n  //                   <Card.Body>\r\n  //                     <ComboChart comboChartData={comboChartData} />\r\n\r\n  //                     <Card.Title>Total Count </Card.Title>\r\n  //                   </Card.Body>\r\n  //                 </Card>\r\n  //               </Col>\r\n  //             </Row>\r\n  //           </Col>\r\n  //         </Row>\r\n\r\n  //         {/* 4-cards */}\r\n  //         <Row className='map-page-row'>\r\n  //           <Col className='container-card'>\r\n  //             <Card\r\n  //               bg='light'\r\n  //               style={{ width: '90%' }}\r\n  //               className='mb-2 right-container__bottom box-shadow-main global-card-styles'\r\n  //               // border='light'\r\n  //             >\r\n  //               <Card.Body>\r\n  //                 <GaugeChart aqiParams={aqiParams} />\r\n\r\n  //                 <Card.Title>Total Count </Card.Title>\r\n  //               </Card.Body>\r\n  //             </Card>\r\n  //           </Col>\r\n  //           <Col className='container-card'>\r\n  //             <Card\r\n  //               bg='light'\r\n  //               style={{ width: '90%' }}\r\n  //               className='mb-2 right-container__bottom box-shadow-main global-card-styles'\r\n  //               // border='light'\r\n  //             >\r\n  //               <Card.Body>\r\n  //                 <PieChart\r\n  //                   // forestData={forestDataArray}\r\n  //                   forestDataObject={forestData}\r\n  //                 />\r\n\r\n  //                 <Card.Title>Total Count </Card.Title>\r\n  //               </Card.Body>\r\n  //             </Card>\r\n  //           </Col>\r\n  //           <Col className='container-card'>\r\n  //             <Card\r\n  //               bg='light'\r\n  //               style={{ width: '90%' }}\r\n  //               className='mb-2 right-container__bottom box-shadow-main global-card-styles'\r\n  //               // border='light'\r\n  //             >\r\n  //               <Card.Body>\r\n  //                 <LineChart2 rainfall={rainfall} />\r\n\r\n  //                 <Card.Title>Total Count </Card.Title>\r\n  //               </Card.Body>\r\n  //             </Card>\r\n  //           </Col>\r\n  //         </Row>\r\n  //         <Row className='map-page-row'>\r\n  //           <Table striped bordered hover>\r\n  //             <thead>\r\n  //               <tr>\r\n  //                 <th>#</th>\r\n  //                 <th>First Name</th>\r\n  //                 <th>Last Name</th>\r\n  //                 <th>Username</th>\r\n  //               </tr>\r\n  //             </thead>\r\n  //             <tbody>\r\n  //               <tr>\r\n  //                 <td>1</td>\r\n  //                 <td>Mark</td>\r\n  //                 <td>Otto</td>\r\n  //                 <td>@mdo</td>\r\n  //               </tr>\r\n  //               <tr>\r\n  //                 <td>2</td>\r\n  //                 <td>Jacob</td>\r\n  //                 <td>Thornton</td>\r\n  //                 <td>@fat</td>\r\n  //               </tr>\r\n  //               <tr>\r\n  //                 <td>3</td>\r\n  //                 <td colSpan={2}>Larry the Bird</td>\r\n  //                 <td>@twitter</td>\r\n  //               </tr>\r\n  //             </tbody>\r\n  //           </Table>\r\n  //         </Row>\r\n  //       </Container>\r\n  //     </React.Fragment>\r\n  //   );\r\n\r\n  return <div>{params.state}</div>;\r\n}\r\n\r\nexport default StatesPage;\r\n"]},"metadata":{},"sourceType":"module"}