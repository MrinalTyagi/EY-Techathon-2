{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AAVAIG\\\\Desktop\\\\EY-Techathon-2\\\\Frontend\\\\src\\\\components\\\\maps\\\\GaugeChart\\\\GaugeChart.js\";\nimport React from 'react';\nimport { Chart } from 'react-google-charts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GaugeChart() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Component, {\n      initialState: {\n        memory: 80,\n        cpu: 55,\n        network: 68,\n        intervalID: null\n      },\n      didMount: component => {\n        const intervalID = setInterval(() => {\n          component.setState({\n            memory: Math.random() * 100,\n            cpu: Math.random() * 100,\n            network: Math.random() * 100,\n            intervalID\n          });\n        }, 1000);\n      },\n      willUnmount: component => {\n        if (component.state.intervalID !== null) {\n          clearInterval(component.state.intervalID);\n        }\n      },\n      children: comp => {\n        return /*#__PURE__*/_jsxDEV(Chart, {\n          width: 400,\n          height: 120,\n          chartType: \"Gauge\",\n          loader: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 23\n          }, this),\n          data: [['Label', 'Value'], ['Memory', comp.state.memory], ['CPU', comp.state.cpu], ['Network', comp.state.network]],\n          options: {\n            redFrom: 90,\n            redTo: 100,\n            yellowFrom: 75,\n            yellowTo: 90,\n            minorTicks: 5\n          },\n          rootProps: {\n            'data-testid': '1'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n_c = GaugeChart;\nexport default GaugeChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"GaugeChart\");","map":{"version":3,"sources":["C:/Users/AAVAIG/Desktop/EY-Techathon-2/Frontend/src/components/maps/GaugeChart/GaugeChart.js"],"names":["React","Chart","GaugeChart","memory","cpu","network","intervalID","component","setInterval","setState","Math","random","state","clearInterval","comp","redFrom","redTo","yellowFrom","yellowTo","minorTicks"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,qBAAtB;;;AAEA,SAASC,UAAT,GAAsB;AACpB,sBACE;AAAA,2BACE,QAAC,SAAD;AACE,MAAA,YAAY,EAAE;AACZC,QAAAA,MAAM,EAAE,EADI;AAEZC,QAAAA,GAAG,EAAE,EAFO;AAGZC,QAAAA,OAAO,EAAE,EAHG;AAIZC,QAAAA,UAAU,EAAE;AAJA,OADhB;AAOE,MAAA,QAAQ,EAAGC,SAAD,IAAe;AACvB,cAAMD,UAAU,GAAGE,WAAW,CAAC,MAAM;AACnCD,UAAAA,SAAS,CAACE,QAAV,CAAmB;AACjBN,YAAAA,MAAM,EAAEO,IAAI,CAACC,MAAL,KAAgB,GADP;AAEjBP,YAAAA,GAAG,EAAEM,IAAI,CAACC,MAAL,KAAgB,GAFJ;AAGjBN,YAAAA,OAAO,EAAEK,IAAI,CAACC,MAAL,KAAgB,GAHR;AAIjBL,YAAAA;AAJiB,WAAnB;AAMD,SAP6B,EAO3B,IAP2B,CAA9B;AAQD,OAhBH;AAiBE,MAAA,WAAW,EAAGC,SAAD,IAAe;AAC1B,YAAIA,SAAS,CAACK,KAAV,CAAgBN,UAAhB,KAA+B,IAAnC,EAAyC;AACvCO,UAAAA,aAAa,CAACN,SAAS,CAACK,KAAV,CAAgBN,UAAjB,CAAb;AACD;AACF,OArBH;AAAA,gBAuBIQ,IAAD,IAAU;AACT,4BACE,QAAC,KAAD;AACE,UAAA,KAAK,EAAE,GADT;AAEE,UAAA,MAAM,EAAE,GAFV;AAGE,UAAA,SAAS,EAAC,OAHZ;AAIE,UAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJV;AAKE,UAAA,IAAI,EAAE,CACJ,CAAC,OAAD,EAAU,OAAV,CADI,EAEJ,CAAC,QAAD,EAAWA,IAAI,CAACF,KAAL,CAAWT,MAAtB,CAFI,EAGJ,CAAC,KAAD,EAAQW,IAAI,CAACF,KAAL,CAAWR,GAAnB,CAHI,EAIJ,CAAC,SAAD,EAAYU,IAAI,CAACF,KAAL,CAAWP,OAAvB,CAJI,CALR;AAWE,UAAA,OAAO,EAAE;AACPU,YAAAA,OAAO,EAAE,EADF;AAEPC,YAAAA,KAAK,EAAE,GAFA;AAGPC,YAAAA,UAAU,EAAE,EAHL;AAIPC,YAAAA,QAAQ,EAAE,EAJH;AAKPC,YAAAA,UAAU,EAAE;AALL,WAXX;AAkBE,UAAA,SAAS,EAAE;AAAE,2BAAe;AAAjB;AAlBb;AAAA;AAAA;AAAA;AAAA,gBADF;AAsBD;AA9CH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoDD;;KArDQjB,U;AAuDT,eAAeA,UAAf","sourcesContent":["import React from 'react';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nfunction GaugeChart() {\r\n  return (\r\n    <div>\r\n      <Component\r\n        initialState={{\r\n          memory: 80,\r\n          cpu: 55,\r\n          network: 68,\r\n          intervalID: null,\r\n        }}\r\n        didMount={(component) => {\r\n          const intervalID = setInterval(() => {\r\n            component.setState({\r\n              memory: Math.random() * 100,\r\n              cpu: Math.random() * 100,\r\n              network: Math.random() * 100,\r\n              intervalID,\r\n            });\r\n          }, 1000);\r\n        }}\r\n        willUnmount={(component) => {\r\n          if (component.state.intervalID !== null) {\r\n            clearInterval(component.state.intervalID);\r\n          }\r\n        }}\r\n      >\r\n        {(comp) => {\r\n          return (\r\n            <Chart\r\n              width={400}\r\n              height={120}\r\n              chartType='Gauge'\r\n              loader={<div>Loading Chart</div>}\r\n              data={[\r\n                ['Label', 'Value'],\r\n                ['Memory', comp.state.memory],\r\n                ['CPU', comp.state.cpu],\r\n                ['Network', comp.state.network],\r\n              ]}\r\n              options={{\r\n                redFrom: 90,\r\n                redTo: 100,\r\n                yellowFrom: 75,\r\n                yellowTo: 90,\r\n                minorTicks: 5,\r\n              }}\r\n              rootProps={{ 'data-testid': '1' }}\r\n            />\r\n          );\r\n        }}\r\n      </Component>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GaugeChart;\r\n"]},"metadata":{},"sourceType":"module"}