{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AAVAIG\\\\Desktop\\\\EY-Techathon-2\\\\Frontend\\\\src\\\\components\\\\maps\\\\LineChartJs\\\\LineChart.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Line as LineJS } from 'chart.js/auto';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LineChart = _ref => {\n  let {\n    dataApi,\n    forestCover,\n    years\n  } = _ref;\n\n  const fetchData = async () => {\n    const response = await fetch('http://127.0.0.1:5000/', {\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log(data.Data); // console.log(\n    //   data['Data'].forEach((year) => year['Total Forest Cover Area'])\n    // );\n    // for( in data.Data){\n    // }\n    // Object.keys(data.Data).forEach((year) =>\n    //   console.log(year['Total Forest Cover Area'])\n    // );\n    // setYears(Object.keys(data.Data));\n    // years = Object.keys(data.Data);\n    // setForestCover(\n    //   years.map((item) => data.Data[item]['Total Forest Cover Area'])\n    // );\n    // forestCover = years.map(\n    //   (item) => data.Data[item]['Total Forest Cover Area']\n    // );\n    // console.log(data.Data['2019']['Total Forest Cover Area']);\n\n    console.log(years);\n    console.log(forestCover); // setDataApi([data]);\n    // setIndiaData([data]);\n  }; //   useEffect(() => {\n  //     fetchData();\n  //   }, [forestCover.length]);\n  //   return (\n  //     {\n  //         forestCover ? (<>Loading</>) : (\n  //\n  //         )\n  //     }\n  //   )\n  //     // return (\n  //     // );\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: dataApi.length !== 0 && /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        labels: years,\n        datasets: [{\n          label: 'forestCover',\n          data: forestCover,\n          backgroundColor: ['rgb(255, 99, 132)'],\n          //   borderColor: [\n          //     'rgba(255, 99, 132, 1)',\n          //     'rgba(54, 162, 235, 1)',\n          //     'rgba(255, 206, 86, 1)',\n          //     'rgba(75, 192, 192, 1)',\n          //     'rgba(153, 102, 255, 1)',\n          //     'rgba(255, 159, 64, 1)',\n          //   ],\n          borderWidth: 1\n        }]\n      },\n      height: 130,\n      width: 500,\n      options: {\n        maintainAspectRatio: true,\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["C:/Users/AAVAIG/Desktop/EY-Techathon-2/Frontend/src/components/maps/LineChartJs/LineChart.js"],"names":["React","useState","useEffect","Line","LineJS","LineChart","dataApi","forestCover","years","fetchData","response","fetch","headers","data","json","console","log","Data","length","labels","datasets","label","backgroundColor","borderWidth","maintainAspectRatio","scales","y","beginAtZero"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,IAAI,IAAIC,MAAjB,QAA+B,eAA/B;AACA,SAASD,IAAT,QAAqB,iBAArB;;;;AAEA,MAAME,SAAS,GAAG,QAAqC;AAAA,MAApC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,WAAX;AAAwBC,IAAAA;AAAxB,GAAoC;;AACrD,QAAMC,SAAS,GAAG,YAAY;AAC5B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAD,EAA2B;AACrDC,MAAAA,OAAO,EAAE;AACP,uCAA+B,GADxB;AAEP,wBAAgB;AAFT;AAD4C,KAA3B,CAA5B;AAOA,UAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,IAAjB,EAT4B,CAW5B;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEAF,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYT,WAAZ,EArC4B,CAuC5B;AAEA;AACD,GA1CD,CADqD,CA6CrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,sBACE;AAAA,cACGD,OAAO,CAACY,MAAR,KAAmB,CAAnB,iBACC,QAAC,IAAD;AACE,MAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAEX,KADJ;AAEJY,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,aADT;AAEER,UAAAA,IAAI,EAAEN,WAFR;AAGEe,UAAAA,eAAe,EAAE,CAAC,mBAAD,CAHnB;AAIE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,UAAAA,WAAW,EAAE;AAZf,SADQ;AAFN,OADR;AAoBE,MAAA,MAAM,EAAE,GApBV;AAqBE,MAAA,KAAK,EAAE,GArBT;AAsBE,MAAA,OAAO,EAAE;AACPC,QAAAA,mBAAmB,EAAE,IADd;AAEPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,CAAC,EAAE;AACDC,YAAAA,WAAW,EAAE;AADZ;AADG;AAFD;AAtBX;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADF;AAqCD,CAhGD;;KAAMtB,S;AAkGN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport { Line as LineJS } from 'chart.js/auto';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst LineChart = ({ dataApi, forestCover, years }) => {\r\n  const fetchData = async () => {\r\n    const response = await fetch('http://127.0.0.1:5000/', {\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    const data = await response.json();\r\n    console.log(data.Data);\r\n\r\n    // console.log(\r\n    //   data['Data'].forEach((year) => year['Total Forest Cover Area'])\r\n    // );\r\n\r\n    // for( in data.Data){\r\n\r\n    // }\r\n    // Object.keys(data.Data).forEach((year) =>\r\n    //   console.log(year['Total Forest Cover Area'])\r\n    // );\r\n\r\n    // setYears(Object.keys(data.Data));\r\n\r\n    // years = Object.keys(data.Data);\r\n\r\n    // setForestCover(\r\n    //   years.map((item) => data.Data[item]['Total Forest Cover Area'])\r\n    // );\r\n\r\n    // forestCover = years.map(\r\n    //   (item) => data.Data[item]['Total Forest Cover Area']\r\n    // );\r\n\r\n    // console.log(data.Data['2019']['Total Forest Cover Area']);\r\n\r\n    console.log(years);\r\n    console.log(forestCover);\r\n\r\n    // setDataApi([data]);\r\n\r\n    // setIndiaData([data]);\r\n  };\r\n\r\n  //   useEffect(() => {\r\n  //     fetchData();\r\n  //   }, [forestCover.length]);\r\n  //   return (\r\n  //     {\r\n  //         forestCover ? (<>Loading</>) : (\r\n  //\r\n  //         )\r\n  //     }\r\n  //   )\r\n  //     // return (\r\n\r\n  //     // );\r\n\r\n  return (\r\n    <>\r\n      {dataApi.length !== 0 && (\r\n        <Line\r\n          data={{\r\n            labels: years,\r\n            datasets: [\r\n              {\r\n                label: 'forestCover',\r\n                data: forestCover,\r\n                backgroundColor: ['rgb(255, 99, 132)'],\r\n                //   borderColor: [\r\n                //     'rgba(255, 99, 132, 1)',\r\n                //     'rgba(54, 162, 235, 1)',\r\n                //     'rgba(255, 206, 86, 1)',\r\n                //     'rgba(75, 192, 192, 1)',\r\n                //     'rgba(153, 102, 255, 1)',\r\n                //     'rgba(255, 159, 64, 1)',\r\n                //   ],\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n          }}\r\n          height={130}\r\n          width={500}\r\n          options={{\r\n            maintainAspectRatio: true,\r\n            scales: {\r\n              y: {\r\n                beginAtZero: true,\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n"]},"metadata":{},"sourceType":"module"}