{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AAVAIG\\\\Desktop\\\\EY-Techathon-2\\\\Frontend\\\\src\\\\components\\\\MapBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar mapboxgl = require('mapbox-gl/dist/mapbox-gl.js');\n\nfunction MapBox() {\n  _s();\n\n  const loadMap = () => {\n    // mapboxgl.accessToken =\n    //   'pk.eyJ1IjoiYWF2YWlnMjA2OSIsImEiOiJja3gyNjhkdG0xOTljMnBueTluZnA0YzFzIn0.eZB9Au7ertDodRUyEVQHZQ';\n    // var map = new mapboxgl.Map({\n    //   container: 'mapbox-map',\n    //   // style: 'mapbox://styles/mapbox/satellite-v9',\n    //   style: 'mapbox://styles/mapbox/light-v10',\n    //   center: [78.9629, 20.5937],\n    //   zoom: 3.5,\n    //   minZoom: 3.5,\n    // });\n    // map.on('load', () => {\n    //   console.log('map loaded');\n    //   map.addSource('mapbox-terrain', {\n    //     type: 'vector',\n    //     // Use any Mapbox-hosted tileset using its tileset id.\n    //     // Learn more about where to find a tileset id:\n    //     // https://docs.mapbox.com/help/glossary/tileset-id/\n    //     url: 'mapbox://aavaig2069.4p9dmkt8',\n    //   });\n    //   map.addLayer({\n    //     source: 'mapbox-terrain',\n    //     'source-layer': 'contour',\n    //     layout: {\n    //       'line-join': 'round',\n    //       'line-cap': 'round',\n    //     },\n    //     paint: {\n    //       'line-color': '#ff69b4',\n    //       'line-width': 1,\n    //     },\n    //   });\n    // });\n    // mapboxgl.accessToken = 'pk.mapboxgl.accessToken = 'pk.eyJ1IjoiYWF2YWlnMjA2OSIsImEiOiJja3gyNjhkdG0xOTljMnBueTluZnA0YzFzIn0.eZB9Au7ertDodRUyEVQHZQ';\n    const map = new mapboxgl.Map({\n      container: 'mapbox-map',\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [-88.13734351262877, 35.137451890638886],\n      zoom: 4\n    });\n    map.on('load', () => {\n      const layers = map.getStyle().layers; // Find the index of the first symbol layer in the map style\n\n      let firstSymbolId;\n\n      for (const layer of layers) {\n        if (layer === 'symbol') {\n          firstSymbolId = layer.id;\n          break;\n        }\n      }\n\n      map.addSource('urban-areas', {\n        // type: 'geojson',\n        // data: 'https://docs.mapbox.com/mapbox-gl-js/assets/ne_50m_urban_areas.geojson',\n        'mapbox-streets': {\n          type: 'vector',\n          url: 'mapbox://aavaig2069.4p9dmkt8'\n        }\n      });\n      map.addLayer({\n        id: 'urban-areas-fill',\n        type: 'fill',\n        source: 'urban-areas',\n        layout: {},\n        paint: {\n          'fill-color': '#f08',\n          'fill-opacity': 0.4\n        } // This is the important part of this example: the addLayer\n        // method takes 2 arguments: the layer as an object, and a string\n        // representing another layer's name. if the other layer\n        // exists in the stylesheet already, the new layer will be positioned\n        // right before that layer in the stack, making it possible to put\n        // 'overlays' anywhere in the layer stack.\n        // Insert the layer beneath the first symbol layer.\n\n      }, firstSymbolId);\n    });\n  };\n\n  useEffect(() => {\n    loadMap();\n  }, []); //   return <div id='mapbox-map'></div>;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"mapbox-map\",\n    style: {\n      height: '100%'\n    },\n    children: \"Mapbox\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MapBox, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = MapBox;\nexport default MapBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapBox\");","map":{"version":3,"sources":["C:/Users/AAVAIG/Desktop/EY-Techathon-2/Frontend/src/components/MapBox.js"],"names":["React","useEffect","useState","mapboxgl","require","MapBox","loadMap","map","Map","container","style","center","zoom","on","layers","getStyle","firstSymbolId","layer","id","addSource","type","url","addLayer","source","layout","paint","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,6BAAD,CAAtB;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAMC,OAAO,GAAG,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,UAAMC,GAAG,GAAG,IAAIJ,QAAQ,CAACK,GAAb,CAAiB;AAC3BC,MAAAA,SAAS,EAAE,YADgB;AAE3BC,MAAAA,KAAK,EAAE,oCAFoB;AAG3BC,MAAAA,MAAM,EAAE,CAAC,CAAC,iBAAF,EAAqB,kBAArB,CAHmB;AAI3BC,MAAAA,IAAI,EAAE;AAJqB,KAAjB,CAAZ;AAOAL,IAAAA,GAAG,CAACM,EAAJ,CAAO,MAAP,EAAe,MAAM;AACnB,YAAMC,MAAM,GAAGP,GAAG,CAACQ,QAAJ,GAAeD,MAA9B,CADmB,CAEnB;;AACA,UAAIE,aAAJ;;AACA,WAAK,MAAMC,KAAX,IAAoBH,MAApB,EAA4B;AAC1B,YAAIG,KAAK,KAAK,QAAd,EAAwB;AACtBD,UAAAA,aAAa,GAAGC,KAAK,CAACC,EAAtB;AACA;AACD;AACF;;AAEDX,MAAAA,GAAG,CAACY,SAAJ,CAAc,aAAd,EAA6B;AAC3B;AACA;AACA,0BAAkB;AAChBC,UAAAA,IAAI,EAAE,QADU;AAEhBC,UAAAA,GAAG,EAAE;AAFW;AAHS,OAA7B;AAQAd,MAAAA,GAAG,CAACe,QAAJ,CACE;AACEJ,QAAAA,EAAE,EAAE,kBADN;AAEEE,QAAAA,IAAI,EAAE,MAFR;AAGEG,QAAAA,MAAM,EAAE,aAHV;AAIEC,QAAAA,MAAM,EAAE,EAJV;AAKEC,QAAAA,KAAK,EAAE;AACL,wBAAc,MADT;AAEL,0BAAgB;AAFX,SALT,CASE;AACA;AACA;AACA;AACA;AACA;AACA;;AAfF,OADF,EAkBET,aAlBF;AAoBD,KAvCD;AAwCD,GAnFD;;AAqFAf,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT,CAtFgB,CA0FhB;;AACA,sBACE;AAAK,IAAA,EAAE,EAAC,YAAR;AAAqB,IAAA,KAAK,EAAE;AAAEoB,MAAAA,MAAM,EAAE;AAAV,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAhGQrB,M;;KAAAA,M;AAkGT,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nvar mapboxgl = require('mapbox-gl/dist/mapbox-gl.js');\r\n\r\nfunction MapBox() {\r\n  const loadMap = () => {\r\n    // mapboxgl.accessToken =\r\n    //   'pk.eyJ1IjoiYWF2YWlnMjA2OSIsImEiOiJja3gyNjhkdG0xOTljMnBueTluZnA0YzFzIn0.eZB9Au7ertDodRUyEVQHZQ';\r\n    // var map = new mapboxgl.Map({\r\n    //   container: 'mapbox-map',\r\n    //   // style: 'mapbox://styles/mapbox/satellite-v9',\r\n    //   style: 'mapbox://styles/mapbox/light-v10',\r\n    //   center: [78.9629, 20.5937],\r\n    //   zoom: 3.5,\r\n    //   minZoom: 3.5,\r\n    // });\r\n\r\n    // map.on('load', () => {\r\n    //   console.log('map loaded');\r\n    //   map.addSource('mapbox-terrain', {\r\n    //     type: 'vector',\r\n    //     // Use any Mapbox-hosted tileset using its tileset id.\r\n    //     // Learn more about where to find a tileset id:\r\n    //     // https://docs.mapbox.com/help/glossary/tileset-id/\r\n    //     url: 'mapbox://aavaig2069.4p9dmkt8',\r\n    //   });\r\n    //   map.addLayer({\r\n    //     source: 'mapbox-terrain',\r\n    //     'source-layer': 'contour',\r\n    //     layout: {\r\n    //       'line-join': 'round',\r\n    //       'line-cap': 'round',\r\n    //     },\r\n    //     paint: {\r\n    //       'line-color': '#ff69b4',\r\n    //       'line-width': 1,\r\n    //     },\r\n    //   });\r\n    // });\r\n\r\n    // mapboxgl.accessToken = 'pk.mapboxgl.accessToken = 'pk.eyJ1IjoiYWF2YWlnMjA2OSIsImEiOiJja3gyNjhkdG0xOTljMnBueTluZnA0YzFzIn0.eZB9Au7ertDodRUyEVQHZQ';\r\n    const map = new mapboxgl.Map({\r\n      container: 'mapbox-map',\r\n      style: 'mapbox://styles/mapbox/streets-v11',\r\n      center: [-88.13734351262877, 35.137451890638886],\r\n      zoom: 4,\r\n    });\r\n\r\n    map.on('load', () => {\r\n      const layers = map.getStyle().layers;\r\n      // Find the index of the first symbol layer in the map style\r\n      let firstSymbolId;\r\n      for (const layer of layers) {\r\n        if (layer === 'symbol') {\r\n          firstSymbolId = layer.id;\r\n          break;\r\n        }\r\n      }\r\n\r\n      map.addSource('urban-areas', {\r\n        // type: 'geojson',\r\n        // data: 'https://docs.mapbox.com/mapbox-gl-js/assets/ne_50m_urban_areas.geojson',\r\n        'mapbox-streets': {\r\n          type: 'vector',\r\n          url: 'mapbox://aavaig2069.4p9dmkt8',\r\n        },\r\n      });\r\n      map.addLayer(\r\n        {\r\n          id: 'urban-areas-fill',\r\n          type: 'fill',\r\n          source: 'urban-areas',\r\n          layout: {},\r\n          paint: {\r\n            'fill-color': '#f08',\r\n            'fill-opacity': 0.4,\r\n          },\r\n          // This is the important part of this example: the addLayer\r\n          // method takes 2 arguments: the layer as an object, and a string\r\n          // representing another layer's name. if the other layer\r\n          // exists in the stylesheet already, the new layer will be positioned\r\n          // right before that layer in the stack, making it possible to put\r\n          // 'overlays' anywhere in the layer stack.\r\n          // Insert the layer beneath the first symbol layer.\r\n        },\r\n        firstSymbolId\r\n      );\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadMap();\r\n  }, []);\r\n\r\n  //   return <div id='mapbox-map'></div>;\r\n  return (\r\n    <div id='mapbox-map' style={{ height: '100%' }}>\r\n      Mapbox\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapBox;\r\n"]},"metadata":{},"sourceType":"module"}