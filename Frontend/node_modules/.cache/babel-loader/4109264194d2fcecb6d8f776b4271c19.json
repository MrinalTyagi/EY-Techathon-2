{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AAVAIG\\\\Desktop\\\\EY-Techathon-2\\\\Frontend\\\\src\\\\components\\\\maps\\\\GaugeChart\\\\GaugeChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Chart } from 'react-google-charts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction GaugeChart(_ref) {\n  _s();\n\n  let {\n    aqiParams\n  } = _ref;\n  const [selectedYear, setSelectedYear] = useState(2015);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      width: '100%',\n      flexDirection: 'column'\n    },\n    children: aqiParams.length !== 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aqi-param-selector\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedYear,\n          onChange: e => setSelectedYear(e.target.value),\n          children: aqiParams.map(arr => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              val: arr.year,\n              children: arr.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Chart, {\n        width: '100%',\n        height: '100%',\n        chartType: \"Gauge\",\n        loader: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this),\n        data: [['AQI Param', '%Value'], ['SO2', aqiParams[1] / 10000]],\n        options: {\n          redFrom: 90,\n          redTo: 100,\n          yellowFrom: 75,\n          yellowTo: 90,\n          minorTicks: 5\n        },\n        rootProps: {\n          'data-testid': '1'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GaugeChart, \"8CoeplcYEOvRKpZQng6OeUwzmtE=\");\n\n_c = GaugeChart;\nexport default GaugeChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"GaugeChart\");","map":{"version":3,"sources":["C:/Users/AAVAIG/Desktop/EY-Techathon-2/Frontend/src/components/maps/GaugeChart/GaugeChart.js"],"names":["React","useState","Chart","GaugeChart","aqiParams","selectedYear","setSelectedYear","display","justifyContent","width","flexDirection","length","e","target","value","map","arr","year","redFrom","redTo","yellowFrom","yellowTo","minorTicks"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,qBAAtB;;;;AAEA,SAASC,UAAT,OAAmC;AAAA;;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AACjC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,IAAD,CAAhD;AAEA,sBACE;AACE,IAAA,KAAK,EAAE;AACLM,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,cAAc,EAAE,QAFX;AAGLC,MAAAA,KAAK,EAAE,MAHF;AAILC,MAAAA,aAAa,EAAE;AAJV,KADT;AAAA,cAQGN,SAAS,CAACO,MAAV,KAAqB,CAArB,iBACC;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BACE;AACE,UAAA,KAAK,EAAEN,YADT;AAEE,UAAA,QAAQ,EAAGO,CAAD,IAAON,eAAe,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAFlC;AAAA,oBAIGV,SAAS,CAACW,GAAV,CAAeC,GAAD,IAAS;AACtB,gCAAO;AAAQ,cAAA,GAAG,EAAEA,GAAG,CAACC,IAAjB;AAAA,wBAAwBD,GAAG,CAACC;AAA5B;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAFA;AAJH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAYE,QAAC,KAAD;AACE,QAAA,KAAK,EAAE,MADT;AAEE,QAAA,MAAM,EAAE,MAFV;AAGE,QAAA,SAAS,EAAC,OAHZ;AAIE,QAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJV;AAKE,QAAA,IAAI,EAAE,CACJ,CAAC,WAAD,EAAc,QAAd,CADI,EAEJ,CAAC,KAAD,EAAQb,SAAS,CAAC,CAAD,CAAT,GAAe,KAAvB,CAFI,CALR;AASE,QAAA,OAAO,EAAE;AACPc,UAAAA,OAAO,EAAE,EADF;AAEPC,UAAAA,KAAK,EAAE,GAFA;AAGPC,UAAAA,UAAU,EAAE,EAHL;AAIPC,UAAAA,QAAQ,EAAE,EAJH;AAKPC,UAAAA,UAAU,EAAE;AALL,SATX;AAgBE,QAAA,SAAS,EAAE;AAAE,yBAAe;AAAjB;AAhBb;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD;;GA/CQnB,U;;KAAAA,U;AAiDT,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nfunction GaugeChart({ aqiParams }) {\r\n  const [selectedYear, setSelectedYear] = useState(2015);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        width: '100%',\r\n        flexDirection: 'column',\r\n      }}\r\n    >\r\n      {aqiParams.length !== 0 && (\r\n        <>\r\n          <div className='aqi-param-selector'>\r\n            <select\r\n              value={selectedYear}\r\n              onChange={(e) => setSelectedYear(e.target.value)}\r\n            >\r\n              {aqiParams.map((arr) => {\r\n                return <option val={arr.year}>{arr.year}</option>;\r\n              })}\r\n            </select>\r\n          </div>\r\n\r\n          <Chart\r\n            width={'100%'}\r\n            height={'100%'}\r\n            chartType='Gauge'\r\n            loader={<div>Loading Chart</div>}\r\n            data={[\r\n              ['AQI Param', '%Value'],\r\n              ['SO2', aqiParams[1] / 10000],\r\n            ]}\r\n            options={{\r\n              redFrom: 90,\r\n              redTo: 100,\r\n              yellowFrom: 75,\r\n              yellowTo: 90,\r\n              minorTicks: 5,\r\n            }}\r\n            rootProps={{ 'data-testid': '1' }}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GaugeChart;\r\n"]},"metadata":{},"sourceType":"module"}