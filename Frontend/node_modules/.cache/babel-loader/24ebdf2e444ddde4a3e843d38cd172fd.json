{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AAVAIG\\\\Desktop\\\\EY-Techathon-2\\\\Frontend\\\\src\\\\components\\\\maps\\\\GaugeChart\\\\GaugeChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Chart } from 'react-google-charts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction GaugeChart(_ref) {\n  _s();\n\n  let {\n    aqiParams,\n    aqiArr\n  } = _ref;\n  // const [selectedYear, setSelectedYear] = useState(2015);\n  const [selectedAqiParam, setSelectedAqiParam] = useState('SO2');\n  const [selectedIndex, setSelectedIndex] = useState('2019');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      width: '100%',\n      flexDirection: 'column'\n    },\n    children: aqiParams.length !== 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aqi-param-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"param-selector\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedAqiParam,\n            onChange: e => setSelectedAqiParam(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"SO2\",\n              children: \"SO2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"NO2\",\n              children: \"NO2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"RSPM\",\n              children: \"RSPM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"SPM\",\n              children: \"SPM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"PM25\",\n              children: \"PM25\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"year-selector\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: aqiArr[selectedIndex].year,\n            onChange: e => setSelectedIndex(e.target.value),\n            children: aqiArr.map((val, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: idx,\n              children: aqiArr[idx].year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Chart, {\n        width: '100%',\n        height: '100%',\n        chartType: \"Gauge\",\n        loader: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this),\n        data: [['AQI Param', '%Value'], [selectedAqiParam, aqiArr[selectedYear][selectedAqiParam] / 100000]],\n        options: {\n          redFrom: 90,\n          redTo: 100,\n          yellowFrom: 75,\n          yellowTo: 90,\n          minorTicks: 5\n        },\n        rootProps: {\n          'data-testid': '1'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GaugeChart, \"fHG3AHJO8rEQXnhp/g0YZTzWkiU=\");\n\n_c = GaugeChart;\nexport default GaugeChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"GaugeChart\");","map":{"version":3,"sources":["C:/Users/AAVAIG/Desktop/EY-Techathon-2/Frontend/src/components/maps/GaugeChart/GaugeChart.js"],"names":["React","useState","Chart","GaugeChart","aqiParams","aqiArr","selectedAqiParam","setSelectedAqiParam","selectedIndex","setSelectedIndex","display","justifyContent","width","flexDirection","length","e","target","value","year","map","val","idx","selectedYear","redFrom","redTo","yellowFrom","yellowTo","minorTicks"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nfunction GaugeChart({ aqiParams, aqiArr }) {\r\n  // const [selectedYear, setSelectedYear] = useState(2015);\r\n\r\n  const [selectedAqiParam, setSelectedAqiParam] = useState('SO2');\r\n  const [selectedIndex, setSelectedIndex] = useState('2019');\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        width: '100%',\r\n        flexDirection: 'column',\r\n      }}\r\n    >\r\n      {aqiParams.length !== 0 && (\r\n        <>\r\n          <div className='aqi-param-selector'>\r\n            <div className='param-selector'>\r\n              <select\r\n                value={selectedAqiParam}\r\n                onChange={(e) => setSelectedAqiParam(e.target.value)}\r\n              >\r\n                <option value='SO2'>SO2</option>\r\n                <option value='NO2'>NO2</option>\r\n                <option value='RSPM'>RSPM</option>\r\n                <option value='SPM'>SPM</option>\r\n                <option value='PM25'>PM25</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className='year-selector'>\r\n              <select\r\n                value={aqiArr[selectedIndex].year}\r\n                onChange={(e) => setSelectedIndex(e.target.value)}\r\n              >\r\n                {aqiArr.map((val, idx) => (\r\n                  <option value={idx}>{aqiArr[idx].year}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <Chart\r\n            width={'100%'}\r\n            height={'100%'}\r\n            chartType='Gauge'\r\n            loader={<div>Loading Chart</div>}\r\n            data={[\r\n              ['AQI Param', '%Value'],\r\n              [\r\n                selectedAqiParam,\r\n                aqiArr[selectedYear][selectedAqiParam] / 100000,\r\n              ],\r\n            ]}\r\n            options={{\r\n              redFrom: 90,\r\n              redTo: 100,\r\n              yellowFrom: 75,\r\n              yellowTo: 90,\r\n              minorTicks: 5,\r\n            }}\r\n            rootProps={{ 'data-testid': '1' }}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GaugeChart;\r\n"]},"metadata":{},"sourceType":"module"}