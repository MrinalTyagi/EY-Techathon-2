[{"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\index.js":"1","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\App.js":"2","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\pages\\MapPage.js":"3","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\NavBar\\NavBar.js":"4","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\MapBox.js":"5","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\GeoChart.js":"6","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\hooks\\useResizeObserver.js":"7","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\TreeMap\\Treemap.js":"8","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\LineChartJs\\LineChart.js":"9","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\ComboChart\\ComboChart.js":"10","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\GaugeChart\\GaugeChart.js":"11","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\PieChart\\PieChart.js":"12","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\LineChartJs\\LineChart2.js":"13","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\BarChart\\BarChart.js":"14","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\LineChartJs\\LineChart3.js":"15","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\pages\\StatesPage.js":"16","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\IndiaVegetation.js":"17","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\IndiaClimate.js":"18","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\gifMaps\\GujaratClimate.js":"19","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\gifMaps\\GujaratVegetation.js":"20","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\gifMaps\\TamilNaduVegetation.js":"21","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\gifMaps\\HimachalPradeshClimate.js":"22","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\gifMaps\\TamilNaduClimate.js":"23","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\gifMaps\\HimachalPradeshVegetation.js":"24"},{"size":447,"mtime":1639231486247,"results":"25","hashOfConfig":"26"},{"size":694,"mtime":1639401136989,"results":"27","hashOfConfig":"26"},{"size":16437,"mtime":1639432206469,"results":"28","hashOfConfig":"26"},{"size":1977,"mtime":1639435784059,"results":"29","hashOfConfig":"26"},{"size":1509,"mtime":1639435376859,"results":"30","hashOfConfig":"26"},{"size":1765,"mtime":1639419715824,"results":"31","hashOfConfig":"26"},{"size":726,"mtime":1639231486090,"results":"32","hashOfConfig":"26"},{"size":412,"mtime":1639305994948,"results":"33","hashOfConfig":"26"},{"size":1186,"mtime":1639336324289,"results":"34","hashOfConfig":"26"},{"size":1268,"mtime":1639428755683,"results":"35","hashOfConfig":"26"},{"size":2818,"mtime":1639431391641,"results":"36","hashOfConfig":"26"},{"size":2451,"mtime":1639431416880,"results":"37","hashOfConfig":"26"},{"size":952,"mtime":1639431274901,"results":"38","hashOfConfig":"26"},{"size":1111,"mtime":1639346809279,"results":"39","hashOfConfig":"26"},{"size":1272,"mtime":1639428660783,"results":"40","hashOfConfig":"26"},{"size":17895,"mtime":1639455535860,"results":"41","hashOfConfig":"26"},{"size":423,"mtime":1639454650220,"results":"42","hashOfConfig":"26"},{"size":331,"mtime":1639425808723,"results":"43","hashOfConfig":"26"},{"size":401,"mtime":1639454776885,"results":"44","hashOfConfig":"26"},{"size":416,"mtime":1639454711796,"results":"45","hashOfConfig":"26"},{"size":425,"mtime":1639455270199,"results":"46","hashOfConfig":"26"},{"size":435,"mtime":1639455335787,"results":"47","hashOfConfig":"26"},{"size":410,"mtime":1639455236607,"results":"48","hashOfConfig":"26"},{"size":450,"mtime":1639455407560,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1pm4n9y",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\index.js",[],["106","107"],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\App.js",["108","109","110","111","112"],"import React from 'react';\r\nimport './App.css';\r\nimport MapPage from './pages/MapPage';\r\nimport NavBar from './components/NavBar/NavBar';\r\n\r\nimport { Button, Container, Row, Col, Figure } from 'react-bootstrap';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport StatesPage from './pages/StatesPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <NavBar />\r\n        <div className='wrapper-container'>\r\n          <Routes>\r\n            <Route path='/' exact element={<MapPage />} />\r\n            <Route path='/:state' element={<StatesPage />} />\r\n          </Routes>\r\n        </div>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\pages\\MapPage.js",["113","114","115","116","117","118","119","120","121","122","123","124","125","126"],"import React, { useState, useEffect } from 'react';\r\nimport '../App.css';\r\nimport data from '../india.min.geo.json';\r\nimport GeoChart from '../components/GeoChart';\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  Carousel,\r\n  Col,\r\n  Container,\r\n  Dropdown,\r\n  Figure,\r\n  Row,\r\n  Spinner,\r\n  Table,\r\n  ToggleButton,\r\n} from 'react-bootstrap';\r\nimport { FaArrowUp } from 'react-icons/fa';\r\nimport MapBox from '../components/MapBox';\r\nimport LineChart from '../components/maps/LineChartJs/LineChart';\r\nimport ComboChart from '../components/maps/ComboChart/ComboChart';\r\nimport GaugeChart from '../components/maps/GaugeChart/GaugeChart';\r\nimport PieChart from '../components/maps/PieChart/PieChart';\r\nimport LineChart2 from '../components/maps/LineChartJs/LineChart2';\r\nimport BarChart from '../components/maps/BarChart/BarChart';\r\nimport LineChart3 from '../components/maps/LineChartJs/LineChart3';\r\nimport IndiaVegetation from '../components/IndiaVegetation';\r\nimport IndiaClimate from '../components/IndiaClimate';\r\nimport CountUp from 'react-countup';\r\n\r\n// const token = `sk.eyJ1IjoiYWF2YWlnMjA2OSIsImEiOiJja3gyNmU5dWMwOGNwMm5xazJsbTJkdndsIn0.P8U1m-KogLxOchRCfvY60Q`;\r\n\r\nfunction MapPage() {\r\n  const [normalSelected, setNormalSelected] = useState(true);\r\n\r\n  const [indiaData, setIndiaData] = useState([]);\r\n  const [dataApi, setDataApi] = useState([]);\r\n  const [years, setYears] = useState([]);\r\n  const [forestCover, setForestCover] = useState([]);\r\n  const [forestData, setForestData] = useState([]);\r\n  const [forestDataArray, setForestDataArray] = useState([]);\r\n  const [rainfall, setRainfall] = useState([]);\r\n  const [aqiParams, setAqiParams] = useState([]);\r\n  const [aqiArr, setAqiArr] = useState([]);\r\n  const [comboChartData, setComboChartData] = useState([]);\r\n\r\n  const [inputYear, setInputYear] = useState(2022);\r\n  const [inputArea, setInputArea] = useState('India');\r\n  const [predictedResult, setPredictedResult] = useState(665688.922946932);\r\n\r\n  const [view, setView] = useState('Normal View');\r\n\r\n  const fetchData = async () => {\r\n    const response = await fetch('http://127.0.0.1:5000/', {\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    console.log(data.Data);\r\n\r\n    setYears(Object.keys(data.Data));\r\n\r\n    setForestCover(\r\n      years.map((item) => data.Data[item]['Total Forest Cover Area'])\r\n    );\r\n\r\n    const annualRainfall = Object.keys(data.Data).map((year) => [\r\n      year,\r\n      data.Data[year]['Annual Rainfall'],\r\n    ]);\r\n\r\n    setRainfall(annualRainfall.filter((item) => item[1] !== 0));\r\n\r\n    setDataApi([data.Data]);\r\n\r\n    const forestObj = Object.keys(data.Data).map((year) => {\r\n      return {\r\n        year,\r\n        TFC: data.Data[year]['Total Forest Cover Area'],\r\n        VDC: data.Data[year]['Very Dense Forest Area'],\r\n        MDC: data.Data[year]['Moderately Dense Forest Area'],\r\n        MFC: data.Data[year]['Mangrove Forest Area'],\r\n        OFA: data.Data[year]['Open Forest Area'],\r\n        SLA: data.Data[year]['Scrub Land Area'],\r\n      };\r\n    });\r\n\r\n    // console.log(forestObj);\r\n\r\n    const forestArr = Object.keys(data.Data).map((year) => {\r\n      return [\r\n        year,\r\n        data.Data[year]['Total Forest Cover Area'],\r\n        data.Data[year]['Very Dense Forest Area'],\r\n        data.Data[year]['Moderately Dense Forest Area'],\r\n        data.Data[year]['Mangrove Forest Area'],\r\n        data.Data[year]['Open Forest Area'],\r\n        data.Data[year]['Scrub Land Area'],\r\n      ];\r\n    });\r\n\r\n    // console.log(forestObj);\r\n    setForestData(forestObj);\r\n\r\n    setForestDataArray(forestArr);\r\n\r\n    const aqiVal = {\r\n      year: 2015,\r\n      SO2: data.Data['2015']['SO2'],\r\n      NO2: data.Data['2015']['NO2'],\r\n      RSPM: data.Data['2015']['RSPM'],\r\n      SPM: data.Data['2015']['SPM'],\r\n      PM25: data.Data['2015']['PM25'],\r\n    };\r\n\r\n    const aqiValArr = Object.keys(data.Data).map((year) => {\r\n      return {\r\n        year: year,\r\n        SO2: data.Data[year]['SO2'],\r\n        NO2: data.Data[year]['NO2'],\r\n        RSPM: data.Data[year]['RSPM'],\r\n        SPM: data.Data[year]['SPM'],\r\n        PM25: data.Data[year]['PM25'],\r\n      };\r\n    });\r\n\r\n    setAqiParams(aqiVal);\r\n\r\n    // aqiValArr.forEach((val, idx) => console.log(aqiValArr[idx].year));\r\n\r\n    console.log(aqiValArr);\r\n\r\n    setAqiArr(aqiValArr);\r\n\r\n    const comboData = Object.keys(data.Data).map((year) => [\r\n      year,\r\n      data.Data[year]['Total Forest Cover Area'],\r\n      data.Data[year]['N_Annual_Rainfall'],\r\n      data.Data[year]['N_SPM'],\r\n    ]);\r\n\r\n    // console.log(comboData);\r\n    setComboChartData(comboData);\r\n\r\n    // const aqiVal =\r\n\r\n    // console.log(aqiVal);\r\n\r\n    // console.log(aqiVal[1][1]);\r\n  };\r\n\r\n  const onSubmitPostRequest = (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('year', inputYear);\r\n    formData.append('area', inputArea);\r\n\r\n    console.log(inputYear, inputArea);\r\n\r\n    fetch('http://127.0.0.1:5000/predict/TFA', {\r\n      method: 'POST',\r\n      // mode: 'no-cors',\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        // Accept: 'application/json',\r\n        // 'Content-Type': 'application/json',\r\n      },\r\n      // body: JSON.stringify({ year: inputYear, area: inputArea }),\r\n      body: formData,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data['Result']);\r\n        setPredictedResult(data['Result']);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [dataApi.length]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container className='main-container' fluid>\r\n        <Row style={{ height: '100%' }} className='map-page-row'>\r\n          {/* col-left */}\r\n          <Col style={{ height: '100%' }}>\r\n            <Row>\r\n              <Col style={{ height: '100%' }} className='left-container'>\r\n                <div className='left-container__heading'>\r\n                  <h1>\r\n                    <CountUp end={predictedResult} duration={5} delay={8} />\r\n                    sq. km.\r\n                  </h1>\r\n                </div>\r\n                <div className='left-container__top--tags'>\r\n                  <h1>Predicted Forest Cover Area of {inputArea}</h1>\r\n                  <p>by {inputYear}</p>\r\n                </div>\r\n                <div className='left-container__top--stats'>\r\n                  <h1>Forest</h1>\r\n                  <p>Lungs of Earth</p>\r\n                </div>\r\n                <></>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <div className='prediction-form'>\r\n                  <div className='prediction-input--year'>\r\n                    <label for='input-year'>Year</label>\r\n                    <input\r\n                      type='text'\r\n                      value={inputYear}\r\n                      onChange={(e) => setInputYear(e.target.value)}\r\n                      id='input-year'\r\n                      placeholder='Enter year ...'\r\n                    />\r\n                  </div>\r\n\r\n                  <div className='prediction-input--area'>\r\n                    <label for='input-area'>Area</label>\r\n                    <input\r\n                      type='text'\r\n                      value={inputArea}\r\n                      onChange={(e) => setInputArea(e.target.value)}\r\n                      id='input-area'\r\n                      placeholder='Enter area ...'\r\n                    />\r\n                  </div>\r\n\r\n                  <div className='prediction-input--submit'>\r\n                    <button type='submit' onClick={onSubmitPostRequest}>\r\n                      Go{' '}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n\r\n          {/* col-middle */}\r\n          <Col\r\n            xs\r\n            lg={6}\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              justifyContent: 'center',\r\n              position: 'relative',\r\n            }}\r\n          >\r\n            <div className='map-toggle-buttons'>\r\n              {/* <Button\r\n                variant='primary'\r\n                onClick={() => setNormalSelected(true)}\r\n                // onClick={(e) => console.log('Clicked')}\r\n              >\r\n                Normal View\r\n              </Button>\r\n              <Button\r\n                variant='secondary'\r\n                onClick={(e) => setNormalSelected(false)}\r\n              >\r\n                Satellite View\r\n              </Button> */}\r\n              {/* <Button\r\n                variant='primary'\r\n                onClick={() => setNormalSelected(true)}\r\n                // onClick={(e) => console.log('Clicked')}\r\n              >\r\n                Normal View\r\n              </Button>\r\n              <Button\r\n                variant='secondary'\r\n                onClick={(e) => setNormalSelected(false)}\r\n              >\r\n                Satellite View\r\n              </Button> */}\r\n              <select\r\n                value={view}\r\n                onChange={(e) => {\r\n                  console.log(e.target.value);\r\n                  setView(e.target.value);\r\n                }}\r\n              >\r\n                <option value='Normal View'>Normal View</option>\r\n                <option value='Satellite View'>Satellite View</option>\r\n                <option value='Vegetation Timelapse'>\r\n                  Vegetation Timelapse\r\n                </option>\r\n                <option value='Climate Timelapse'>Climate Timelapse</option>\r\n              </select>\r\n            </div>\r\n            <></>\r\n            {view === 'Normal View' && (\r\n              <>\r\n                <GeoChart data={data} />\r\n              </>\r\n            )}\r\n            {view === 'Satellite View' && (\r\n              <>\r\n                <MapBox />\r\n              </>\r\n            )}\r\n            {view === 'Vegetation Timelapse' && (\r\n              <>\r\n                <IndiaVegetation />\r\n              </>\r\n            )}\r\n            {view === 'Climate Timelapse' && (\r\n              <>\r\n                <IndiaClimate />\r\n              </>\r\n            )}\r\n          </Col>\r\n\r\n          {/* col-right */}\r\n          <Col style={{ height: '100%' }}>\r\n            <Row style={{ height: '100%' }}>\r\n              <Col style={{ height: '100%' }} className='right-container'>\r\n                <Card\r\n                  bg='light'\r\n                  // border='light'\r\n                  style={{\r\n                    width: '262px',\r\n                    border: '1px transparent',\r\n                    height: '100%',\r\n                    overflow: 'hidden',\r\n                  }}\r\n                  className='mb-2 right-container__top box-shadow-main'\r\n                >\r\n                  <Card.Body>\r\n                    {dataApi.length === 0 ? (\r\n                      <>\r\n                        <div\r\n                          className='spinner'\r\n                          style={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            height: '100%',\r\n                          }}\r\n                        >\r\n                          <Spinner animation='border' variant='primary' />\r\n                        </div>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <LineChart3\r\n                          dataApi={dataApi}\r\n                          forestCover={forestCover}\r\n                          years={years}\r\n                          forestData={forestDataArray}\r\n                        />\r\n                      </>\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n                <Card\r\n                  bg='light'\r\n                  style={{ width: '90%' }}\r\n                  className='mb-2 right-container__bottom box-shadow-main global-card-styles'\r\n                  // border='light'\r\n                >\r\n                  <Card.Body>\r\n                    <ComboChart comboChartData={comboChartData} />\r\n\r\n                    <Card.Title></Card.Title>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* 4-cards */}\r\n        <Row className='map-page-row'>\r\n          <Col className='container-card'>\r\n            <Card\r\n              bg='light'\r\n              style={{ width: '90%' }}\r\n              className='mb-2 right-container__bottom box-shadow-main global-card-styles'\r\n              // border='light'\r\n            >\r\n              <Card.Body>\r\n                <GaugeChart aqiParams={aqiParams} aqiArr={aqiArr} />\r\n\r\n                <Card.Title></Card.Title>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col className='container-card'>\r\n            <Card\r\n              bg='light'\r\n              style={{ width: '90%' }}\r\n              className='mb-2 right-container__bottom box-shadow-main global-card-styles'\r\n              // border='light'\r\n            >\r\n              <Card.Body>\r\n                <PieChart\r\n                  // forestData={forestDataArray}\r\n                  forestDataObject={forestData}\r\n                />\r\n\r\n                <Card.Title></Card.Title>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col className='container-card'>\r\n            <Card\r\n              bg='light'\r\n              style={{ width: '90%' }}\r\n              className='mb-2 right-container__bottom box-shadow-main global-card-styles'\r\n              // border='light'\r\n            >\r\n              <Card.Body>\r\n                <LineChart2 rainfall={rainfall} />\r\n\r\n                <Card.Title></Card.Title>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n\r\n          {/* <Col className='container-card'>\r\n            <Card\r\n              bg='light'\r\n              style={{ width: '90%', height: '100%' }}\r\n              className='mb-2 right-container__bottom box-shadow-main global-card-styles'\r\n              // border='light'\r\n            >\r\n              <Card.Body style={{ height: '100%' }}> */}\r\n          {/* <div className='prediction-title'>\r\n                  <h3>Enter Values To Predict</h3>\r\n                </div> */}\r\n          {/* <div className='prediction-input--year'>\r\n                 \r\n                </div>\r\n                <div className='prediction-input--area'>\r\n                 \r\n                </div>\r\n                <div className='prediction-submit'>\r\n                  \r\n                </div> */}\r\n          {/* <input\r\n                  type='text'\r\n                  value={inputYear}\r\n                  onChange={(e) => setInputYear(e.target.value)}\r\n                  id='input-year'\r\n                />\r\n                <input\r\n                  type='text'\r\n                  value={inputArea}\r\n                  onChange={(e) => setInputArea(e.target.value)}\r\n                  id='input-area'\r\n                />\r\n                <button type='submit' onClick={onSubmitPostRequest}>\r\n                  Go{' '}\r\n                </button> */}\r\n          {/* <div className='prediction-result'>{predictedResult}</div> */}\r\n          {/* </Card.Body>\r\n            </Card>\r\n          </Col> */}\r\n        </Row>\r\n        <Row className='map-page-row'>\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>First Name</th>\r\n                <th>Last Name</th>\r\n                <th>Username</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>1</td>\r\n                <td>Mark</td>\r\n                <td>Otto</td>\r\n                <td>@mdo</td>\r\n              </tr>\r\n              <tr>\r\n                <td>2</td>\r\n                <td>Jacob</td>\r\n                <td>Thornton</td>\r\n                <td>@fat</td>\r\n              </tr>\r\n              <tr>\r\n                <td>3</td>\r\n                <td colSpan={2}>Larry the Bird</td>\r\n                <td>@twitter</td>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n        </Row>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default MapPage;\r\n","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\NavBar\\NavBar.js",["127"],"import React from 'react';\r\nimport { Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\nimport './NavBar.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction NavBar() {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        bg='light'\r\n        variant='light'\r\n        className='navbar-nav greenary-nav'\r\n        sticky='top'\r\n      >\r\n        <Container>\r\n          <div className='greenary-logo'></div>\r\n          <Navbar.Brand\r\n            className='navbar-nav--brand'\r\n            onClick={() => navigate(`/`)}\r\n          >\r\n            GeoSis\r\n          </Navbar.Brand>\r\n\r\n          <div className='greenary-dropdown-menu'>\r\n            <Navbar.Toggle aria-controls='navbar-dark-example' />\r\n            <Navbar.Collapse\r\n              id='navbar-dark-example'\r\n              className='dropdown-menu-container'\r\n            >\r\n              <Nav className='dropdown'>\r\n                <NavDropdown\r\n                  id='nav-dropdown-dark-example'\r\n                  title='State / UTs'\r\n                  menuVariant='dark'\r\n                  className='dropdown-item-container'\r\n                  style={{ width: '100% !important' }}\r\n                >\r\n                  <NavDropdown.Item href='#action/3.1'>Action</NavDropdown.Item>\r\n                  <NavDropdown.Item href='#action/3.2'>\r\n                    Another action\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item href='#action/3.3'>\r\n                    Something\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Divider />\r\n                  <NavDropdown.Item href='#action/3.4'>\r\n                    Separated link\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </div>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\MapBox.js",["128","129","130"],"import React, { useEffect, useState } from 'react';\r\n\r\nvar mapboxgl = require('mapbox-gl/dist/mapbox-gl.js');\r\n\r\nfunction MapBox({ area = 'india', url = 'aavaig2069.3d85qak1' }) {\r\n  const AreaToUrlMap = {\r\n    india: 'aavaig2069.3d85qak1',\r\n    'himachal pradesh': 'aavaig2069.cf5xtz0n',\r\n    gujarat: 'aavaig2069.32bs6f7z',\r\n    'tamil nadu': 'aavaig2069.8ty6aufg',\r\n  };\r\n\r\n  const loadMap = () => {\r\n    mapboxgl.accessToken =\r\n      'pk.eyJ1IjoiYWF2YWlnMjA2OSIsImEiOiJja3gyNjhkdG0xOTljMnBueTluZnA0YzFzIn0.eZB9Au7ertDodRUyEVQHZQ';\r\n    var map = new mapboxgl.Map({\r\n      container: 'mapbox-map',\r\n      style: 'mapbox://styles/mapbox/satellite-v9',\r\n      // style: 'mapbox://styles/mapbox/light-v10',\r\n      center: [78.9629, 20.5937],\r\n      zoom: 3.5,\r\n      minZoom: 3,\r\n    });\r\n\r\n    map.on('load', () => {\r\n      const layers = map.getStyle().layers;\r\n\r\n      let firstSymbolId;\r\n      for (const layer of layers) {\r\n        if (layer === 'symbol') {\r\n          firstSymbolId = layer.id;\r\n          break;\r\n        }\r\n      }\r\n\r\n      map.addSource('drone', {\r\n        type: 'raster',\r\n        url: `mapbox://${AreaToUrlMap[area]}`,\r\n      });\r\n\r\n      map.addLayer({\r\n        id: 'drone-layer',\r\n        type: 'raster',\r\n        source: 'drone',\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadMap();\r\n  }, []);\r\n\r\n  //   return <div id='mapbox-map'></div>;\r\n  return (\r\n    <div id='mapbox-map' style={{ height: '100%' }}>\r\n      Mapbox\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapBox;\r\n","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\GeoChart.js",["131","132","133","134","135","136","137"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport { select, geoPath, geoMercator, min, max, scaleLinear } from 'd3';\r\nimport useResizeObserver from '../hooks/useResizeObserver';\r\nimport { Button, ButtonGroup } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction GeoChart({ data, property }) {\r\n  const svgRef = useRef();\r\n  const wrapperRef = useRef();\r\n  const dimensions = useResizeObserver(wrapperRef);\r\n\r\n  const [selectedState, setSelectedState] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const svg = select(svgRef.current);\r\n\r\n    const { width, height } =\r\n      dimensions || wrapperRef.current.getBoundingClientRect();\r\n\r\n    const projection = geoMercator()\r\n      .fitSize([width, height], selectedState || data)\r\n      .precision(100);\r\n\r\n    const pathGenerator = geoPath().projection(projection);\r\n\r\n    svg\r\n      .selectAll('.state')\r\n      .data(data.features)\r\n      .join('path')\r\n      .on('click', (event, feature) => {\r\n        console.log(feature.properties['NAME_1']);\r\n        // setSelectedState(selectedState === feature ? null : feature);\r\n        navigate(`/${feature.properties['NAME_1']}`);\r\n      })\r\n      .attr('class', 'state')\r\n      .attr('fill', '#add8e6')\r\n      // .attr('fill-outline-color', 'rgba(250,180,195,1)')\r\n      .attr('transform', 'scale(.98)')\r\n      .transition()\r\n      .duration(2000)\r\n      .attr('d', (feature) => pathGenerator(feature));\r\n  }, [data, dimensions, selectedState]);\r\n\r\n  return (\r\n    <div\r\n      ref={wrapperRef}\r\n      style={{ width: '100%', height: '100%', paddingTop: '5px' }}\r\n      className='d-block w-100'\r\n    >\r\n      <svg ref={svgRef}></svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GeoChart;\r\n","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\hooks\\useResizeObserver.js",[],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\TreeMap\\Treemap.js",["138","139","140","141","142","143"],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\LineChartJs\\LineChart.js",["144","145","146"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { Line as LineJS } from 'chart.js/auto';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst LineChart = ({ dataApi, forestCover, years }) => {\r\n  return (\r\n    <>\r\n      <div style={{ overflowX: 'auto' }}>\r\n        {dataApi.length !== 0 && (\r\n          <Line\r\n            data={{\r\n              labels: years,\r\n              datasets: [\r\n                {\r\n                  label: 'forestCover',\r\n                  data: forestCover,\r\n                  backgroundColor: ['rgb(255, 99, 132)'],\r\n                  borderColor: ['rgba(255, 99, 132, 1)'],\r\n                  borderWidth: 1,\r\n                },\r\n              ],\r\n            }}\r\n            height={150}\r\n            width={400}\r\n            options={{\r\n              maintainAspectRatio: false,\r\n              scales: {\r\n                y: {\r\n                  beginAtZero: false,\r\n                  ticks: {\r\n                    font: {\r\n                      size: 12,\r\n                    },\r\n                  },\r\n                },\r\n              },\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\ComboChart\\ComboChart.js",[],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\GaugeChart\\GaugeChart.js",[],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\PieChart\\PieChart.js",["147","148"],"import React, { useState } from 'react';\r\nimport Chart from 'react-google-charts';\r\n\r\nfunction PieChart({ forestDataObject }) {\r\n  const [selectedYear, setSelectedYear] = useState(2019);\r\n  const [selectedIndex, setSelectedIndex] = useState(16);\r\n\r\n  const calculate = (val) => (val / 3287469) * 100;\r\n\r\n  return (\r\n    <div style={{ overflow: 'hidden' }}>\r\n      {forestDataObject.length !== 0 && (\r\n        <>\r\n          <div className='forest-data-selector'>\r\n            <select\r\n              value={selectedIndex}\r\n              onChange={(e) => {\r\n                console.log(e.target.value);\r\n                setSelectedIndex(e.target.value);\r\n              }}\r\n            >\r\n              {forestDataObject.map((val, idx) => (\r\n                <option value={idx}>{forestDataObject[idx].year}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <Chart\r\n            // width={'100%'}\r\n            // height={'100%'}\r\n            chartType='PieChart'\r\n            loader={<div>Loading Chart</div>}\r\n            data={[\r\n              ['Forest Cover', '%Cover'],\r\n              ['VDC', calculate(forestDataObject[selectedIndex]['VDC'])],\r\n              ['MDC', calculate(forestDataObject[selectedIndex]['MDC'])],\r\n              ['MFC', calculate(forestDataObject[selectedIndex]['MFC'])],\r\n              ['OFA', calculate(forestDataObject[selectedIndex]['OFA'])],\r\n              ['SLA', calculate(forestDataObject[selectedIndex]['SLA'])],\r\n            ]}\r\n            options={{\r\n              // title: 'Forest Cover of 2019',\r\n              // Just add this option\r\n              title: 'Distribution of Types of Land Cover',\r\n              // legend: 'non',\r\n              //   is3D: true,\r\n              slices: {\r\n                0: { color: '#FEBA69' },\r\n                1: { color: '#FF718B' },\r\n                2: { color: '#999' },\r\n                3: { color: '#8675FF' },\r\n                4: { color: '#69FFBB' },\r\n              },\r\n              pieSliceTextStyle: {\r\n                color: 'black',\r\n              },\r\n              backgroundColor: 'transparent',\r\n              chartArea: {\r\n                width: '60%',\r\n                height: '60%',\r\n              },\r\n              legend: {\r\n                position: 'bottom',\r\n              },\r\n            }}\r\n            rootProps={{ 'data-testid': '2' }}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PieChart;\r\n","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\LineChartJs\\LineChart2.js",[],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\BarChart\\BarChart.js",[],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\LineChartJs\\LineChart3.js",[],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\pages\\StatesPage.js",["149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165"],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\IndiaVegetation.js",[],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\IndiaClimate.js",[],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\gifMaps\\GujaratClimate.js",[],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\gifMaps\\GujaratVegetation.js",[],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\gifMaps\\TamilNaduVegetation.js",[],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\gifMaps\\HimachalPradeshClimate.js",[],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\gifMaps\\TamilNaduClimate.js",[],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\gifMaps\\HimachalPradeshVegetation.js",[],{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":6,"column":10,"nodeType":"172","messageId":"173","endLine":6,"endColumn":16},{"ruleId":"170","severity":1,"message":"174","line":6,"column":18,"nodeType":"172","messageId":"173","endLine":6,"endColumn":27},{"ruleId":"170","severity":1,"message":"175","line":6,"column":29,"nodeType":"172","messageId":"173","endLine":6,"endColumn":32},{"ruleId":"170","severity":1,"message":"176","line":6,"column":34,"nodeType":"172","messageId":"173","endLine":6,"endColumn":37},{"ruleId":"170","severity":1,"message":"177","line":6,"column":39,"nodeType":"172","messageId":"173","endLine":6,"endColumn":45},{"ruleId":"170","severity":1,"message":"171","line":6,"column":3,"nodeType":"172","messageId":"173","endLine":6,"endColumn":9},{"ruleId":"170","severity":1,"message":"178","line":7,"column":3,"nodeType":"172","messageId":"173","endLine":7,"endColumn":14},{"ruleId":"170","severity":1,"message":"179","line":9,"column":3,"nodeType":"172","messageId":"173","endLine":9,"endColumn":11},{"ruleId":"170","severity":1,"message":"180","line":12,"column":3,"nodeType":"172","messageId":"173","endLine":12,"endColumn":11},{"ruleId":"170","severity":1,"message":"177","line":13,"column":3,"nodeType":"172","messageId":"173","endLine":13,"endColumn":9},{"ruleId":"170","severity":1,"message":"181","line":17,"column":3,"nodeType":"172","messageId":"173","endLine":17,"endColumn":15},{"ruleId":"170","severity":1,"message":"182","line":19,"column":10,"nodeType":"172","messageId":"173","endLine":19,"endColumn":19},{"ruleId":"170","severity":1,"message":"183","line":21,"column":8,"nodeType":"172","messageId":"173","endLine":21,"endColumn":17},{"ruleId":"170","severity":1,"message":"184","line":26,"column":8,"nodeType":"172","messageId":"173","endLine":26,"endColumn":16},{"ruleId":"170","severity":1,"message":"185","line":35,"column":10,"nodeType":"172","messageId":"173","endLine":35,"endColumn":24},{"ruleId":"170","severity":1,"message":"186","line":35,"column":26,"nodeType":"172","messageId":"173","endLine":35,"endColumn":43},{"ruleId":"170","severity":1,"message":"187","line":37,"column":10,"nodeType":"172","messageId":"173","endLine":37,"endColumn":19},{"ruleId":"170","severity":1,"message":"188","line":37,"column":21,"nodeType":"172","messageId":"173","endLine":37,"endColumn":33},{"ruleId":"189","severity":1,"message":"190","line":187,"column":6,"nodeType":"191","endLine":187,"endColumn":22,"suggestions":"192"},{"ruleId":"170","severity":1,"message":"181","line":3,"column":8,"nodeType":"172","messageId":"173","endLine":3,"endColumn":20},{"ruleId":"170","severity":1,"message":"193","line":1,"column":28,"nodeType":"172","messageId":"173","endLine":1,"endColumn":36},{"ruleId":"170","severity":1,"message":"194","line":31,"column":11,"nodeType":"172","messageId":"173","endLine":31,"endColumn":24},{"ruleId":"189","severity":1,"message":"195","line":51,"column":6,"nodeType":"191","endLine":51,"endColumn":8,"suggestions":"196"},{"ruleId":"170","severity":1,"message":"197","line":2,"column":40,"nodeType":"172","messageId":"173","endLine":2,"endColumn":43},{"ruleId":"170","severity":1,"message":"198","line":2,"column":45,"nodeType":"172","messageId":"173","endLine":2,"endColumn":48},{"ruleId":"170","severity":1,"message":"199","line":2,"column":50,"nodeType":"172","messageId":"173","endLine":2,"endColumn":61},{"ruleId":"170","severity":1,"message":"171","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":16},{"ruleId":"170","severity":1,"message":"178","line":4,"column":18,"nodeType":"172","messageId":"173","endLine":4,"endColumn":29},{"ruleId":"170","severity":1,"message":"200","line":12,"column":25,"nodeType":"172","messageId":"173","endLine":12,"endColumn":41},{"ruleId":"189","severity":1,"message":"201","line":43,"column":6,"nodeType":"191","endLine":43,"endColumn":39,"suggestions":"202"},{"ruleId":"170","severity":1,"message":"203","line":1,"column":27,"nodeType":"172","messageId":"173","endLine":1,"endColumn":36},{"ruleId":"170","severity":1,"message":"204","line":2,"column":8,"nodeType":"172","messageId":"173","endLine":2,"endColumn":15},{"ruleId":"170","severity":1,"message":"205","line":7,"column":10,"nodeType":"172","messageId":"173","endLine":7,"endColumn":15},{"ruleId":"170","severity":1,"message":"206","line":7,"column":17,"nodeType":"172","messageId":"173","endLine":7,"endColumn":25},{"ruleId":"170","severity":1,"message":"207","line":8,"column":10,"nodeType":"172","messageId":"173","endLine":8,"endColumn":22},{"ruleId":"170","severity":1,"message":"208","line":8,"column":24,"nodeType":"172","messageId":"173","endLine":8,"endColumn":39},{"ruleId":"170","severity":1,"message":"193","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":25},{"ruleId":"170","severity":1,"message":"203","line":1,"column":27,"nodeType":"172","messageId":"173","endLine":1,"endColumn":36},{"ruleId":"170","severity":1,"message":"209","line":3,"column":18,"nodeType":"172","messageId":"173","endLine":3,"endColumn":24},{"ruleId":"170","severity":1,"message":"207","line":5,"column":10,"nodeType":"172","messageId":"173","endLine":5,"endColumn":22},{"ruleId":"170","severity":1,"message":"208","line":5,"column":24,"nodeType":"172","messageId":"173","endLine":5,"endColumn":39},{"ruleId":"170","severity":1,"message":"171","line":6,"column":3,"nodeType":"172","messageId":"173","endLine":6,"endColumn":9},{"ruleId":"170","severity":1,"message":"178","line":7,"column":3,"nodeType":"172","messageId":"173","endLine":7,"endColumn":14},{"ruleId":"170","severity":1,"message":"179","line":9,"column":3,"nodeType":"172","messageId":"173","endLine":9,"endColumn":11},{"ruleId":"170","severity":1,"message":"177","line":12,"column":3,"nodeType":"172","messageId":"173","endLine":12,"endColumn":9},{"ruleId":"170","severity":1,"message":"181","line":16,"column":3,"nodeType":"172","messageId":"173","endLine":16,"endColumn":15},{"ruleId":"170","severity":1,"message":"182","line":18,"column":10,"nodeType":"172","messageId":"173","endLine":18,"endColumn":19},{"ruleId":"170","severity":1,"message":"183","line":20,"column":8,"nodeType":"172","messageId":"173","endLine":20,"endColumn":17},{"ruleId":"170","severity":1,"message":"184","line":25,"column":8,"nodeType":"172","messageId":"173","endLine":25,"endColumn":16},{"ruleId":"170","severity":1,"message":"210","line":28,"column":8,"nodeType":"172","messageId":"173","endLine":28,"endColumn":23},{"ruleId":"170","severity":1,"message":"211","line":29,"column":8,"nodeType":"172","messageId":"173","endLine":29,"endColumn":20},{"ruleId":"170","severity":1,"message":"185","line":44,"column":10,"nodeType":"172","messageId":"173","endLine":44,"endColumn":24},{"ruleId":"170","severity":1,"message":"186","line":44,"column":26,"nodeType":"172","messageId":"173","endLine":44,"endColumn":43},{"ruleId":"170","severity":1,"message":"187","line":46,"column":10,"nodeType":"172","messageId":"173","endLine":46,"endColumn":19},{"ruleId":"170","severity":1,"message":"188","line":46,"column":21,"nodeType":"172","messageId":"173","endLine":46,"endColumn":33},{"ruleId":"170","severity":1,"message":"212","line":62,"column":9,"nodeType":"172","messageId":"173","endLine":62,"endColumn":28},{"ruleId":"170","severity":1,"message":"213","line":68,"column":9,"nodeType":"172","messageId":"173","endLine":68,"endColumn":25},{"ruleId":"189","severity":1,"message":"190","line":206,"column":6,"nodeType":"191","endLine":206,"endColumn":22,"suggestions":"214"},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Figure' is defined but never used.","'ButtonGroup' is defined but never used.","'Carousel' is defined but never used.","'Dropdown' is defined but never used.","'ToggleButton' is defined but never used.","'FaArrowUp' is defined but never used.","'LineChart' is defined but never used.","'BarChart' is defined but never used.","'normalSelected' is assigned a value but never used.","'setNormalSelected' is assigned a value but never used.","'indiaData' is assigned a value but never used.","'setIndiaData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["217"],"'useState' is defined but never used.","'firstSymbolId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadMap'. Either include it or remove the dependency array.",["218"],"'min' is defined but never used.","'max' is defined but never used.","'scaleLinear' is defined but never used.","'setSelectedState' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["219"],"'useEffect' is defined but never used.","'TreeMap' is defined but never used.","'years' is assigned a value but never used.","'setYears' is assigned a value but never used.","'selectedYear' is assigned a value but never used.","'setSelectedYear' is assigned a value but never used.","'LineJS' is defined but never used.","'IndiaVegetation' is defined but never used.","'IndiaClimate' is defined but never used.","'ComponentVegetation' is assigned a value but never used.","'ComponentClimate' is assigned a value but never used.",["220"],"no-global-assign","no-unsafe-negation",{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"221","fix":"227"},"Update the dependencies array to be: [dataApi.length, fetchData]",{"range":"228","text":"229"},"Update the dependencies array to be: [loadMap]",{"range":"230","text":"231"},"Update the dependencies array to be: [data, dimensions, navigate, selectedState]",{"range":"232","text":"233"},{"range":"234","text":"229"},[5611,5627],"[dataApi.length, fetchData]",[1330,1332],"[loadMap]",[1491,1524],"[data, dimensions, navigate, selectedState]",[6470,6486]]