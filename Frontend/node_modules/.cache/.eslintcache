[{"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\index.js":"1","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\App.js":"2","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\pages\\MapPage.js":"3","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\NavBar\\NavBar.js":"4","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\MapBox.js":"5","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\GeoChart.js":"6","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\hooks\\useResizeObserver.js":"7","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\TreeMap\\Treemap.js":"8","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\LineChartJs\\LineChart.js":"9","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\ComboChart\\ComboChart.js":"10","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\GaugeChart\\GaugeChart.js":"11","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\PieChart\\PieChart.js":"12","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\LineChartJs\\LineChart2.js":"13","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\BarChart\\BarChart.js":"14","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\LineChartJs\\LineChart3.js":"15","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\pages\\StatesPage.js":"16","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\IndiaVegetation.js":"17","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\IndiaClimate.js":"18","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\gifMaps\\GujaratClimate.js":"19","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\gifMaps\\GujaratVegetation.js":"20","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\gifMaps\\TamilNaduVegetation.js":"21","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\gifMaps\\HimachalPradeshClimate.js":"22","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\gifMaps\\TamilNaduClimate.js":"23","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\gifMaps\\HimachalPradeshVegetation.js":"24","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\ComboChart\\ComboChart2.js":"25","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\BarChart\\Bottom5BarChart.js":"26","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\BarChart\\Top5BarChart.js":"27","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\index.js":"28","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\App.js":"29","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\pages\\MapPage.js":"30","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\pages\\StatesPage.js":"31","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\NavBar\\NavBar.js":"32","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\GeoChart.js":"33","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\IndiaVegetation.js":"34","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\MapBox.js":"35","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\IndiaClimate.js":"36","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\gifMaps\\GujaratClimate.js":"37","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\gifMaps\\HimachalPradeshVegetation.js":"38","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\gifMaps\\GujaratVegetation.js":"39","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\gifMaps\\TamilNaduClimate.js":"40","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\gifMaps\\TamilNaduVegetation.js":"41","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\gifMaps\\HimachalPradeshClimate.js":"42","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\maps\\ComboChart\\ComboChart.js":"43","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\maps\\LineChartJs\\LineChart3.js":"44","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\maps\\LineChartJs\\LineChart.js":"45","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\maps\\PieChart\\PieChart.js":"46","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\maps\\BarChart\\Top5BarChart.js":"47","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\maps\\LineChartJs\\LineChart2.js":"48","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\maps\\ComboChart\\ComboChart2.js":"49","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\maps\\BarChart\\BarChart.js":"50","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\maps\\BarChart\\Bottom5BarChart.js":"51","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\maps\\GaugeChart\\GaugeChart.js":"52","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\hooks\\useResizeObserver.js":"53","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\pages\\DataAnalysis.js":"54"},{"size":447,"mtime":1640013062987,"results":"55","hashOfConfig":"56"},{"size":694,"mtime":1640013062340,"results":"57","hashOfConfig":"56"},{"size":29579,"mtime":1640076303065,"results":"58","hashOfConfig":"56"},{"size":1874,"mtime":1640013062831,"results":"59","hashOfConfig":"56"},{"size":1509,"mtime":1640013062830,"results":"60","hashOfConfig":"56"},{"size":1765,"mtime":1640013062828,"results":"61","hashOfConfig":"56"},{"size":726,"mtime":1640013062879,"results":"62","hashOfConfig":"56"},{"size":412,"mtime":1639305994948,"results":"63","hashOfConfig":"56"},{"size":1186,"mtime":1640013062839,"results":"64","hashOfConfig":"56"},{"size":1698,"mtime":1640013062837,"results":"65","hashOfConfig":"56"},{"size":3276,"mtime":1640013062838,"results":"66","hashOfConfig":"56"},{"size":2909,"mtime":1640013062841,"results":"67","hashOfConfig":"56"},{"size":1382,"mtime":1640013062840,"results":"68","hashOfConfig":"56"},{"size":1111,"mtime":1640044600075,"results":"69","hashOfConfig":"56"},{"size":1702,"mtime":1640013062840,"results":"70","hashOfConfig":"56"},{"size":20431,"mtime":1640013063222,"results":"71","hashOfConfig":"56"},{"size":423,"mtime":1640013062829,"results":"72","hashOfConfig":"56"},{"size":331,"mtime":1640013062829,"results":"73","hashOfConfig":"56"},{"size":401,"mtime":1640013062832,"results":"74","hashOfConfig":"56"},{"size":416,"mtime":1640013062832,"results":"75","hashOfConfig":"56"},{"size":425,"mtime":1640013062835,"results":"76","hashOfConfig":"56"},{"size":435,"mtime":1640013062833,"results":"77","hashOfConfig":"56"},{"size":410,"mtime":1640013062834,"results":"78","hashOfConfig":"56"},{"size":450,"mtime":1640013062834,"results":"79","hashOfConfig":"56"},{"size":1742,"mtime":1640076359067,"results":"80","hashOfConfig":"56"},{"size":961,"mtime":1640076268268,"results":"81","hashOfConfig":"56"},{"size":952,"mtime":1640076292515,"results":"82","hashOfConfig":"56"},{"size":447,"mtime":1640013062987,"results":"83","hashOfConfig":"84"},{"size":823,"mtime":1646021302108,"results":"85","hashOfConfig":"84"},{"size":33098,"mtime":1646022776351,"results":"86","hashOfConfig":"84"},{"size":18708,"mtime":1646024019749,"results":"87","hashOfConfig":"84"},{"size":1042,"mtime":1646020703072,"results":"88","hashOfConfig":"84"},{"size":1773,"mtime":1645903106819,"results":"89","hashOfConfig":"84"},{"size":422,"mtime":1646020581226,"results":"90","hashOfConfig":"84"},{"size":1499,"mtime":1644314538471,"results":"91","hashOfConfig":"84"},{"size":365,"mtime":1646020539144,"results":"92","hashOfConfig":"84"},{"size":401,"mtime":1640013062832,"results":"93","hashOfConfig":"84"},{"size":450,"mtime":1640013062834,"results":"94","hashOfConfig":"84"},{"size":416,"mtime":1640013062832,"results":"95","hashOfConfig":"84"},{"size":410,"mtime":1640013062834,"results":"96","hashOfConfig":"84"},{"size":425,"mtime":1640013062835,"results":"97","hashOfConfig":"84"},{"size":435,"mtime":1640013062833,"results":"98","hashOfConfig":"84"},{"size":2336,"mtime":1646022808473,"results":"99","hashOfConfig":"84"},{"size":2513,"mtime":1645607952524,"results":"100","hashOfConfig":"84"},{"size":1186,"mtime":1640013062839,"results":"101","hashOfConfig":"84"},{"size":3656,"mtime":1645609487713,"results":"102","hashOfConfig":"84"},{"size":940,"mtime":1643653678727,"results":"103","hashOfConfig":"84"},{"size":1206,"mtime":1645610623473,"results":"104","hashOfConfig":"84"},{"size":2140,"mtime":1645992446304,"results":"105","hashOfConfig":"84"},{"size":1111,"mtime":1640044600075,"results":"106","hashOfConfig":"84"},{"size":949,"mtime":1643653835442,"results":"107","hashOfConfig":"84"},{"size":3352,"mtime":1645608288960,"results":"108","hashOfConfig":"84"},{"size":726,"mtime":1640013062879,"results":"109","hashOfConfig":"84"},{"size":2660,"mtime":1646023609990,"results":"110","hashOfConfig":"84"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},"1pm4n9y",{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"113"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"113"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"113"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"113"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"113"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"113"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"113"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wg7r2c",{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233"},"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\index.js",[],["234","235"],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\App.js",["236","237","238","239","240"],"import React from 'react';\r\nimport './App.css';\r\nimport MapPage from './pages/MapPage';\r\nimport NavBar from './components/NavBar/NavBar';\r\n\r\nimport { Button, Container, Row, Col, Figure } from 'react-bootstrap';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport StatesPage from './pages/StatesPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <NavBar />\r\n        <div className='wrapper-container'>\r\n          <Routes>\r\n            <Route path='/' exact element={<MapPage />} />\r\n            <Route path='/:state' element={<StatesPage />} />\r\n          </Routes>\r\n        </div>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\pages\\MapPage.js",["241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257"],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\NavBar\\NavBar.js",["258","259","260"],"import React from 'react';\r\nimport { Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\nimport './NavBar.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction NavBar() {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        bg='light'\r\n        variant='light'\r\n        className='navbar-nav greenary-nav'\r\n        sticky='top'\r\n      >\r\n        <Container>\r\n          <div className='greenary-logo' onClick={() => navigate(`/`)}>\r\n            GeoSis\r\n          </div>\r\n          {/* <div className='greenary-dropdown-menu'>\r\n            <Navbar.Toggle aria-controls='navbar-dark-example' />\r\n            <Navbar.Collapse\r\n              id='navbar-dark-example'\r\n              className='dropdown-menu-container'\r\n            >\r\n              <Nav className='dropdown'>\r\n                <NavDropdown\r\n                  id='nav-dropdown-dark-example'\r\n                  title='State / UTs'\r\n                  menuVariant='dark'\r\n                  className='dropdown-item-container'\r\n                  style={{ width: '100% !important' }}\r\n                >\r\n                  <NavDropdown.Item href='#action/3.1'>Action</NavDropdown.Item>\r\n                  <NavDropdown.Item href='#action/3.2'>\r\n                    Another action\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item href='#action/3.3'>\r\n                    Something\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Divider />\r\n                  <NavDropdown.Item href='#action/3.4'>\r\n                    Separated link\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </div> */}\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\MapBox.js",["261","262","263"],"import React, { useEffect, useState } from 'react';\r\n\r\nvar mapboxgl = require('mapbox-gl/dist/mapbox-gl.js');\r\n\r\nfunction MapBox({ area = 'india', url = 'aavaig2069.3d85qak1' }) {\r\n  const AreaToUrlMap = {\r\n    india: 'aavaig2069.3d85qak1',\r\n    'himachal pradesh': 'aavaig2069.cf5xtz0n',\r\n    gujarat: 'aavaig2069.32bs6f7z',\r\n    'tamil nadu': 'aavaig2069.8ty6aufg',\r\n  };\r\n\r\n  const loadMap = () => {\r\n    mapboxgl.accessToken =\r\n      'pk.eyJ1IjoiYWF2YWlnMjA2OSIsImEiOiJja3gyNjhkdG0xOTljMnBueTluZnA0YzFzIn0.eZB9Au7ertDodRUyEVQHZQ';\r\n    var map = new mapboxgl.Map({\r\n      container: 'mapbox-map',\r\n      style: 'mapbox://styles/mapbox/satellite-v9',\r\n      // style: 'mapbox://styles/mapbox/light-v10',\r\n      center: [78.9629, 20.5937],\r\n      zoom: 3.5,\r\n      minZoom: 3,\r\n    });\r\n\r\n    map.on('load', () => {\r\n      const layers = map.getStyle().layers;\r\n\r\n      let firstSymbolId;\r\n      for (const layer of layers) {\r\n        if (layer === 'symbol') {\r\n          firstSymbolId = layer.id;\r\n          break;\r\n        }\r\n      }\r\n\r\n      map.addSource('drone', {\r\n        type: 'raster',\r\n        url: `mapbox://${AreaToUrlMap[area]}`,\r\n      });\r\n\r\n      map.addLayer({\r\n        id: 'drone-layer',\r\n        type: 'raster',\r\n        source: 'drone',\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadMap();\r\n  }, []);\r\n\r\n  //   return <div id='mapbox-map'></div>;\r\n  return (\r\n    <div id='mapbox-map' style={{ height: '100%' }}>\r\n      Mapbox\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapBox;\r\n","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\GeoChart.js",["264","265","266","267","268","269","270"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport { select, geoPath, geoMercator, min, max, scaleLinear } from 'd3';\r\nimport useResizeObserver from '../hooks/useResizeObserver';\r\nimport { Button, ButtonGroup } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction GeoChart({ data, property }) {\r\n  const svgRef = useRef();\r\n  const wrapperRef = useRef();\r\n  const dimensions = useResizeObserver(wrapperRef);\r\n\r\n  const [selectedState, setSelectedState] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const svg = select(svgRef.current);\r\n\r\n    const { width, height } =\r\n      dimensions || wrapperRef.current.getBoundingClientRect();\r\n\r\n    const projection = geoMercator()\r\n      .fitSize([width, height], selectedState || data)\r\n      .precision(100);\r\n\r\n    const pathGenerator = geoPath().projection(projection);\r\n\r\n    svg\r\n      .selectAll('.state')\r\n      .data(data.features)\r\n      .join('path')\r\n      .on('click', (event, feature) => {\r\n        console.log(feature.properties['NAME_1']);\r\n        // setSelectedState(selectedState === feature ? null : feature);\r\n        navigate(`/${feature.properties['NAME_1']}`);\r\n      })\r\n      .attr('class', 'state')\r\n      .attr('fill', '#add8e6')\r\n      // .attr('fill-outline-color', 'rgba(250,180,195,1)')\r\n      .attr('transform', 'scale(.98)')\r\n      .transition()\r\n      .duration(2000)\r\n      .attr('d', (feature) => pathGenerator(feature));\r\n  }, [data, dimensions, selectedState]);\r\n\r\n  return (\r\n    <div\r\n      ref={wrapperRef}\r\n      style={{ width: '100%', height: '100%', paddingTop: '5px' }}\r\n      className='d-block w-100'\r\n    >\r\n      <svg ref={svgRef}></svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GeoChart;\r\n","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\hooks\\useResizeObserver.js",[],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\TreeMap\\Treemap.js",["271","272","273","274","275","276"],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\LineChartJs\\LineChart.js",["277","278","279"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { Line as LineJS } from 'chart.js/auto';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst LineChart = ({ dataApi, forestCover, years }) => {\r\n  return (\r\n    <>\r\n      <div style={{ overflowX: 'auto' }}>\r\n        {dataApi.length !== 0 && (\r\n          <Line\r\n            data={{\r\n              labels: years,\r\n              datasets: [\r\n                {\r\n                  label: 'forestCover',\r\n                  data: forestCover,\r\n                  backgroundColor: ['rgb(255, 99, 132)'],\r\n                  borderColor: ['rgba(255, 99, 132, 1)'],\r\n                  borderWidth: 1,\r\n                },\r\n              ],\r\n            }}\r\n            height={150}\r\n            width={400}\r\n            options={{\r\n              maintainAspectRatio: false,\r\n              scales: {\r\n                y: {\r\n                  beginAtZero: false,\r\n                  ticks: {\r\n                    font: {\r\n                      size: 12,\r\n                    },\r\n                  },\r\n                },\r\n              },\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\ComboChart\\ComboChart.js",[],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\GaugeChart\\GaugeChart.js",[],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\PieChart\\PieChart.js",["280","281"],"import React, { useState } from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport Chart from 'react-google-charts';\r\n\r\nfunction PieChart({ forestDataObject }) {\r\n  const [selectedYear, setSelectedYear] = useState(2019);\r\n  const [selectedIndex, setSelectedIndex] = useState(16);\r\n\r\n  const calculate = (val) => (val / 3287469) * 100;\r\n\r\n  return (\r\n    <div style={{ overflow: 'hidden' }}>\r\n      {forestDataObject.length !== 0 && (\r\n        <>\r\n          <div className='forest-data-selector'>\r\n            <select\r\n              value={selectedIndex}\r\n              onChange={(e) => {\r\n                console.log(e.target.value);\r\n                setSelectedIndex(e.target.value);\r\n              }}\r\n            >\r\n              {forestDataObject.map((val, idx) => (\r\n                <option value={idx}>{forestDataObject[idx].year}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <Chart\r\n            // width={'100%'}\r\n            // height={'100%'}\r\n            chartType='PieChart'\r\n            loader={\r\n              <>\r\n                <div\r\n                  className='spinner'\r\n                  style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    height: '100%',\r\n                  }}\r\n                >\r\n                  <Spinner animation='border' variant='primary' />\r\n                </div>\r\n              </>\r\n            }\r\n            data={[\r\n              ['Forest Cover', '%Cover'],\r\n              ['VDC', calculate(forestDataObject[selectedIndex]['VDC'])],\r\n              ['MDC', calculate(forestDataObject[selectedIndex]['MDC'])],\r\n              ['MFC', calculate(forestDataObject[selectedIndex]['MFC'])],\r\n              ['OFA', calculate(forestDataObject[selectedIndex]['OFA'])],\r\n              ['SLA', calculate(forestDataObject[selectedIndex]['SLA'])],\r\n            ]}\r\n            options={{\r\n              // title: 'Forest Cover of 2019',\r\n              // Just add this option\r\n              title: 'Distribution of Types of Land Cover',\r\n              // legend: 'non',\r\n              //   is3D: true,\r\n              slices: {\r\n                0: { color: '#FEBA69' },\r\n                1: { color: '#FF718B' },\r\n                2: { color: '#999' },\r\n                3: { color: '#8675FF' },\r\n                4: { color: '#69FFBB' },\r\n              },\r\n              pieSliceTextStyle: {\r\n                color: 'black',\r\n              },\r\n              backgroundColor: 'transparent',\r\n              chartArea: {\r\n                width: '60%',\r\n                height: '60%',\r\n              },\r\n              legend: {\r\n                position: 'bottom',\r\n              },\r\n            }}\r\n            rootProps={{ 'data-testid': '2' }}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PieChart;\r\n","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\LineChartJs\\LineChart2.js",[],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\BarChart\\BarChart.js",[],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\LineChartJs\\LineChart3.js",[],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\pages\\StatesPage.js",["282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299"],"import React, { useState, useEffect } from 'react';\r\nimport '../App.css';\r\n// import data from '../india.min.geo.json';\r\nimport GeoChart from '../components/GeoChart';\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  Carousel,\r\n  Col,\r\n  Container,\r\n  Figure,\r\n  Row,\r\n  Spinner,\r\n  Table,\r\n  ToggleButton,\r\n} from 'react-bootstrap';\r\nimport { FaArrowUp } from 'react-icons/fa';\r\nimport MapBox from '../components/MapBox';\r\nimport LineChart from '../components/maps/LineChartJs/LineChart';\r\nimport ComboChart from '../components/maps/ComboChart/ComboChart';\r\nimport GaugeChart from '../components/maps/GaugeChart/GaugeChart';\r\nimport PieChart from '../components/maps/PieChart/PieChart';\r\nimport LineChart2 from '../components/maps/LineChartJs/LineChart2';\r\nimport BarChart from '../components/maps/BarChart/BarChart';\r\nimport LineChart3 from '../components/maps/LineChartJs/LineChart3';\r\nimport { useParams } from 'react-router-dom';\r\nimport IndiaVegetation from '../components/IndiaVegetation';\r\nimport IndiaClimate from '../components/IndiaClimate';\r\nimport CountUp from 'react-countup';\r\n\r\nimport GujaratClimate from '../components/gifMaps/GujaratClimate';\r\nimport GujaratVegetation from '../components/gifMaps/GujaratVegetation';\r\nimport TamilNaduVegetation from '../components/gifMaps/TamilNaduVegetation';\r\nimport HimachalPradeshClimate from '../components/gifMaps/HimachalPradeshClimate';\r\nimport TamilNaduClimate from '../components/gifMaps/TamilNaduClimate';\r\nimport HimachalPradeshVegetation from '../components/gifMaps/HimachalPradeshVegetation';\r\n\r\nfunction StatesPage() {\r\n  const params = useParams();\r\n\r\n  const data = require(`../geojson/${params.state.toLowerCase()}.geo.json`);\r\n\r\n  const [normalSelected, setNormalSelected] = useState(true);\r\n\r\n  const [indiaData, setIndiaData] = useState([]);\r\n  const [dataApi, setDataApi] = useState([]);\r\n  const [years, setYears] = useState([]);\r\n  const [forestCover, setForestCover] = useState([]);\r\n  const [forestData, setForestData] = useState([]);\r\n  const [forestDataArray, setForestDataArray] = useState([]);\r\n  const [rainfall, setRainfall] = useState([]);\r\n  const [aqiParams, setAqiParams] = useState([]);\r\n  const [aqiArr, setAqiArr] = useState([]);\r\n  const [comboChartData, setComboChartData] = useState([]);\r\n  const [inputYear, setInputYear] = useState(2022);\r\n  const [inputArea, setInputArea] = useState('India');\r\n  const [predictedResult, setPredictedResult] = useState(665688.922946932);\r\n\r\n  const [view, setView] = useState('Normal View');\r\n\r\n  const ComponentVegetation = `${params.state\r\n    .toLowerCase()\r\n    .split(' ')\r\n    .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\r\n    .join('')}Vegetation`;\r\n\r\n  const ComponentClimate = `${params.state\r\n    .toLowerCase()\r\n    .split(' ')\r\n    .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\r\n    .join('')}Climate`;\r\n\r\n  const fetchData = async () => {\r\n    const response = await fetch(`http://127.0.0.1:5000/${params.state}`, {\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    const data = await response.json();\r\n\r\n    console.log(data.Data);\r\n\r\n    setYears(Object.keys(data.Data));\r\n\r\n    setForestCover(\r\n      years.map((item) => data.Data[item]['Total Forest Cover Area'])\r\n    );\r\n\r\n    const annualRainfall = Object.keys(data.Data).map((year) => [\r\n      year,\r\n      data.Data[year]['Annual Rainfall'],\r\n    ]);\r\n\r\n    setRainfall(annualRainfall.filter((item) => item[1] !== 0));\r\n\r\n    setDataApi([data.Data]);\r\n\r\n    const forestObj = Object.keys(data.Data).map((year) => {\r\n      return {\r\n        year,\r\n        TFC: data.Data[year]['Total Forest Cover Area'],\r\n        VDC: data.Data[year]['Very Dense Forest Area'],\r\n        MDC: data.Data[year]['Moderately Dense Forest Area'],\r\n        MFC: data.Data[year]['Mangrove Forest Area'],\r\n        OFA: data.Data[year]['Open Forest Area'],\r\n        SLA: data.Data[year]['Scrub Land Area'],\r\n      };\r\n    });\r\n\r\n    // console.log(forestObj);\r\n\r\n    const forestArr = Object.keys(data.Data).map((year) => {\r\n      return [\r\n        year,\r\n        data.Data[year]['Total Forest Cover Area'],\r\n        data.Data[year]['Very Dense Forest Area'],\r\n        data.Data[year]['Moderately Dense Forest Area'],\r\n        data.Data[year]['Mangrove Forest Area'],\r\n        data.Data[year]['Open Forest Area'],\r\n        data.Data[year]['Scrub Land Area'],\r\n      ];\r\n    });\r\n\r\n    // console.log(forestObj);\r\n    setForestData(forestObj);\r\n\r\n    setForestDataArray(forestArr);\r\n\r\n    const aqiVal = {\r\n      year: 2015,\r\n      SO2: data.Data['2015']['SO2'],\r\n      NO2: data.Data['2015']['NO2'],\r\n      RSPM: data.Data['2015']['RSPM'],\r\n      SPM: data.Data['2015']['SPM'],\r\n      PM25: data.Data['2015']['PM25'],\r\n    };\r\n\r\n    const aqiValArr = Object.keys(data.Data).map((year) => {\r\n      return {\r\n        year: year,\r\n        SO2: data.Data[year]['SO2'],\r\n        NO2: data.Data[year]['NO2'],\r\n        RSPM: data.Data[year]['RSPM'],\r\n        SPM: data.Data[year]['SPM'],\r\n        PM25: data.Data[year]['PM25'],\r\n      };\r\n    });\r\n\r\n    setAqiParams(aqiVal);\r\n\r\n    // aqiValArr.forEach((val, idx) => console.log(aqiValArr[idx].year));\r\n\r\n    console.log(aqiValArr);\r\n\r\n    setAqiArr(aqiValArr);\r\n\r\n    const comboData = Object.keys(data.Data).map((year) => [\r\n      year,\r\n      data.Data[year]['Total Forest Cover Area'],\r\n      data.Data[year]['N_Annual_Rainfall'],\r\n      data.Data[year]['N_SPM'],\r\n    ]);\r\n\r\n    // console.log(comboData);\r\n    setComboChartData(comboData);\r\n\r\n    // const aqiVal =\r\n\r\n    // console.log(aqiVal);\r\n\r\n    // console.log(aqiVal[1][1]);\r\n  };\r\n\r\n  const onSubmitPostRequest = (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('year', inputYear);\r\n    formData.append('area', inputArea);\r\n\r\n    console.log(inputYear, inputArea);\r\n\r\n    fetch('http://127.0.0.1:5000/predict/TFA', {\r\n      method: 'POST',\r\n      // mode: 'no-cors',\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        // Accept: 'application/json',\r\n        // 'Content-Type': 'application/json',\r\n      },\r\n      // body: JSON.stringify({ year: inputYear, area: inputArea }),\r\n      body: formData,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data['Result']);\r\n        setPredictedResult(data['Result']);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [dataApi.length]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container className='main-container' fluid>\r\n        <Row style={{ height: '100%' }} className='map-page-row'>\r\n          {/* col-left */}\r\n          <Col style={{ height: '100%' }}>\r\n            <Row>\r\n              <Col style={{ height: '100%' }} className='left-container'>\r\n                <div className='left-container__heading'>\r\n                  <h1>\r\n                    <CountUp end={predictedResult} duration={5} delay={8} />\r\n                    sq. km.\r\n                  </h1>\r\n                </div>\r\n                <div className='left-container__top--tags'>\r\n                  <h1>Predicted Forest Cover Area of {inputArea}</h1>\r\n                  <p>by {inputYear}</p>\r\n                </div>\r\n                <div className='left-container__top--stats'>\r\n                  <h1>Forest</h1>\r\n                  <p>Lungs of Earth</p>\r\n                </div>\r\n                <></>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <div className='prediction-form'>\r\n                  <div className='prediction-input--year'>\r\n                    <label for='input-year'>Year</label>\r\n                    <input\r\n                      type='text'\r\n                      value={inputYear}\r\n                      onChange={(e) => setInputYear(e.target.value)}\r\n                      id='input-year'\r\n                      placeholder='Enter year ...'\r\n                    />\r\n                  </div>\r\n\r\n                  <div className='prediction-input--area'>\r\n                    <label for='input-area'>Area</label>\r\n                    <input\r\n                      type='text'\r\n                      value={inputArea}\r\n                      onChange={(e) => setInputArea(e.target.value)}\r\n                      id='input-area'\r\n                      placeholder='Enter area ...'\r\n                    />\r\n                  </div>\r\n\r\n                  <div className='prediction-input--submit'>\r\n                    <button type='submit' onClick={onSubmitPostRequest}>\r\n                      Go{' '}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n\r\n          {/* col-middle */}\r\n          <Col\r\n            xs\r\n            lg={6}\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              justifyContent: 'center',\r\n              position: 'relative',\r\n            }}\r\n          >\r\n            <div className='map-toggle-buttons'>\r\n              {/* <Button\r\n              variant='primary'\r\n              onClick={() => setNormalSelected(true)}\r\n              // onClick={(e) => console.log('Clicked')}\r\n            >\r\n              Normal View\r\n            </Button>\r\n            <Button\r\n              variant='secondary'\r\n              onClick={(e) => setNormalSelected(false)}\r\n            >\r\n              Satellite View\r\n            </Button> */}\r\n              {/* <Button\r\n              variant='primary'\r\n              onClick={() => setNormalSelected(true)}\r\n              // onClick={(e) => console.log('Clicked')}\r\n            >\r\n              Normal View\r\n            </Button>\r\n            <Button\r\n              variant='secondary'\r\n              onClick={(e) => setNormalSelected(false)}\r\n            >\r\n              Satellite View\r\n            </Button> */}\r\n              <select\r\n                value={view}\r\n                onChange={(e) => {\r\n                  console.log(e.target.value);\r\n                  setView(e.target.value);\r\n                }}\r\n              >\r\n                <option value='Normal View'>Normal View</option>\r\n                <option value='Satellite View'>Satellite View</option>\r\n                <option value='Vegetation Timelapse'>\r\n                  Vegetation Timelapse\r\n                </option>\r\n                <option value='Climate Timelapse'>Climate Timelapse</option>\r\n              </select>\r\n            </div>\r\n            <></>\r\n            {view === 'Normal View' && (\r\n              <>\r\n                <GeoChart data={data} />\r\n              </>\r\n            )}\r\n            {view === 'Satellite View' && (\r\n              <>\r\n                <MapBox area={params.state.toLowerCase()} />\r\n              </>\r\n            )}\r\n            {view === 'Vegetation Timelapse' && (\r\n              <>\r\n                {params.state.toLowerCase() === 'gujarat' && (\r\n                  <GujaratVegetation />\r\n                )}\r\n                {params.state.toLowerCase() === 'himachal pradhesh' && (\r\n                  <HimachalPradeshVegetation />\r\n                )}\r\n                {params.state.toLowerCase() === 'tamil nadu' && (\r\n                  <TamilNaduVegetation />\r\n                )}\r\n              </>\r\n            )}\r\n            {view === 'Climate Timelapse' && (\r\n              <>\r\n                {params.state.toLowerCase() === 'gujarat' && <GujaratClimate />}\r\n                {params.state.toLowerCase() === 'himachal pradhesh' && (\r\n                  <HimachalPradeshClimate />\r\n                )}\r\n                {params.state.toLowerCase() === 'tamil nadu' && (\r\n                  <TamilNaduClimate />\r\n                )}\r\n              </>\r\n            )}\r\n          </Col>\r\n\r\n          {/* col-right */}\r\n          <Col style={{ height: '100%' }}>\r\n            <Row style={{ height: '100%' }}>\r\n              <Col style={{ height: '100%' }} className='right-container'>\r\n                <Card\r\n                  bg='light'\r\n                  // border='light'\r\n                  style={{\r\n                    width: '262px',\r\n                    border: '1px transparent',\r\n                    height: '100%',\r\n                    overflow: 'hidden',\r\n                  }}\r\n                  className='mb-2 right-container__top box-shadow-main'\r\n                >\r\n                  <Card.Body>\r\n                    {dataApi.length === 0 ? (\r\n                      <>\r\n                        <div\r\n                          className='spinner'\r\n                          style={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            height: '100%',\r\n                          }}\r\n                        >\r\n                          <Spinner animation='border' variant='primary' />\r\n                        </div>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <LineChart3\r\n                          dataApi={dataApi}\r\n                          forestCover={forestCover}\r\n                          years={years}\r\n                          forestData={forestDataArray}\r\n                        />\r\n                      </>\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n                <Card\r\n                  bg='light'\r\n                  style={{ width: '90%' }}\r\n                  className='mb-2 right-container__bottom box-shadow-main global-card-styles'\r\n                  // border='light'\r\n                >\r\n                  <Card.Body>\r\n                    {dataApi.length === 0 ? (\r\n                      <>\r\n                        <div\r\n                          className='spinner'\r\n                          style={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            height: '100%',\r\n                          }}\r\n                        >\r\n                          <Spinner animation='border' variant='primary' />\r\n                        </div>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <ComboChart comboChartData={comboChartData} />\r\n                      </>\r\n                    )}\r\n\r\n                    <Card.Title></Card.Title>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* 4-cards */}\r\n        <Row className='map-page-row'>\r\n          <Col className='container-card'>\r\n            <Card\r\n              bg='light'\r\n              style={{ width: '90%' }}\r\n              className='mb-2 right-container__bottom box-shadow-main global-card-styles'\r\n              // border='light'\r\n            >\r\n              <Card.Body>\r\n                {dataApi.length === 0 ? (\r\n                  <>\r\n                    <div\r\n                      className='spinner'\r\n                      style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        height: '100%',\r\n                      }}\r\n                    >\r\n                      <Spinner animation='border' variant='primary' />\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <GaugeChart aqiParams={aqiParams} aqiArr={aqiArr} />\r\n                  </>\r\n                )}\r\n\r\n                <Card.Title></Card.Title>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col className='container-card'>\r\n            <Card\r\n              bg='light'\r\n              style={{ width: '90%' }}\r\n              className='mb-2 right-container__bottom box-shadow-main global-card-styles'\r\n              // border='light'\r\n            >\r\n              <Card.Body>\r\n                {dataApi.length === 0 ? (\r\n                  <>\r\n                    <div\r\n                      className='spinner'\r\n                      style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        height: '100%',\r\n                      }}\r\n                    >\r\n                      <Spinner animation='border' variant='primary' />\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <PieChart\r\n                      // forestData={forestDataArray}\r\n                      forestDataObject={forestData}\r\n                    />\r\n                  </>\r\n                )}\r\n\r\n                <Card.Title></Card.Title>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col className='container-card'>\r\n            <Card\r\n              bg='light'\r\n              style={{ width: '90%' }}\r\n              className='mb-2 right-container__bottom box-shadow-main global-card-styles'\r\n              // border='light'\r\n            >\r\n              <Card.Body>\r\n                {dataApi.length === 0 ? (\r\n                  <>\r\n                    <div\r\n                      className='spinner'\r\n                      style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        height: '100%',\r\n                      }}\r\n                    >\r\n                      <Spinner animation='border' variant='primary' />\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <LineChart2 rainfall={rainfall} />\r\n                  </>\r\n                )}\r\n\r\n                <Card.Title></Card.Title>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n\r\n          {/* <Col className='container-card'>\r\n          <Card\r\n            bg='light'\r\n            style={{ width: '90%', height: '100%' }}\r\n            className='mb-2 right-container__bottom box-shadow-main global-card-styles'\r\n            // border='light'\r\n          >\r\n            <Card.Body style={{ height: '100%' }}> */}\r\n          {/* <div className='prediction-title'>\r\n                <h3>Enter Values To Predict</h3>\r\n              </div> */}\r\n          {/* <div className='prediction-input--year'>\r\n               \r\n              </div>\r\n              <div className='prediction-input--area'>\r\n               \r\n              </div>\r\n              <div className='prediction-submit'>\r\n                \r\n              </div> */}\r\n          {/* <input\r\n                type='text'\r\n                value={inputYear}\r\n                onChange={(e) => setInputYear(e.target.value)}\r\n                id='input-year'\r\n              />\r\n              <input\r\n                type='text'\r\n                value={inputArea}\r\n                onChange={(e) => setInputArea(e.target.value)}\r\n                id='input-area'\r\n              />\r\n              <button type='submit' onClick={onSubmitPostRequest}>\r\n                Go{' '}\r\n              </button> */}\r\n          {/* <div className='prediction-result'>{predictedResult}</div> */}\r\n          {/* </Card.Body>\r\n          </Card>\r\n        </Col> */}\r\n        </Row>\r\n        {/* <Row className='map-page-row'>\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>First Name</th>\r\n                <th>Last Name</th>\r\n                <th>Username</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>1</td>\r\n                <td>Mark</td>\r\n                <td>Otto</td>\r\n                <td>@mdo</td>\r\n              </tr>\r\n              <tr>\r\n                <td>2</td>\r\n                <td>Jacob</td>\r\n                <td>Thornton</td>\r\n                <td>@fat</td>\r\n              </tr>\r\n              <tr>\r\n                <td>3</td>\r\n                <td colSpan={2}>Larry the Bird</td>\r\n                <td>@twitter</td>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n        </Row> */}\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default StatesPage;\r\n","C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\IndiaVegetation.js",[],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\IndiaClimate.js",[],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\gifMaps\\GujaratClimate.js",[],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\gifMaps\\GujaratVegetation.js",[],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\gifMaps\\TamilNaduVegetation.js",[],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\gifMaps\\HimachalPradeshClimate.js",[],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\gifMaps\\TamilNaduClimate.js",[],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\gifMaps\\HimachalPradeshVegetation.js",[],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\ComboChart\\ComboChart2.js",[],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\BarChart\\Bottom5BarChart.js",[],"C:\\Users\\AAVAIG\\Desktop\\EY-Techathon-2\\Frontend\\src\\components\\maps\\BarChart\\Top5BarChart.js",[],"C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\index.js",[],"C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\App.js",[],"C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\pages\\MapPage.js",["300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316"],"import React, { useState, useEffect } from 'react';\r\nimport '../App.css';\r\nimport data from '../ind.geo.json';\r\nimport GeoChart from '../components/GeoChart';\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  Carousel,\r\n  Col,\r\n  Container,\r\n  Dropdown,\r\n  Figure,\r\n  Form,\r\n  ListGroup,\r\n  Row,\r\n  Spinner,\r\n  Table,\r\n  ToggleButton,\r\n} from 'react-bootstrap';\r\nimport logo from '../images/twitter-logo.png';\r\nimport { FaArrowUp, FaThumbsUp, FaThumbsDown } from 'react-icons/fa';\r\nimport MapBox from '../components/MapBox';\r\nimport LineChart from '../components/maps/LineChartJs/LineChart';\r\nimport ComboChart from '../components/maps/ComboChart/ComboChart';\r\nimport GaugeChart from '../components/maps/GaugeChart/GaugeChart';\r\nimport PieChart from '../components/maps/PieChart/PieChart';\r\nimport LineChart2 from '../components/maps/LineChartJs/LineChart2';\r\nimport BarChart from '../components/maps/BarChart/BarChart';\r\nimport LineChart3 from '../components/maps/LineChartJs/LineChart3';\r\nimport IndiaVegetation from '../components/IndiaVegetation';\r\nimport IndiaClimate from '../components/IndiaClimate';\r\nimport CountUp from 'react-countup';\r\nimport ComboChart2 from '../components/maps/ComboChart/ComboChart2';\r\nimport Top5BarChart from '../components/maps/BarChart/Top5BarChart';\r\nimport Bottom5BarChart from '../components/maps/BarChart/Bottom5BarChart';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// const url = 'http://127.0.0.1:5000/';\r\n// const url = 'http://35.198.236.186:5000/';\r\nconst url = 'https://aavaig-malhotra.fun/';\r\n\r\nfunction MapPage() {\r\n  let navigate = useNavigate();\r\n\r\n  const [normalSelected, setNormalSelected] = useState(true);\r\n\r\n  const [indiaData, setIndiaData] = useState([]);\r\n  const [dataApi, setDataApi] = useState([]);\r\n  const [years, setYears] = useState([]);\r\n  const [forestCover, setForestCover] = useState([]);\r\n  const [forestData, setForestData] = useState([]);\r\n  const [forestDataArray, setForestDataArray] = useState([]);\r\n  const [rainfall, setRainfall] = useState([]);\r\n  const [aqiParams, setAqiParams] = useState([]);\r\n  const [aqiArr, setAqiArr] = useState([]);\r\n  const [comboChartData, setComboChartData] = useState([]);\r\n  const [comboChartData2, setComboChartData2] = useState([]);\r\n  const [descVal, setDescVal] = useState([]);\r\n  const [top5, setTop5] = useState([]);\r\n  const [bottom5, setBottom5] = useState([]);\r\n  const [topBottomParam, setTopBottomParam] = useState('Annual Rainfall');\r\n  const [topBottomYear, setTopBottomYear] = useState(2015);\r\n  const [stateApi, setStateApi] = useState({});\r\n  const [tweetNRating, setTweetNRating] = useState(null);\r\n  const [comboData2Year, setComboData2Year] = useState(2015);\r\n\r\n  const [inputYear, setInputYear] = useState(2022);\r\n  const [inputArea, setInputArea] = useState('India');\r\n  const [predictedResult, setPredictedResult] = useState(665688.922946932);\r\n\r\n  const [hashtag, setHashtag] = useState('forest cover');\r\n\r\n  const [view, setView] = useState('Normal View');\r\n\r\n  const fetchData = async () => {\r\n    const response = await fetch(url, {\r\n      // mode: 'no-cors',\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    // console.log(data.Data);\r\n\r\n    setYears(Object.keys(data.Data));\r\n\r\n    setForestCover(\r\n      years.map((item) => data.Data[item]['Total Forest Cover Area'])\r\n    );\r\n\r\n    const annualRainfall = Object.keys(data.Data).map((year) => [\r\n      year,\r\n      data.Data[year]['Annual Rainfall'],\r\n    ]);\r\n\r\n    setRainfall(annualRainfall.filter((item) => item[1] !== 0));\r\n\r\n    setDataApi([data.Data]);\r\n\r\n    const forestObj = Object.keys(data.Data).map((year) => {\r\n      return {\r\n        year,\r\n        TFC: data.Data[year]['Total Forest Cover Area'],\r\n        VDC: data.Data[year]['Very Dense Forest Area'],\r\n        MDC: data.Data[year]['Moderately Dense Forest Area'],\r\n        MFC: data.Data[year]['Mangrove Forest Area'],\r\n        OFA: data.Data[year]['Open Forest Area'],\r\n        SLA: data.Data[year]['Scrub Land Area'],\r\n      };\r\n    });\r\n\r\n    // console.log(forestObj);\r\n\r\n    const forestArr = Object.keys(data.Data).map((year) => {\r\n      return [\r\n        year,\r\n        data.Data[year]['Total Forest Cover Area'],\r\n        data.Data[year]['Very Dense Forest Area'],\r\n        data.Data[year]['Moderately Dense Forest Area'],\r\n        data.Data[year]['Mangrove Forest Area'],\r\n        data.Data[year]['Open Forest Area'],\r\n        data.Data[year]['Scrub Land Area'],\r\n      ];\r\n    });\r\n\r\n    // console.log(forestObj);\r\n    setForestData(forestObj);\r\n\r\n    setForestDataArray(forestArr);\r\n\r\n    const aqiVal = {\r\n      year: 2015,\r\n      SO2: data.Data['2015']['SO2'],\r\n      NO2: data.Data['2015']['NO2'],\r\n      RSPM: data.Data['2015']['RSPM'],\r\n      SPM: data.Data['2015']['SPM'],\r\n      PM25: data.Data['2015']['PM25'],\r\n    };\r\n\r\n    const aqiValArr = Object.keys(data.Data).map((year) => {\r\n      return {\r\n        year: year,\r\n        SO2: data.Data[year]['SO2'],\r\n        NO2: data.Data[year]['NO2'],\r\n        RSPM: data.Data[year]['RSPM'],\r\n        SPM: data.Data[year]['SPM'],\r\n        PM25: data.Data[year]['PM25'],\r\n      };\r\n    });\r\n\r\n    setAqiParams(aqiVal);\r\n\r\n    // aqiValArr.forEach((val, idx) => console.log(aqiValArr[idx].year));\r\n\r\n    // console.log(aqiValArr);\r\n\r\n    setAqiArr(aqiValArr);\r\n\r\n    const comboData = Object.keys(data.Data).map((year) => [\r\n      year,\r\n      data.Data[year]['Total Forest Cover Area'],\r\n      data.Data[year]['N_Annual_Rainfall'] * 12,\r\n      // data.Data[year]['N_SPM'],\r\n    ]);\r\n\r\n    // console.log(comboData);\r\n    setComboChartData(comboData);\r\n  };\r\n\r\n  const stateData = async (year) => {\r\n    const formData = new FormData();\r\n    formData.append('year', year);\r\n\r\n    const response = await fetch(`${url}state`, {\r\n      method: 'POST',\r\n      // mode: 'no-cors',\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n      },\r\n      body: formData,\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    // console.log(data);\r\n    setStateApi(data);\r\n\r\n    updateStackedData(data);\r\n  };\r\n\r\n  const stateComboData = async (year) => {\r\n    const formData = new FormData();\r\n    formData.append('year', year);\r\n\r\n    const response = await fetch(`${url}state`, {\r\n      method: 'POST',\r\n      // mode: 'no-cors',\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n      },\r\n      body: formData,\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    const comboData = Object.keys(data)\r\n      .filter((state) => state !== 'India')\r\n      .map((state) => [\r\n        state,\r\n        data[state]['Total Forest Cover Area'],\r\n        data[state]['Annual Rainfall'],\r\n        data[state]['SO2'],\r\n        data[state]['Open Forest Area'],\r\n      ]);\r\n\r\n    const sortedComboData = comboData.sort((a, b) => {\r\n      // console.log(a, b);\r\n\r\n      return b[1] + b[2] + b[3] + b[4] - (a[1] + a[2] + a[3] + a[4]);\r\n    });\r\n\r\n    setComboChartData2(sortedComboData);\r\n  };\r\n\r\n  const updateStackedData = (data, param = 'Annual Rainfall') => {\r\n    // console.log('clicked here');\r\n    // console.log(data, param);\r\n\r\n    const sortData = Object.keys(data)\r\n      .filter((state) => state !== 'India')\r\n      .map((state) => {\r\n        return [state, data[state][param]];\r\n      })\r\n      .filter((data) => data[1] !== 0);\r\n    // console.log(sortData);\r\n\r\n    const sortedData = [...sortData];\r\n\r\n    sortedData.sort((a, b) => b[1] - a[1]);\r\n\r\n    // console.log(sortedData);\r\n    // console.log(sortedData[sortedData.length - 5]);\r\n\r\n    setTop5(sortedData.slice(0, 5));\r\n    setBottom5(sortedData.slice(sortedData.length - 5));\r\n\r\n    // console.log(sortedData.slice(0, 5));\r\n    // console.log(sortedData.slice(sortedData.length - 5));\r\n  };\r\n\r\n  const getTweetRating = async () => {\r\n    const formData = new FormData();\r\n\r\n    formData.append('tag', hashtag);\r\n\r\n    const response = await fetch(`${url}rating`, {\r\n      method: 'POST',\r\n      // mode: 'no-cors',\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n      },\r\n      body: formData,\r\n    });\r\n\r\n    const data = await response.json();\r\n    console.log(data);\r\n\r\n    let i = 1;\r\n    const filteredData = {};\r\n\r\n    for (const prop in data) {\r\n      if (i === 6) {\r\n        break;\r\n      }\r\n      console.log(prop);\r\n      filteredData[prop] = data[prop];\r\n      i++;\r\n    }\r\n\r\n    // const filteredData = data.filter((data, idx) => idx < 6);\r\n    console.log(filteredData);\r\n\r\n    setTweetNRating(filteredData);\r\n  };\r\n\r\n  const onSubmitPostRequest = (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('year', inputYear);\r\n    formData.append('area', inputArea);\r\n\r\n    // console.log(inputYear, inputArea);\r\n\r\n    fetch(`${url}predict/TFA`, {\r\n      method: 'POST',\r\n      // mode: 'no-cors',\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        // Accept: 'application/json',\r\n        // 'Content-Type': 'application/json',\r\n      },\r\n      // body: JSON.stringify({ year: inputYear, area: inputArea }),\r\n      body: formData,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        // console.log(data['Result']);\r\n        setPredictedResult(data['Result']);\r\n      });\r\n  };\r\n\r\n  const onhandleAnalysisClick = (e) => {\r\n    e.preventDefault();\r\n    navigate('/detailed-analysis');\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    getTweetRating();\r\n  }, [dataApi.length]);\r\n\r\n  useEffect(() => {\r\n    // console.log(topBottomYear);\r\n    stateData(topBottomYear);\r\n  }, [topBottomYear]);\r\n\r\n  useEffect(() => {\r\n    stateComboData(comboData2Year);\r\n  }, [comboData2Year]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container className='main-container' fluid>\r\n        <Row\r\n          style={{ height: '100%' }}\r\n          className='map-page-row map-page-row-top'\r\n        >\r\n          {/* col-left */}\r\n          <Col style={{ height: '100%' }} className='left-col'>\r\n            <Row>\r\n              <Col style={{ height: '100%' }} className='left-container'>\r\n                <div className='left-container__heading'>\r\n                  <h1>\r\n                    <CountUp end={predictedResult} duration={5} delay={8} />\r\n                    sq. km.\r\n                  </h1>\r\n                </div>\r\n                <div className='left-container__top--tags'>\r\n                  <h1>Predicted Forest Cover Area of {inputArea}</h1>\r\n                  <p>by {inputYear}</p>\r\n                </div>\r\n                <div className='left-container__top--stats'>\r\n                  <h1>Forest</h1>\r\n                  <p>Lungs of Earth</p>\r\n                </div>\r\n                <></>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <div className='prediction-form'>\r\n                  <div className='prediction-input--year'>\r\n                    <label for='input-year'>Year</label>\r\n                    <input\r\n                      type='text'\r\n                      value={inputYear}\r\n                      onChange={(e) => setInputYear(e.target.value)}\r\n                      id='input-year'\r\n                      placeholder='Enter year ...'\r\n                    />\r\n                  </div>\r\n\r\n                  <div className='prediction-input--area'>\r\n                    <label for='input-area'>Area</label>\r\n                    <input\r\n                      type='text'\r\n                      value={inputArea}\r\n                      onChange={(e) => setInputArea(e.target.value)}\r\n                      id='input-area'\r\n                      placeholder='Enter area ...'\r\n                    />\r\n                  </div>\r\n\r\n                  <div className='prediction-input--submit'>\r\n                    <button type='submit' onClick={onSubmitPostRequest}>\r\n                      Go{' '}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row style={{ marginTop: '5rem' }}>\r\n              <Col>\r\n                <div className='prediction-form'>\r\n                  <div className='prediction-input--submit'>\r\n                    <button type='submit' onClick={onhandleAnalysisClick}>\r\n                      Detailed Analysis Click Here\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n\r\n          {/* col-middle */}\r\n          <Col\r\n            xs\r\n            lg={6}\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              justifyContent: 'center',\r\n              position: 'relative',\r\n              padding: '2.5rem 0 0 0',\r\n            }}\r\n            className='mid-col'\r\n          >\r\n            <div className='map-toggle-buttons'>\r\n              <select\r\n                value={view}\r\n                onChange={(e) => {\r\n                  // console.log(e.target.value);\r\n                  setView(e.target.value);\r\n                }}\r\n              >\r\n                <option value='Normal View'>Normal View</option>\r\n                <option value='Satellite View'>Satellite View</option>\r\n                <option value='Vegetation Timelapse'>\r\n                  Vegetation Timelapse\r\n                </option>\r\n                <option value='Climate Timelapse'>Climate Timelapse</option>\r\n              </select>\r\n            </div>\r\n            <div style={{ height: '100%', overflow: 'hidden' }}>\r\n              {view === 'Normal View' && (\r\n                <>\r\n                  <GeoChart data={data} />\r\n                </>\r\n              )}\r\n              {view === 'Satellite View' && (\r\n                <>\r\n                  <MapBox />\r\n                </>\r\n              )}\r\n              {view === 'Vegetation Timelapse' && (\r\n                <>\r\n                  <IndiaVegetation />\r\n                </>\r\n              )}\r\n              {view === 'Climate Timelapse' && (\r\n                <>\r\n                  <IndiaClimate />\r\n                </>\r\n              )}\r\n            </div>\r\n          </Col>\r\n\r\n          {/* col-right */}\r\n          <Col style={{ height: '100%' }} className='right-col'>\r\n            <Row style={{ height: '100%' }}>\r\n              <Col\r\n                style={{ height: '100%', padding: ' 2rem' }}\r\n                className='right-container'\r\n              >\r\n                <Card\r\n                  bg='light'\r\n                  // border='light'\r\n                  style={{\r\n                    width: '100%',\r\n                    border: '1px transparent',\r\n                    height: '100%',\r\n                    overflow: 'hidden',\r\n                  }}\r\n                  className='mb-2 right-container__top box-shadow-main'\r\n                >\r\n                  <Card.Body>\r\n                    {dataApi.length === 0 ? (\r\n                      <>\r\n                        <div\r\n                          className='spinner'\r\n                          style={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            height: '100%',\r\n                          }}\r\n                        >\r\n                          <Spinner animation='border' variant='primary' />\r\n                        </div>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <LineChart3\r\n                          dataApi={dataApi}\r\n                          forestCover={forestCover}\r\n                          years={years}\r\n                          forestData={forestDataArray}\r\n                        />\r\n                      </>\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n                <Card\r\n                  bg='light'\r\n                  style={{ width: '100%' }}\r\n                  className='mb-2 right-container__bottom box-shadow-main global-card-styles'\r\n                  // border='light'\r\n                >\r\n                  <Card.Body>\r\n                    {dataApi.length === 0 ? (\r\n                      <>\r\n                        <div\r\n                          className='spinner'\r\n                          style={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            height: '100%',\r\n                          }}\r\n                        >\r\n                          <Spinner animation='border' variant='primary' />\r\n                        </div>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <ComboChart comboChartData={comboChartData} />\r\n                      </>\r\n                    )}\r\n\r\n                    <Card.Title></Card.Title>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* 3-cards */}\r\n        <Row className='map-page-row map-page-row-mid-1'>\r\n          <Col className='container-card aqi-meter' style={{ padding: '2rem' }}>\r\n            <Card\r\n              bg='light'\r\n              style={{ width: '100%' }}\r\n              className='mb-2 right-container__bottom box-shadow-main global-card-styles aqi-meter-card'\r\n              // border='light'\r\n            >\r\n              <Card.Body>\r\n                {dataApi.length === 0 ? (\r\n                  <>\r\n                    <div\r\n                      className='spinner'\r\n                      style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        height: '100%',\r\n                      }}\r\n                    >\r\n                      <Spinner animation='border' variant='primary' />\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <GaugeChart aqiParams={aqiParams} aqiArr={aqiArr} />\r\n                  </>\r\n                )}\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col\r\n            className='container-card land-cover-graph'\r\n            style={{ padding: '2rem' }}\r\n          >\r\n            <Card\r\n              bg='light'\r\n              style={{ width: '100%' }}\r\n              className='mb-2 right-container__bottom box-shadow-main global-card-styles land-cover-graph-card'\r\n              // border='light'\r\n            >\r\n              <Card.Body>\r\n                {dataApi.length === 0 ? (\r\n                  <>\r\n                    <div\r\n                      className='spinner'\r\n                      style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        height: '100%',\r\n                      }}\r\n                    >\r\n                      <Spinner animation='border' variant='primary' />\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <PieChart\r\n                      // forestData={forestDataArray}\r\n                      forestDataObject={forestData}\r\n                    />\r\n                  </>\r\n                )}\r\n\r\n                <Card.Title></Card.Title>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col\r\n            className='container-card rainfall-graph'\r\n            style={{ padding: '2rem' }}\r\n          >\r\n            <Card\r\n              bg='light'\r\n              style={{ width: '100%', height: '100%' }}\r\n              className='mb-2 right-container__bottom box-shadow-main global-card-styles rainfall-graph-card'\r\n              // border='light'\r\n            >\r\n              <Card.Body>\r\n                {dataApi.length === 0 ? (\r\n                  <>\r\n                    <div\r\n                      className='spinner'\r\n                      style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        height: '100%',\r\n                      }}\r\n                    >\r\n                      <Spinner animation='border' variant='primary' />\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <div style={{ height: '100% !important' }}>\r\n                    <LineChart2 rainfall={rainfall} />\r\n                  </div>\r\n                )}\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className='map-page-row'>\r\n          <Col className='container-card' style={{ padding: '2rem' }}>\r\n            <Card\r\n              bg='light'\r\n              style={{ width: '100%' }}\r\n              className='mb-2 right-container__bottom box-shadow-main global-card-styles combo-chart-card'\r\n              // border='light'\r\n            >\r\n              <Card.Body style={{ height: '45rem' }}>\r\n                <div className='select-dropdowns combo-select-year'>\r\n                  <select\r\n                    value={comboData2Year}\r\n                    onChange={(e) => {\r\n                      setComboData2Year(e.target.value);\r\n                    }}\r\n                  >\r\n                    <option value='1987'>1987</option>\r\n                    <option value='1989'>1989</option>\r\n                    <option value='1991'>1991</option>\r\n                    <option value='1993'>1993</option>\r\n                    <option value='1995'>1995</option>\r\n                    <option value='1997'>1997</option>\r\n                    <option value='1999'>1999</option>\r\n                    <option value='2001'>2001</option>\r\n                    <option value='2003'>2003</option>\r\n                    <option value='2005'>2005</option>\r\n                    <option value='2007'>2007</option>\r\n                    <option value='2009'>2009</option>\r\n                    <option value='2011'>2011</option>\r\n                    <option value='2013'>2013</option>\r\n                    <option value='2015'>2015</option>\r\n                    <option value='2017'>2017</option>\r\n                    <option value='2019'>2019</option>\r\n                  </select>\r\n                </div>\r\n\r\n                {dataApi.length === 0 ? (\r\n                  <>\r\n                    <div\r\n                      className='spinner'\r\n                      style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        height: '100%',\r\n                      }}\r\n                    >\r\n                      <Spinner animation='border' variant='primary' />\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <ComboChart2 comboChartData={comboChartData2} />\r\n                  </>\r\n                )}\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row\r\n          className='map-page-row map-page-bottom-row'\r\n          style={{ padding: '2rem 0' }}\r\n        >\r\n          <Col\r\n            xs\r\n            lg={6}\r\n            className='map-page-bottom-container-1'\r\n            // style={{ marginRight: '5px' }}\r\n          >\r\n            <div\r\n              className='select-dropdowns'\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                width: '100%',\r\n                padding: '0 2rem',\r\n                marginBottom: '15px',\r\n                margin: '0 auto',\r\n              }}\r\n            >\r\n              {/* parameters */}\r\n              <select\r\n                value={topBottomParam}\r\n                onChange={(e) => {\r\n                  // console.log(e.target.value);\r\n                  const param = e.target.value;\r\n                  setTopBottomParam(e.target.value);\r\n                  updateStackedData(stateApi, param);\r\n                }}\r\n              >\r\n                <option value='Annual Rainfall'>Annual Rainfall</option>\r\n                <option value='Geographical Area'>Geographical Area</option>\r\n                <option value='Mangrove Forest Area'>\r\n                  Mangrove Forest Area\r\n                </option>\r\n                <option value='Moderately Dense Forest Area'>\r\n                  Moderately Dense Forest Area\r\n                </option>\r\n                <option value='Open Forest Area'>Open Forest Area</option>\r\n                <option value='Scrub Land Area'>Scrub Land Area</option>\r\n                <option value='Total Forest Cover Area'>\r\n                  Total Forest Cover Area\r\n                </option>\r\n                <option value='Very Dense Forest Area'>\r\n                  Very Dense Forest Area\r\n                </option>\r\n              </select>\r\n\r\n              {/* years */}\r\n              <select\r\n                value={topBottomYear}\r\n                onChange={(e) => setTopBottomYear(e.target.value)}\r\n              >\r\n                <option value='1987'>1987</option>\r\n                <option value='1989'>1989</option>\r\n                <option value='1991'>1991</option>\r\n                <option value='1993'>1993</option>\r\n                <option value='1995'>1995</option>\r\n                <option value='1997'>1997</option>\r\n                <option value='1999'>1999</option>\r\n                <option value='2001'>2001</option>\r\n                <option value='2003'>2003</option>\r\n                <option value='2005'>2005</option>\r\n                <option value='2007'>2007</option>\r\n                <option value='2009'>2009</option>\r\n                <option value='2011'>2011</option>\r\n                <option value='2013'>2013</option>\r\n                <option value='2015'>2015</option>\r\n                <option value='2017'>2017</option>\r\n                <option value='2019'>2019</option>\r\n              </select>\r\n            </div>\r\n            <div\r\n              className='top-bottom-cards'\r\n              style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                justifyContent: 'space-between',\r\n                // alignItems: 'center',\r\n                width: '100%',\r\n                flex: '1',\r\n              }}\r\n            >\r\n              <Row\r\n                style={{\r\n                  marginBottom: '1rem',\r\n                  // width: '100%',\r\n                  display: 'flex',\r\n                  justifyContent: 'end',\r\n                  padding: '2rem',\r\n                }}\r\n                className='map-row-bottom-left-container'\r\n              >\r\n                {' '}\r\n                <Card\r\n                  bg='light'\r\n                  style={{ width: '100%' }}\r\n                  className='mb-2 right-container__bottom box-shadow-main global-card-styles map-row-bottom-card'\r\n                  // border='light'\r\n                >\r\n                  <Card.Body>\r\n                    <Top5BarChart data={top5} title={topBottomParam} />\r\n                  </Card.Body>\r\n                </Card>\r\n              </Row>\r\n\r\n              <Row\r\n                className='map-row-bottom-left-container'\r\n                style={{\r\n                  display: 'flex',\r\n                  justifyContent: 'end',\r\n                  padding: '2rem',\r\n                }}\r\n              >\r\n                {' '}\r\n                <Card\r\n                  bg='light'\r\n                  style={{\r\n                    width: '100%',\r\n                  }}\r\n                  className='right-container__bottom box-shadow-main global-card-styles map-row-bottom-card'\r\n                  // border='light'\r\n                >\r\n                  <Card.Body>\r\n                    <Bottom5BarChart data={bottom5} title={topBottomParam} />\r\n                  </Card.Body>\r\n                </Card>\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n          <Col\r\n            xs\r\n            lg={6}\r\n            className='map-page-bottom-container-2'\r\n            style={{ padding: '0 2rem 2rem 2rem' }}\r\n          >\r\n            {' '}\r\n            <Card\r\n              bg='light'\r\n              style={{ width: '100%' }}\r\n              className='right-container__bottom box-shadow-main global-card-styles map-row-bottom-card'\r\n              // border='light'\r\n            >\r\n              <Card.Title\r\n                style={{\r\n                  marginTop: '1rem',\r\n                  textAlign: 'center',\r\n                  fontSize: '2rem',\r\n                  fontWeight: '700',\r\n                }}\r\n              >\r\n                <img\r\n                  src={logo}\r\n                  alt='twitter-logo'\r\n                  style={{ height: '30px', width: '30px' }}\r\n                />\r\n                Tweet Sentiment Analysis\r\n              </Card.Title>\r\n              <Card.Body>\r\n                <div\r\n                  className='twitter-form'\r\n                  style={{\r\n                    marginBottom: '1rem',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'space-between',\r\n                  }}\r\n                >\r\n                  <Form.Control\r\n                    size='lg'\r\n                    type='text'\r\n                    placeholder='#Hashtag'\r\n                    style={{\r\n                      width: '80%',\r\n                      marginRight: '2rem',\r\n                      fontSize: '16px',\r\n                    }}\r\n                    value={hashtag}\r\n                    onChange={(e) => setHashtag(e.target.value)}\r\n                  />\r\n                  <Button\r\n                    variant='primary'\r\n                    type='submit'\r\n                    style={{\r\n                      height: '35px',\r\n                      fontSize: '16px',\r\n                      textTransform: 'uppercase',\r\n                      width: '25%',\r\n                      marginBottom: 0,\r\n                    }}\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      getTweetRating();\r\n                    }}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n\r\n                <ListGroup as='ol' style={{ fontSize: '16px' }}>\r\n                  {tweetNRating !== null &&\r\n                    Object.keys(tweetNRating).map((tweet) => {\r\n                      if (tweetNRating[tweet] === 'Positive') {\r\n                        return (\r\n                          <>\r\n                            <ListGroup.Item\r\n                              as='li'\r\n                              style={{\r\n                                display: 'flex',\r\n                                justifyContent: 'space-between',\r\n                                alignItems: 'center',\r\n                              }}\r\n                            >\r\n                              <div className='tweet'>\r\n                                <p> {tweet}</p>\r\n                              </div>\r\n\r\n                              <div className='tweet-icon'>\r\n                                <FaThumbsUp\r\n                                  style={{\r\n                                    height: '15px',\r\n                                    width: '15px',\r\n                                    color: 'green',\r\n                                  }}\r\n                                />\r\n                              </div>\r\n                            </ListGroup.Item>\r\n                          </>\r\n                        );\r\n                      }\r\n\r\n                      return (\r\n                        <>\r\n                          <ListGroup.Item\r\n                            as='li'\r\n                            style={{\r\n                              display: 'flex',\r\n                              justifyContent: 'space-between',\r\n                              alignItems: 'center',\r\n                            }}\r\n                          >\r\n                            <div className='tweet'>\r\n                              <p> {tweet}</p>\r\n                            </div>\r\n\r\n                            <div className='tweet-icon'>\r\n                              <FaThumbsDown\r\n                                style={{\r\n                                  height: '15px',\r\n                                  width: '15px',\r\n                                  color: 'red',\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </ListGroup.Item>\r\n                        </>\r\n                      );\r\n                    })}\r\n                </ListGroup>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default MapPage;\r\n","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\pages\\StatesPage.js",["317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334"],"C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\NavBar\\NavBar.js",["335","336","337"],"import React from 'react';\r\nimport logo from '../../images/geosis-removebg-preview.png';\r\nimport { Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\nimport './NavBar.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction NavBar() {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        bg='light'\r\n        variant='light'\r\n        className='navbar-nav greenary-nav'\r\n        sticky='top'\r\n      >\r\n        <Container>\r\n          <div className='greenary-logo' onClick={() => navigate(`/`)}>\r\n            <div\r\n              className='logo-container'\r\n              style={{ height: '40px', marginRight: '10px' }}\r\n            >\r\n              <img\r\n                src={logo}\r\n                alt='geosis logo'\r\n                style={{ height: '100%', width: '100%' }}\r\n              />\r\n            </div>\r\n            GeoSis\r\n          </div>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\GeoChart.js",["338"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport { select, geoPath, geoMercator } from 'd3';\r\nimport useResizeObserver from '../hooks/useResizeObserver';\r\n// import { Button, ButtonGroup } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction GeoChart({ data, property }) {\r\n  const svgRef = useRef();\r\n  const wrapperRef = useRef();\r\n  const dimensions = useResizeObserver(wrapperRef);\r\n\r\n  const [selectedState, setSelectedState] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const svg = select(svgRef.current);\r\n\r\n    const { width, height } =\r\n      dimensions || wrapperRef.current.getBoundingClientRect();\r\n\r\n    const projection = geoMercator()\r\n      .fitSize([width, height], selectedState || data)\r\n      .precision(100);\r\n\r\n    const pathGenerator = geoPath().projection(projection);\r\n\r\n    svg\r\n      .selectAll('.state')\r\n      .data(data.features || data.coordinates)\r\n      .join('path')\r\n      .on('click', (event, feature) => {\r\n        console.log(feature.properties['ST_NM']);\r\n        // setSelectedState(selectedState === feature ? null : feature);\r\n        navigate(`/${feature.properties['ST_NM']}`);\r\n      })\r\n      .attr('class', 'state')\r\n      .attr('fill', '#add8e6')\r\n      // .attr('fill-outline-color', 'rgba(250,180,195,1)')\r\n      .attr('transform', 'scale(.98)')\r\n      .transition()\r\n      .duration(2000)\r\n      .attr('d', (feature) => pathGenerator(feature));\r\n  }, [data, dimensions, selectedState, navigate]);\r\n\r\n  return (\r\n    <div\r\n      ref={wrapperRef}\r\n      style={{ width: '100%', height: '100%', paddingTop: '5px' }}\r\n      className='d-block w-100'\r\n    >\r\n      <svg ref={svgRef}></svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GeoChart;\r\n","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\IndiaVegetation.js",[],"C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\MapBox.js",["339","340"],"import React, { useEffect } from 'react';\r\n\r\nvar mapboxgl = require('mapbox-gl/dist/mapbox-gl.js');\r\n\r\nfunction MapBox({ area = 'india', url = 'aavaig2069.3d85qak1' }) {\r\n  const AreaToUrlMap = {\r\n    india: 'aavaig2069.3d85qak1',\r\n    'himachal pradesh': 'aavaig2069.cf5xtz0n',\r\n    gujarat: 'aavaig2069.32bs6f7z',\r\n    'tamil nadu': 'aavaig2069.8ty6aufg',\r\n  };\r\n\r\n  const loadMap = () => {\r\n    mapboxgl.accessToken =\r\n      'pk.eyJ1IjoiYWF2YWlnMjA2OSIsImEiOiJja3gyNjhkdG0xOTljMnBueTluZnA0YzFzIn0.eZB9Au7ertDodRUyEVQHZQ';\r\n    var map = new mapboxgl.Map({\r\n      container: 'mapbox-map',\r\n      style: 'mapbox://styles/mapbox/satellite-v9',\r\n      // style: 'mapbox://styles/mapbox/light-v10',\r\n      center: [78.9629, 20.5937],\r\n      zoom: 3.5,\r\n      minZoom: 3,\r\n    });\r\n\r\n    map.on('load', () => {\r\n      const layers = map.getStyle().layers;\r\n\r\n      let firstSymbolId;\r\n      for (const layer of layers) {\r\n        if (layer === 'symbol') {\r\n          firstSymbolId = layer.id;\r\n          break;\r\n        }\r\n      }\r\n\r\n      map.addSource('drone', {\r\n        type: 'raster',\r\n        url: `mapbox://${AreaToUrlMap[area]}`,\r\n      });\r\n\r\n      map.addLayer({\r\n        id: 'drone-layer',\r\n        type: 'raster',\r\n        source: 'drone',\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadMap();\r\n  }, []);\r\n\r\n  //   return <div id='mapbox-map'></div>;\r\n  return (\r\n    <div id='mapbox-map' style={{ height: '100%' }}>\r\n      Mapbox\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapBox;\r\n","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\IndiaClimate.js",[],"C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\gifMaps\\GujaratClimate.js",[],"C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\gifMaps\\HimachalPradeshVegetation.js",[],"C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\gifMaps\\GujaratVegetation.js",[],"C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\gifMaps\\TamilNaduClimate.js",[],"C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\gifMaps\\TamilNaduVegetation.js",[],"C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\gifMaps\\HimachalPradeshClimate.js",[],"C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\maps\\ComboChart\\ComboChart.js",[],"C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\maps\\LineChartJs\\LineChart3.js",[],"C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\maps\\LineChartJs\\LineChart.js",["341","342","343"],"C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\maps\\PieChart\\PieChart.js",["344","345"],"import React, { useState } from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport Chart from 'react-google-charts';\r\n\r\nfunction PieChart({ forestDataObject }) {\r\n  const [selectedYear, setSelectedYear] = useState(2019);\r\n  const [selectedIndex, setSelectedIndex] = useState(16);\r\n\r\n  const calculate = (val) => (val / 3287469) * 100;\r\n\r\n  return (\r\n    <div style={{ overflow: 'hidden', width: '100%' }}>\r\n      {forestDataObject.length !== 0 && (\r\n        <>\r\n          <div\r\n            className='forest-data-selector'\r\n            style={{ display: 'flex', alignItems: 'center' }}\r\n          >\r\n            <select\r\n              value={selectedIndex}\r\n              onChange={(e) => {\r\n                console.log(e.target.value);\r\n                setSelectedIndex(e.target.value);\r\n              }}\r\n            >\r\n              {forestDataObject.map((val, idx) => (\r\n                <option value={idx}>{forestDataObject[idx].year}</option>\r\n              ))}\r\n            </select>\r\n\r\n            <h3\r\n              className='title'\r\n              style={{ fontWeight: 700, fontSize: '20px', marginLeft: '40px' }}\r\n            >\r\n              Distribution of Types of Land Cover\r\n            </h3>\r\n          </div>\r\n          <Chart\r\n            // width={'100%'}\r\n            // height={'100%'}\r\n            chartType='PieChart'\r\n            loader={\r\n              <>\r\n                <div\r\n                  className='spinner'\r\n                  style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    height: '100%',\r\n                  }}\r\n                >\r\n                  <Spinner animation='border' variant='primary' />\r\n                </div>\r\n              </>\r\n            }\r\n            data={[\r\n              ['Forest Cover', '%Cover'],\r\n              [\r\n                'Very Dense Forest Cover (VDC)',\r\n                calculate(forestDataObject[selectedIndex]['VDC']),\r\n              ],\r\n              [\r\n                'Moderately Dense Forest Cover (MDC)',\r\n                calculate(forestDataObject[selectedIndex]['MDC']),\r\n              ],\r\n              [\r\n                'Mangrove Forest Cover (MFC)',\r\n                calculate(forestDataObject[selectedIndex]['MFC']),\r\n              ],\r\n              [\r\n                'Open Forest Area (OFA)',\r\n                calculate(forestDataObject[selectedIndex]['OFA']),\r\n              ],\r\n              [\r\n                'Scrub Land Area (SLA)',\r\n                calculate(forestDataObject[selectedIndex]['SLA']),\r\n              ],\r\n            ]}\r\n            options={{\r\n              // title: 'Forest Cover of 2019',\r\n              // Just add this option\r\n              // legend: 'non',\r\n              //   is3D: true,\r\n              slices: {\r\n                0: { color: '#FEBA69' },\r\n                1: { color: '#FF718B' },\r\n                2: { color: '#999' },\r\n                3: { color: '#8675FF' },\r\n                4: { color: '#69FFBB' },\r\n              },\r\n              pieSliceTextStyle: {\r\n                color: 'black',\r\n              },\r\n              backgroundColor: 'transparent',\r\n              chartArea: {\r\n                width: '100%',\r\n                height: '85%',\r\n                right: 0,\r\n                // left: '25%',\r\n              },\r\n              legend: {\r\n                position: 'labeled',\r\n                textStyle: { fontSize: 16 },\r\n              },\r\n            }}\r\n            rootProps={{ 'data-testid': '2' }}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PieChart;\r\n","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\maps\\BarChart\\Top5BarChart.js",[],"C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\maps\\LineChartJs\\LineChart2.js",["346"],"import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport Chart from 'react-google-charts';\r\n\r\nfunction LineChart2({ rainfall }) {\r\n  return (\r\n    <div style={{ height: '100% !important' }}>\r\n      {rainfall.length !== 0 && (\r\n        <Chart\r\n          // width={'100%'}\r\n          // height={'100%'}\r\n          chartType='LineChart'\r\n          data={[['Year', 'Annual Rainfall'], ...rainfall]}\r\n          options={{\r\n            title: 'Annual Rainfall Trendline',\r\n            titleTextStyle: {\r\n              fontSize: 18,\r\n            },\r\n            hAxis: {\r\n              title: 'Time',\r\n            },\r\n            vAxis: {\r\n              title: 'Annual Rainfall',\r\n            },\r\n            backgroundColor: 'transparent',\r\n            chartArea: {\r\n              width: '80%',\r\n              height: '100%',\r\n              top: '15%',\r\n              right: '8%',\r\n              left: '10%',\r\n              bottom: '15%',\r\n            },\r\n            legend: {\r\n              position: 'bottom',\r\n            },\r\n            lineWidth: 3,\r\n          }}\r\n          rootProps={{ 'data-testid': '1' }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineChart2;\r\n","C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\maps\\ComboChart\\ComboChart2.js",[],"C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\maps\\BarChart\\BarChart.js",[],"C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\maps\\BarChart\\Bottom5BarChart.js",[],"C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\components\\maps\\GaugeChart\\GaugeChart.js",[],"C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\hooks\\useResizeObserver.js",[],"C:\\Users\\AAVAIG\\Desktop\\Frontend\\src\\pages\\DataAnalysis.js",["347"],"import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport No2 from '../images/No2.jpg';\r\nimport so2 from '../images/so2.jpg';\r\nimport spm from '../images/so2.jpg';\r\n\r\nfunction DataAnalysis() {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'grid',\r\n        placeItems: 'center',\r\n      }}\r\n    >\r\n      <div className='content' style={{ width: '85%', height: '100%' }}>\r\n        <Row\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            margin: '2rem 0',\r\n          }}\r\n        >\r\n          <div className='heading' style={{ textAlign: 'center' }}>\r\n            <h1 style={{ fontWeight: 700, fontSize: '3rem' }}>\r\n              Detailed Analysis of NO2\r\n            </h1>\r\n          </div>\r\n          <div\r\n            className='image'\r\n            style={{\r\n              width: '85%',\r\n              height: '100%',\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            <img src={No2} alt='no2' />\r\n          </div>\r\n        </Row>\r\n\r\n        <Row\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            margin: '4rem 0 2rem 0',\r\n          }}\r\n        >\r\n          <div className='heading' style={{ textAlign: 'center' }}>\r\n            <h1 style={{ fontWeight: 700, fontSize: '3rem' }}>\r\n              Detailed Analysis of SO2\r\n            </h1>\r\n          </div>\r\n          <div\r\n            className='image'\r\n            style={{\r\n              width: '85%',\r\n              height: '100%',\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            <img src={so2} alt='so2' />\r\n          </div>\r\n        </Row>\r\n\r\n        <Row\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            margin: '4rem 0 0 0',\r\n          }}\r\n        >\r\n          <div className='heading' style={{ textAlign: 'center' }}>\r\n            <h1 style={{ fontWeight: 700, fontSize: '3rem' }}>\r\n              Detailed Analysis of SPM\r\n            </h1>\r\n          </div>\r\n          <div\r\n            className='image'\r\n            style={{\r\n              width: '85%',\r\n              height: '100%',\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            <img src={spm} alt='spm' />\r\n          </div>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataAnalysis;\r\n",{"ruleId":"348","replacedBy":"349"},{"ruleId":"350","replacedBy":"351"},{"ruleId":"352","severity":1,"message":"353","line":6,"column":10,"nodeType":"354","messageId":"355","endLine":6,"endColumn":16},{"ruleId":"352","severity":1,"message":"356","line":6,"column":18,"nodeType":"354","messageId":"355","endLine":6,"endColumn":27},{"ruleId":"352","severity":1,"message":"357","line":6,"column":29,"nodeType":"354","messageId":"355","endLine":6,"endColumn":32},{"ruleId":"352","severity":1,"message":"358","line":6,"column":34,"nodeType":"354","messageId":"355","endLine":6,"endColumn":37},{"ruleId":"352","severity":1,"message":"359","line":6,"column":39,"nodeType":"354","messageId":"355","endLine":6,"endColumn":45},{"ruleId":"352","severity":1,"message":"360","line":7,"column":3,"nodeType":"354","messageId":"355","endLine":7,"endColumn":14},{"ruleId":"352","severity":1,"message":"361","line":9,"column":3,"nodeType":"354","messageId":"355","endLine":9,"endColumn":11},{"ruleId":"352","severity":1,"message":"362","line":12,"column":3,"nodeType":"354","messageId":"355","endLine":12,"endColumn":11},{"ruleId":"352","severity":1,"message":"359","line":13,"column":3,"nodeType":"354","messageId":"355","endLine":13,"endColumn":9},{"ruleId":"352","severity":1,"message":"363","line":18,"column":3,"nodeType":"354","messageId":"355","endLine":18,"endColumn":8},{"ruleId":"352","severity":1,"message":"364","line":19,"column":3,"nodeType":"354","messageId":"355","endLine":19,"endColumn":15},{"ruleId":"352","severity":1,"message":"365","line":22,"column":10,"nodeType":"354","messageId":"355","endLine":22,"endColumn":19},{"ruleId":"352","severity":1,"message":"366","line":24,"column":8,"nodeType":"354","messageId":"355","endLine":24,"endColumn":17},{"ruleId":"352","severity":1,"message":"367","line":29,"column":8,"nodeType":"354","messageId":"355","endLine":29,"endColumn":16},{"ruleId":"352","severity":1,"message":"368","line":41,"column":10,"nodeType":"354","messageId":"355","endLine":41,"endColumn":24},{"ruleId":"352","severity":1,"message":"369","line":41,"column":26,"nodeType":"354","messageId":"355","endLine":41,"endColumn":43},{"ruleId":"352","severity":1,"message":"370","line":43,"column":10,"nodeType":"354","messageId":"355","endLine":43,"endColumn":19},{"ruleId":"352","severity":1,"message":"371","line":43,"column":21,"nodeType":"354","messageId":"355","endLine":43,"endColumn":33},{"ruleId":"352","severity":1,"message":"372","line":54,"column":10,"nodeType":"354","messageId":"355","endLine":54,"endColumn":17},{"ruleId":"352","severity":1,"message":"373","line":54,"column":19,"nodeType":"354","messageId":"355","endLine":54,"endColumn":29},{"ruleId":"374","severity":1,"message":"375","line":290,"column":6,"nodeType":"376","endLine":290,"endColumn":22,"suggestions":"377"},{"ruleId":"374","severity":1,"message":"378","line":294,"column":6,"nodeType":"376","endLine":294,"endColumn":21,"suggestions":"379"},{"ruleId":"352","severity":1,"message":"380","line":2,"column":21,"nodeType":"354","messageId":"355","endLine":2,"endColumn":24},{"ruleId":"352","severity":1,"message":"381","line":2,"column":34,"nodeType":"354","messageId":"355","endLine":2,"endColumn":45},{"ruleId":"352","severity":1,"message":"364","line":3,"column":8,"nodeType":"354","messageId":"355","endLine":3,"endColumn":20},{"ruleId":"352","severity":1,"message":"382","line":1,"column":28,"nodeType":"354","messageId":"355","endLine":1,"endColumn":36},{"ruleId":"352","severity":1,"message":"383","line":31,"column":11,"nodeType":"354","messageId":"355","endLine":31,"endColumn":24},{"ruleId":"374","severity":1,"message":"384","line":51,"column":6,"nodeType":"376","endLine":51,"endColumn":8,"suggestions":"385"},{"ruleId":"352","severity":1,"message":"386","line":2,"column":40,"nodeType":"354","messageId":"355","endLine":2,"endColumn":43},{"ruleId":"352","severity":1,"message":"387","line":2,"column":45,"nodeType":"354","messageId":"355","endLine":2,"endColumn":48},{"ruleId":"352","severity":1,"message":"388","line":2,"column":50,"nodeType":"354","messageId":"355","endLine":2,"endColumn":61},{"ruleId":"352","severity":1,"message":"353","line":4,"column":10,"nodeType":"354","messageId":"355","endLine":4,"endColumn":16},{"ruleId":"352","severity":1,"message":"360","line":4,"column":18,"nodeType":"354","messageId":"355","endLine":4,"endColumn":29},{"ruleId":"352","severity":1,"message":"389","line":12,"column":25,"nodeType":"354","messageId":"355","endLine":12,"endColumn":41},{"ruleId":"374","severity":1,"message":"390","line":43,"column":6,"nodeType":"376","endLine":43,"endColumn":39,"suggestions":"391"},{"ruleId":"352","severity":1,"message":"392","line":1,"column":27,"nodeType":"354","messageId":"355","endLine":1,"endColumn":36},{"ruleId":"352","severity":1,"message":"393","line":2,"column":8,"nodeType":"354","messageId":"355","endLine":2,"endColumn":15},{"ruleId":"352","severity":1,"message":"394","line":7,"column":10,"nodeType":"354","messageId":"355","endLine":7,"endColumn":15},{"ruleId":"352","severity":1,"message":"395","line":7,"column":17,"nodeType":"354","messageId":"355","endLine":7,"endColumn":25},{"ruleId":"352","severity":1,"message":"396","line":8,"column":10,"nodeType":"354","messageId":"355","endLine":8,"endColumn":22},{"ruleId":"352","severity":1,"message":"397","line":8,"column":24,"nodeType":"354","messageId":"355","endLine":8,"endColumn":39},{"ruleId":"352","severity":1,"message":"382","line":1,"column":17,"nodeType":"354","messageId":"355","endLine":1,"endColumn":25},{"ruleId":"352","severity":1,"message":"392","line":1,"column":27,"nodeType":"354","messageId":"355","endLine":1,"endColumn":36},{"ruleId":"352","severity":1,"message":"398","line":3,"column":18,"nodeType":"354","messageId":"355","endLine":3,"endColumn":24},{"ruleId":"352","severity":1,"message":"396","line":6,"column":10,"nodeType":"354","messageId":"355","endLine":6,"endColumn":22},{"ruleId":"352","severity":1,"message":"397","line":6,"column":24,"nodeType":"354","messageId":"355","endLine":6,"endColumn":39},{"ruleId":"352","severity":1,"message":"353","line":6,"column":3,"nodeType":"354","messageId":"355","endLine":6,"endColumn":9},{"ruleId":"352","severity":1,"message":"360","line":7,"column":3,"nodeType":"354","messageId":"355","endLine":7,"endColumn":14},{"ruleId":"352","severity":1,"message":"361","line":9,"column":3,"nodeType":"354","messageId":"355","endLine":9,"endColumn":11},{"ruleId":"352","severity":1,"message":"359","line":12,"column":3,"nodeType":"354","messageId":"355","endLine":12,"endColumn":9},{"ruleId":"352","severity":1,"message":"363","line":15,"column":3,"nodeType":"354","messageId":"355","endLine":15,"endColumn":8},{"ruleId":"352","severity":1,"message":"364","line":16,"column":3,"nodeType":"354","messageId":"355","endLine":16,"endColumn":15},{"ruleId":"352","severity":1,"message":"365","line":18,"column":10,"nodeType":"354","messageId":"355","endLine":18,"endColumn":19},{"ruleId":"352","severity":1,"message":"366","line":20,"column":8,"nodeType":"354","messageId":"355","endLine":20,"endColumn":17},{"ruleId":"352","severity":1,"message":"367","line":25,"column":8,"nodeType":"354","messageId":"355","endLine":25,"endColumn":16},{"ruleId":"352","severity":1,"message":"399","line":28,"column":8,"nodeType":"354","messageId":"355","endLine":28,"endColumn":23},{"ruleId":"352","severity":1,"message":"400","line":29,"column":8,"nodeType":"354","messageId":"355","endLine":29,"endColumn":20},{"ruleId":"352","severity":1,"message":"368","line":44,"column":10,"nodeType":"354","messageId":"355","endLine":44,"endColumn":24},{"ruleId":"352","severity":1,"message":"369","line":44,"column":26,"nodeType":"354","messageId":"355","endLine":44,"endColumn":43},{"ruleId":"352","severity":1,"message":"370","line":46,"column":10,"nodeType":"354","messageId":"355","endLine":46,"endColumn":19},{"ruleId":"352","severity":1,"message":"371","line":46,"column":21,"nodeType":"354","messageId":"355","endLine":46,"endColumn":33},{"ruleId":"352","severity":1,"message":"401","line":62,"column":9,"nodeType":"354","messageId":"355","endLine":62,"endColumn":28},{"ruleId":"352","severity":1,"message":"402","line":68,"column":9,"nodeType":"354","messageId":"355","endLine":68,"endColumn":25},{"ruleId":"374","severity":1,"message":"403","line":206,"column":6,"nodeType":"376","endLine":206,"endColumn":22,"suggestions":"404"},{"ruleId":"352","severity":1,"message":"360","line":7,"column":3,"nodeType":"354","messageId":"355","endLine":7,"endColumn":14},{"ruleId":"352","severity":1,"message":"361","line":9,"column":3,"nodeType":"354","messageId":"355","endLine":9,"endColumn":11},{"ruleId":"352","severity":1,"message":"362","line":12,"column":3,"nodeType":"354","messageId":"355","endLine":12,"endColumn":11},{"ruleId":"352","severity":1,"message":"359","line":13,"column":3,"nodeType":"354","messageId":"355","endLine":13,"endColumn":9},{"ruleId":"352","severity":1,"message":"363","line":18,"column":3,"nodeType":"354","messageId":"355","endLine":18,"endColumn":8},{"ruleId":"352","severity":1,"message":"364","line":19,"column":3,"nodeType":"354","messageId":"355","endLine":19,"endColumn":15},{"ruleId":"352","severity":1,"message":"365","line":22,"column":10,"nodeType":"354","messageId":"355","endLine":22,"endColumn":19},{"ruleId":"352","severity":1,"message":"366","line":24,"column":8,"nodeType":"354","messageId":"355","endLine":24,"endColumn":17},{"ruleId":"352","severity":1,"message":"367","line":29,"column":8,"nodeType":"354","messageId":"355","endLine":29,"endColumn":16},{"ruleId":"352","severity":1,"message":"368","line":46,"column":10,"nodeType":"354","messageId":"355","endLine":46,"endColumn":24},{"ruleId":"352","severity":1,"message":"369","line":46,"column":26,"nodeType":"354","messageId":"355","endLine":46,"endColumn":43},{"ruleId":"352","severity":1,"message":"370","line":48,"column":10,"nodeType":"354","messageId":"355","endLine":48,"endColumn":19},{"ruleId":"352","severity":1,"message":"371","line":48,"column":21,"nodeType":"354","messageId":"355","endLine":48,"endColumn":33},{"ruleId":"352","severity":1,"message":"372","line":59,"column":10,"nodeType":"354","messageId":"355","endLine":59,"endColumn":17},{"ruleId":"352","severity":1,"message":"373","line":59,"column":19,"nodeType":"354","messageId":"355","endLine":59,"endColumn":29},{"ruleId":"374","severity":1,"message":"375","line":326,"column":6,"nodeType":"376","endLine":326,"endColumn":22,"suggestions":"405"},{"ruleId":"374","severity":1,"message":"378","line":331,"column":6,"nodeType":"376","endLine":331,"endColumn":21,"suggestions":"406"},{"ruleId":"352","severity":1,"message":"353","line":6,"column":3,"nodeType":"354","messageId":"355","endLine":6,"endColumn":9},{"ruleId":"352","severity":1,"message":"360","line":7,"column":3,"nodeType":"354","messageId":"355","endLine":7,"endColumn":14},{"ruleId":"352","severity":1,"message":"361","line":9,"column":3,"nodeType":"354","messageId":"355","endLine":9,"endColumn":11},{"ruleId":"352","severity":1,"message":"359","line":12,"column":3,"nodeType":"354","messageId":"355","endLine":12,"endColumn":9},{"ruleId":"352","severity":1,"message":"363","line":15,"column":3,"nodeType":"354","messageId":"355","endLine":15,"endColumn":8},{"ruleId":"352","severity":1,"message":"364","line":16,"column":3,"nodeType":"354","messageId":"355","endLine":16,"endColumn":15},{"ruleId":"352","severity":1,"message":"365","line":18,"column":10,"nodeType":"354","messageId":"355","endLine":18,"endColumn":19},{"ruleId":"352","severity":1,"message":"366","line":20,"column":8,"nodeType":"354","messageId":"355","endLine":20,"endColumn":17},{"ruleId":"352","severity":1,"message":"367","line":25,"column":8,"nodeType":"354","messageId":"355","endLine":25,"endColumn":16},{"ruleId":"352","severity":1,"message":"399","line":28,"column":8,"nodeType":"354","messageId":"355","endLine":28,"endColumn":23},{"ruleId":"352","severity":1,"message":"400","line":29,"column":8,"nodeType":"354","messageId":"355","endLine":29,"endColumn":20},{"ruleId":"352","severity":1,"message":"368","line":52,"column":10,"nodeType":"354","messageId":"355","endLine":52,"endColumn":24},{"ruleId":"352","severity":1,"message":"369","line":52,"column":26,"nodeType":"354","messageId":"355","endLine":52,"endColumn":43},{"ruleId":"352","severity":1,"message":"370","line":54,"column":10,"nodeType":"354","messageId":"355","endLine":54,"endColumn":19},{"ruleId":"352","severity":1,"message":"371","line":54,"column":21,"nodeType":"354","messageId":"355","endLine":54,"endColumn":33},{"ruleId":"352","severity":1,"message":"401","line":70,"column":9,"nodeType":"354","messageId":"355","endLine":70,"endColumn":28},{"ruleId":"352","severity":1,"message":"402","line":76,"column":9,"nodeType":"354","messageId":"355","endLine":76,"endColumn":25},{"ruleId":"374","severity":1,"message":"403","line":213,"column":6,"nodeType":"376","endLine":213,"endColumn":22,"suggestions":"407"},{"ruleId":"352","severity":1,"message":"380","line":3,"column":21,"nodeType":"354","messageId":"355","endLine":3,"endColumn":24},{"ruleId":"352","severity":1,"message":"381","line":3,"column":34,"nodeType":"354","messageId":"355","endLine":3,"endColumn":45},{"ruleId":"352","severity":1,"message":"364","line":4,"column":8,"nodeType":"354","messageId":"355","endLine":4,"endColumn":20},{"ruleId":"352","severity":1,"message":"389","line":12,"column":25,"nodeType":"354","messageId":"355","endLine":12,"endColumn":41},{"ruleId":"352","severity":1,"message":"383","line":31,"column":11,"nodeType":"354","messageId":"355","endLine":31,"endColumn":24},{"ruleId":"374","severity":1,"message":"384","line":51,"column":6,"nodeType":"376","endLine":51,"endColumn":8,"suggestions":"408"},{"ruleId":"352","severity":1,"message":"382","line":1,"column":17,"nodeType":"354","messageId":"355","endLine":1,"endColumn":25},{"ruleId":"352","severity":1,"message":"392","line":1,"column":27,"nodeType":"354","messageId":"355","endLine":1,"endColumn":36},{"ruleId":"352","severity":1,"message":"398","line":3,"column":18,"nodeType":"354","messageId":"355","endLine":3,"endColumn":24},{"ruleId":"352","severity":1,"message":"396","line":6,"column":10,"nodeType":"354","messageId":"355","endLine":6,"endColumn":22},{"ruleId":"352","severity":1,"message":"397","line":6,"column":24,"nodeType":"354","messageId":"355","endLine":6,"endColumn":39},{"ruleId":"352","severity":1,"message":"409","line":2,"column":10,"nodeType":"354","messageId":"355","endLine":2,"endColumn":17},{"ruleId":"352","severity":1,"message":"358","line":2,"column":15,"nodeType":"354","messageId":"355","endLine":2,"endColumn":18},"no-native-reassign",["410"],"no-negated-in-lhs",["411"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Figure' is defined but never used.","'ButtonGroup' is defined but never used.","'Carousel' is defined but never used.","'Dropdown' is defined but never used.","'Table' is defined but never used.","'ToggleButton' is defined but never used.","'FaArrowUp' is defined but never used.","'LineChart' is defined but never used.","'BarChart' is defined but never used.","'normalSelected' is assigned a value but never used.","'setNormalSelected' is assigned a value but never used.","'indiaData' is assigned a value but never used.","'setIndiaData' is assigned a value but never used.","'descVal' is assigned a value but never used.","'setDescVal' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchData' and 'getTweetRating'. Either include them or remove the dependency array.","ArrayExpression",["412"],"React Hook useEffect has a missing dependency: 'stateData'. Either include it or remove the dependency array.",["413"],"'Nav' is defined but never used.","'NavDropdown' is defined but never used.","'useState' is defined but never used.","'firstSymbolId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadMap'. Either include it or remove the dependency array.",["414"],"'min' is defined but never used.","'max' is defined but never used.","'scaleLinear' is defined but never used.","'setSelectedState' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["415"],"'useEffect' is defined but never used.","'TreeMap' is defined but never used.","'years' is assigned a value but never used.","'setYears' is assigned a value but never used.","'selectedYear' is assigned a value but never used.","'setSelectedYear' is assigned a value but never used.","'LineJS' is defined but never used.","'IndiaVegetation' is defined but never used.","'IndiaClimate' is defined but never used.","'ComponentVegetation' is assigned a value but never used.","'ComponentClimate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["416"],["417"],["418"],["419"],["420"],"'Spinner' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"421","fix":"422"},{"desc":"423","fix":"424"},{"desc":"425","fix":"426"},{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},{"desc":"421","fix":"431"},{"desc":"423","fix":"432"},{"desc":"429","fix":"433"},{"desc":"425","fix":"434"},"Update the dependencies array to be: [dataApi.length, fetchData, getTweetRating]",{"range":"435","text":"436"},"Update the dependencies array to be: [stateData, topBottomYear]",{"range":"437","text":"438"},"Update the dependencies array to be: [loadMap]",{"range":"439","text":"440"},"Update the dependencies array to be: [data, dimensions, navigate, selectedState]",{"range":"441","text":"442"},"Update the dependencies array to be: [dataApi.length, fetchData]",{"range":"443","text":"444"},{"range":"445","text":"436"},{"range":"446","text":"438"},{"range":"447","text":"444"},{"range":"448","text":"440"},[8675,8691],"[dataApi.length, fetchData, getTweetRating]",[8754,8769],"[stateData, topBottomYear]",[1330,1332],"[loadMap]",[1491,1524],"[data, dimensions, navigate, selectedState]",[6470,6486],"[dataApi.length, fetchData]",[9514,9530],[9629,9644],[6603,6619],[1320,1322]]